{"version":3,"sources":["../../../Warhammer/AOS Reminders/src/components/helpers/link.tsx","../../../Warhammer/AOS Reminders/src/types/import.ts","../../../Warhammer/AOS Reminders/src/utils/import/options.ts","../../../Warhammer/AOS Reminders/src/components/input/select.tsx","../../../Warhammer/AOS Reminders/src/utils/getSideEffects.ts","../../../Warhammer/AOS Reminders/src/utils/withSelect.ts","../../../Warhammer/AOS Reminders/src/components/input/toggle_game_mode.tsx","../../../Warhammer/AOS Reminders/src/components/page/homeHeader.tsx","../../../Warhammer/AOS Reminders/src/components/routes/Home.tsx"],"names":["LinkNewTab","_ref","href","children","label","props","_jsx","target","rel","LinkButton","Icon","btnClass","text","isMobile","useWindowSize","className","concat","onClick","e","logClick","_jsxs","centerContentClass","AZYR","BATTLESCRIBE","UNKNOWN","WARHAMMER_APP","WARSCROLL_BUILDER","HTML_FILE","PDF_FILE","TXT_FILE","azyrTypoMap","warhammerAppTypoMap","Nagash","ignoredUnknownSelections","factionToFlavorMap","importUnitOptionMap","importFactionNameMap","factionName","STORMCAST_ETERNALS","subFactionName","StormcastFaction","subFactionKeyMap","OGOR_MAWTRIBES","BEASTS_OF_CHAOS","ORRUK_WARCLANS","OrrukWarclansFaction","KHORNE","CITIES_OF_SIGMAR","SKAVEN","DAUGHTERS_OF_KHAINE","TZEENTCH","SLAVES_TO_DARKNESS","SlavesToDarknessFaction","FLESH_EATER_COURTS","GLOOMSPITE_GITZ","LEGIONS_OF_NAGASH","LegionsOfNagashFaction","MERCENARY_COMPANIES","SLAANESH","IDONETH_DEEPKIN","KHARADRON_OVERLORDS","LEGION_OF_AZGORH","LEGION_OF_THE_FIRST_PRINCE","LEGION_OF_GRIEF","LETHISIAN_DEFENDERS","LUMINETH_REALMLORDS","NURGLE","OSSIARCH_BONEREAPERS","SONS_OF_BEHEMAT","SOULBLIGHT_GRAVELORDS","ORDER_GRAND_ALLIANCE","TOMB_KINGS","Brayherd","Death","DEATH_GRAND_ALLIANCE","Destruction","DESTRUCTION_GRAND_ALLIANCE","Dispossessed","DISPOSSESSED","Everchosen","Fyreslayers","FYRESLAYERS","Greenskinz","GREENSKINZ","Gutbusters","Ironjawz","Khorne","Kruleboyz","Lethisian","Lumineth","Nighthaunt","NIGHTHAUNT","Nurgle","Order","Rampagers","Seraphon","SERAPHON","Skaven","Skaventide","Slaanesh","Soulblight","Sylvaneth","SYLVANETH","Thunderscorn","Tzeentch","Wanderers","WANDERERS","Warherds","DEPRECATED_MALIGN_SORCERY","DEPRECATED_AOS_3","DeprecatedSelections","Abattoir","Alfrostun","Amberglaive","Bloodforged","Chainguard","Changehost","Deadwatch","Deathmarch","Deathriders","Eurlbad","Ghyrstrike","Gildenbane","Glimmering","Gobbapalooza","Gorechosen","Goremand","Household","Jorlbad","Junkmob","Lifebane","Lightshard","Murderhost","Outcasts","Phalanx","Rageblade","Rockjaws","Scathcoven","Shroudguard","Skal","Skulltake","Slaughterborn","Slinktalon","Spellmirror","Splintertooth","Squigalanche","Sunblade","Torrbad","Troggherd","Tuskhelm","Wargrove","Wraithbow","parserOptions","ambiguousNamesMap","checkPoorSpacing","fileReadError","typoMap","Ogors","Razordons","Salamanders","Vindicators","Evocators","Loonboss","Asylumticae","BRIOMIDAR","Kroxigors","Protector","Voxaxe","SelectOne","hasDefault","filterOption","isClearable","isDisabled","items","log","setValue","toTitle","value","theme","useTheme","options","convertToOptions","controlledValue","onChange","useCallback","action","logIndividualSelection","title","selectProps","defaultValue","isMulti","isSearchable","undefined","_Fragment","Select","defaultTheme","colors","selectTheme","arguments","length","map","i","titleCase","SelectMulti","setValues","values","selectValues","handleChange","_action$option","option","closeMenuOnSelect","getSideEffects","reduce","accum","item","name","checkForMandatory","effects","forEach","effect","checkEffects","itemName","addedToAccum","Object","keys","entryKeyToSelectionsKey","key","addToAccum","effectName","type","uniq","accumKey","mandatory","sliceKey","_item$mandatory","slice","mergeParentEffectObjs","_entry","withSelectOne","method","selectValue","withSelectMultipleWithPayload","payload","dispatch","store","x","withSelectMultiWithSideEffects","includes","_slice","sideEffectVals","selectionActions","addToSelections","trait","val","handleSelectOneSideEffects","entries","_ref2","_key","_value","ToggleGameMode","isGameMode","toggleGameMode","useAppStatus","spanClass","enableEditMode","htmlFor","Switch","checked","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","id","enableGameMode","Navbar","lazy","resetAllySelections","resetSelections","resetSideEffects","removeSelections","resetRealmscapeStore","realmscapeActions","setFactionName","setSubFactionName","factionNamesActions","Header","headerColor","Suspense","fallback","LoadingHeader","Jumbotron","loadedArmy","useSavedArmies","useSelector","selectors","selectFactionName","jumboClass","armyName","FactionSelectComponent","SubFactionSelectComponent","filterFactionsAndSubfactions","inputValue","inputValueLower","toLowerCase","viaSubfaction","a","faction","push","useDispatch","isOnline","setLoadedArmy","resetAnalyticsStore","subFactionKeys","SubFactions","getFactionFromList","sideEffects","logFactionSwitch","logSubFactionSwitch","PRIMARY_FACTIONS","selectFactionNameSlice","origin_realm","realmscape","selectRealmscapeSlice","selectSideEffects","factionInfo","useMemo","army","getArmy","validKeysInArmy","Artifacts","Battalions","CommandAbilities","CommandTraits","EndlessSpells","Flavors","MountTraits","Prayers","Scenery","Spells","Triumphs","Units","Manifestations","y","flat","sideEffectKeysToRemoveFromSelections","_ref3","_k","_v","AlliedArmies","AppBanner","ArmyBuilder","FooterComponent","LoadedArmyHeader","PrintArmy","PrintFooter","Reminders","Toolbar","UpdateBanner","Home","getSubscription","useSubscription","useEffect","logPageView","bgColor","LargeSpinner"],"mappings":"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","file":"static/js/17.a71f24ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport { IconType } from 'react-icons'\r\nimport { centerContentClass } from 'theme/helperClasses'\r\nimport { logClick } from 'utils/analytics'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\n\r\ninterface ILinkProps {\r\n  className?: string\r\n  href: string\r\n  label: string\r\n  onClick?: (...args: any[]) => void\r\n}\r\n\r\nexport const LinkNewTab = ({ href, children, label, ...props }: React.PropsWithChildren<ILinkProps>) => (\r\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" aria-label={label} {...props}>\r\n    {children}\r\n  </a>\r\n)\r\n\r\ninterface ILinkBtnProps {\r\n  href: string\r\n  btnClass: string\r\n  Icon: IconType\r\n  text: string\r\n}\r\n\r\nexport const LinkButton = (props: ILinkBtnProps) => {\r\n  const { Icon, href, btnClass, text } = props\r\n  const { isMobile } = useWindowSize()\r\n\r\n  return (\r\n    <LinkNewTab\r\n      href={href}\r\n      className={`${btnClass} mb-1`}\r\n      onClick={e => logClick(`Contact-${text}`)}\r\n      label={text}\r\n    >\r\n      <div className={centerContentClass}>\r\n        <Icon className={isMobile ? `mx-2 my-1` : `mr-2`} />\r\n        {isMobile ? `` : ` ${text}`}\r\n      </div>\r\n    </LinkNewTab>\r\n  )\r\n}\r\n","import { TSupportedFaction } from 'meta/factions'\r\nimport { ICurrentArmy } from 'types/army'\r\nimport { RealmscapesEnum } from 'types/realmscapes'\r\nimport { ILinkedArmy, ISavedArmyFromApi } from 'types/savedArmy'\r\nimport { TSelections } from 'types/selections'\r\nimport { TAllySelectionStore } from 'types/store'\r\n\r\nexport interface IImportedArmy {\r\n  allyFactionNames: TSupportedFaction[]\r\n  allySelections: TAllySelectionStore\r\n  allyUnits: string[]\r\n  errors: TImportError[]\r\n  factionName: TSupportedFaction\r\n  subFactionName: string\r\n  hiddenReminders?: undefined\r\n  origin_realm: RealmscapesEnum | null\r\n  realmscape_feature: string | null\r\n  realmscape: RealmscapesEnum | null\r\n  selections: TSelections\r\n  unknownSelections: string[]\r\n}\r\n\r\nexport type TLoadedArmy =\r\n  | ISavedArmyFromApi\r\n  | IImportedArmy\r\n  | ILinkedArmy\r\n  | (ICurrentArmy & { hiddenReminders: string[] })\r\n\r\nexport type TImportError = {\r\n  text: string\r\n  severity: 'warn' | 'error' | 'ally-warn' | 'ambiguity-warn' | 'deprecation-warn'\r\n  reason?: string\r\n}\r\n\r\ntype THtmlFile = 'text/html'\r\ntype TPdfFile = 'application/pdf'\r\ntype TTextFile = 'text/plain'\r\n\r\nexport type TImportFileTypes = TPdfFile | THtmlFile | TTextFile\r\n\r\ntype TAzyr = 'Azyr'\r\ntype TBattlescribe = 'Battlescribe'\r\ntype TUnknown = 'Unknown'\r\ntype TWarhammerApp = 'Warhammer App'\r\ntype TWarscrollBuilder = 'Warscroll Builder'\r\n\r\nexport type TImportParsers = TWarscrollBuilder | TWarhammerApp | TAzyr | TBattlescribe | TUnknown\r\n\r\nexport const AZYR: TAzyr = 'Azyr'\r\nexport const BATTLESCRIBE: TBattlescribe = 'Battlescribe'\r\nexport const UNKNOWN: TUnknown = 'Unknown'\r\nexport const WARHAMMER_APP: TWarhammerApp = 'Warhammer App'\r\nexport const WARSCROLL_BUILDER: TWarscrollBuilder = 'Warscroll Builder'\r\n\r\nexport const HTML_FILE: THtmlFile = 'text/html'\r\nexport const PDF_FILE: TPdfFile = 'application/pdf'\r\nexport const TXT_FILE: TTextFile = 'text/plain'\r\n","import { LegionsOfNagashFaction } from 'factions/legions_of_nagash'\r\nimport { OrrukWarclansFaction } from 'factions/orruk_warclans'\r\nimport { SlavesToDarknessFaction } from 'factions/slaves_to_darkness'\r\nimport { StormcastFaction } from 'factions/stormcast_eternals'\r\nimport {\r\n  BEASTS_OF_CHAOS,\r\n  // JS CHAOS_GRAND_ALLIANCE,\r\n  CITIES_OF_SIGMAR,\r\n  DAUGHTERS_OF_KHAINE,\r\n  DEATH_GRAND_ALLIANCE,\r\n  DESTRUCTION_GRAND_ALLIANCE,\r\n  DISPOSSESSED,\r\n  FLESH_EATER_COURTS,\r\n  FYRESLAYERS,\r\n  GLOOMSPITE_GITZ,\r\n  GREENSKINZ,\r\n  IDONETH_DEEPKIN,\r\n  KHARADRON_OVERLORDS,\r\n  KHORNE,\r\n  LEGIONS_OF_NAGASH,\r\n  LEGION_OF_AZGORH,\r\n  LEGION_OF_GRIEF,\r\n  LEGION_OF_THE_FIRST_PRINCE,\r\n  LETHISIAN_DEFENDERS,\r\n  LUMINETH_REALMLORDS,\r\n  MERCENARY_COMPANIES,\r\n  NIGHTHAUNT,\r\n  NURGLE,\r\n  OGOR_MAWTRIBES,\r\n  ORDER_GRAND_ALLIANCE,\r\n  ORRUK_WARCLANS,\r\n  OSSIARCH_BONEREAPERS,\r\n  SERAPHON,\r\n  SKAVEN,\r\n  SLAANESH,\r\n  SLAVES_TO_DARKNESS,\r\n  SONS_OF_BEHEMAT,\r\n  SOULBLIGHT_GRAVELORDS,\r\n  STORMCAST_ETERNALS,\r\n  SYLVANETH,\r\n  TOMB_KINGS,\r\n  TSupportedFaction,\r\n  TZEENTCH,\r\n  WANDERERS,\r\n} from 'meta/factions'\r\nimport { AZYR, BATTLESCRIBE, TImportParsers, UNKNOWN, WARHAMMER_APP, WARSCROLL_BUILDER } from 'types/import'\r\n\r\n// Add common typos here\r\n// Warscroll Builder on the left - AoS Reminders on the right\r\nconst warscrollTypoMap: Record<string, string> = {\r\n  'Abhorrant Ghoul King on Terrorgheist': 'Abhorrant Ghoul King on Royal Terrorgheist',\r\n  'Alarith Afterschock': 'Alarith Aftershock',\r\n  'Anointed of Asuryan on Flamespyre Phoenix': 'Anointed on Flamespyre Phoenix',\r\n  'Anointed of Asuryan on Frostheart Phoenix': 'Anointed on Frostheart Phoenix',\r\n  'Arch Sorcerer': 'Arch-Sorcerer',\r\n  'Archmage Teclis and Celennar, Spirit of Hysh': 'Archmage Teclis',\r\n  'Armor of Silvered Sigmarite': 'Amulet of Silvered Sigmarite',\r\n  'Armour of Silvered Sigmarite': 'Amulet of Silvered Sigmarite',\r\n  'Aventis Firestrike Magister of Hammerhal': 'Aventis Firestrike',\r\n  'Bastiladon with Ark of Sotek': 'Bastiladon',\r\n  'Bastiladon with Solar Engine': 'Bastiladon',\r\n  'Belladamma Volga, First of the Vyrkos': 'Belladamma Volga',\r\n  'Belthanos, First Thorn of Kurnoth': 'Belthanos',\r\n  'Berzerker Lord': 'Berserker Lord',\r\n  'Blade of All Frost': 'Blade of All-Frost',\r\n  'Blade of the All-Frost': 'Blade of All-Frost',\r\n  'Blue Horrors of Tzeentch': 'Horrors of Tzeentch',\r\n  'Bosses of the Stomp - Magnificent': 'Bosses of the Stomp (Magnificent)',\r\n  'Bosses of the Stomp - Unified': 'Bosses of the Stomp (Unified)',\r\n  'Bound The Burning Head': 'Bound Burning Head',\r\n  'Bracers of Ember-iron': 'Bracers of Ember Iron',\r\n  'Brain-busta': 'Brain-bursta',\r\n  'Brand of the Spirit Daemon': 'Brand of the Split Daemon',\r\n  'Brimstone Horrors of Tzeentch': 'Horrors of Tzeentch',\r\n  'Brute Fist': 'BruteFist',\r\n  'Bursting with Power': \"Burstin' with Power\",\r\n  'Cado Ezechiar, The Hollow King': 'Cado Ezechiar',\r\n  'Celestant-Prime, Hammer of Sigmar': 'Celestant-Prime',\r\n  'Chaos Gorebeast Chariots': 'Gorebeast Chariots',\r\n  'Corpse Cart with Balefire Brazier': 'Corpse Cart w/ Balefire Brazier',\r\n  'Corpse Cart with Unholy Lodestone': 'Corpse Cart w/ Unholy Lodestone',\r\n  'Dabbling in Sorcery': 'Dabblings in Sorcery (Anvilgard Battle Trait)',\r\n  'Dark Wizardy': 'Dark Wizardry (Royalty)',\r\n  'Devoted Desciples': 'Devoted Disciple',\r\n  'Devoted Disciples': 'Devoted Disciple',\r\n  'Eternal Conflaguration': 'The Eternal Conflagration',\r\n  'Ethereal Blessing': 'Etheral Blessings',\r\n  'Evocators on Dracolines': 'Evocators on Celestial Dracolines',\r\n  'Exalted Deathbringer with Impaling Spear': 'Exalted Deathbringer',\r\n  'Exalted Greater Daemon of Tzeentch': 'Exalted Greater Demon of Tzeentch',\r\n  'Explosize Charge': 'Explosive Charge',\r\n  'Extend Astomatrix': 'Extend Astromatrix',\r\n  'Eyes of the Nine': 'The Eyes of the Nine',\r\n  'Flash of Daemonblood': 'Flask of Daemonblood',\r\n  'Flayed (Host of Chaos)': 'The Flayed',\r\n  'Footsloggas - Swift': 'Footsloggas (Swift)',\r\n  'Footsloggas - Unified': 'Footsloggas (Unified)',\r\n  'Fusil of Conflaguration': 'Fusil of Conflagration',\r\n  'Gatebreaker Mega-Gargant': 'Gatebreaker',\r\n  'Gobsprakk, The Mouth of Mork': 'Gobsprakk',\r\n  'Great Bray Shaman of Slaanesh': 'Great Bray-Shaman',\r\n  'Great Bray Shaman of Tzeentch': 'Great Bray-Shaman',\r\n  'Great Bray Shaman': 'Great Bray-Shaman',\r\n  'Great-Bray Shaman': 'Great Bray-Shaman',\r\n  'Gristlegore Royal Terrorgheist': 'Royal Terrorgheist',\r\n  'Gristlegore Royal Zombie Dragon': 'Royal Zombie Dragon',\r\n  'Grot Scraplauncher': 'Gnoblar Scraplauncher',\r\n  'Guardian of Souls with Nightmare Lantern': 'Guardian of Souls',\r\n  'Hammers of Aurgury': 'Hammers of Augury',\r\n  'Hedrakka, Gob of Mork': 'Hedkrakka, Gob of Gork',\r\n  'Horn of Consort': 'Horn of the Consort',\r\n  'Horrible Resilient': 'Horribly Resilient',\r\n  'Idolator Chaos Warshrine': 'Chaos Warshrine',\r\n  'In and Out, Lads': 'In and Out, Ladz',\r\n  'Katakros, Mortarch of the Necropolis': 'Katakros',\r\n  'Khorghos Khul': 'Korghos Khul',\r\n  'Knight Vexillor with Banner of Apotheosis': 'Knight-Vexillor with Banner of Apotheosis',\r\n  'Knights of the Empty Throne Varanguard': 'Varanguard',\r\n  'Kragnos, The End of Empires': 'Kragnos',\r\n  'Kraken-eater Mega-Gargant': 'Kraken-eater',\r\n  'Kritza, the Rat Prince': 'Kritza',\r\n  'Krondys, Son of Dracothion': 'Krondys',\r\n  'Kurnoth Hunters with Kurnoth Greatbows': 'Kurnoth Hunters',\r\n  'Kurnoth Hunters with Kurnoth Greatswords': 'Kurnoth Hunters',\r\n  'Kurnoth Hunters with Kurnoth Scythes': 'Kurnoth Hunters',\r\n  'Lady Annika, the Thirsting Blade': 'Lady Annika',\r\n  'Lauka Vai, Mother of Nightmares': 'Lauka Vai',\r\n  'Lighntning Blast': 'Lightning Blast',\r\n  'Lord Imperatant': 'Lord-Imperatant',\r\n  'Lord-Commander Bastian Carthalos': 'Bastian Carthalos',\r\n  'Lunestone Talisman': 'Loonstone Talisman',\r\n  'Lynus Ghalmorian on Gryph-Charger': 'Lynus Ghalmorian on Gryph Charger',\r\n  'Magestic Horror': 'Majestic Horror',\r\n  'Mancrusher Gargants Mob': 'Mancrusher Gargant Mob',\r\n  'Mancrusher Gargants': 'Mancrusher Gargant',\r\n  'Mannfred Mortarch of Night': 'Mannfred, Mortarch of Night',\r\n  'Mannfred von Carstein, Mortarch of Night': 'Mannfred von Carstein',\r\n  'Master of Defense': 'Master of Defence',\r\n  'Men At Arms': 'Men-at-Arms',\r\n  'Mighty Warleader': 'Mighty War Leader',\r\n  'Morathi High Oracle of Khaine': 'Morathi-Khaine',\r\n  'Morathi, High Oracle of Khaine': 'Morathi-Khaine',\r\n  'Morathi, The Shadow Queen': 'The Shadow Queen',\r\n  'Neferata, Mortarch of Blood': 'Neferata',\r\n  'Orruk Gore Gruntas': 'Orruk Gore-gruntas',\r\n  'Pink Horrors of Tzeentch': 'Horrors of Tzeentch',\r\n  'Scarlet Cavalcade Godseekers Host (Host of Chaos)': 'Scarlet Cavalcade',\r\n  'Secret Eater': 'Secret-eater',\r\n  'Shepard of Idiotic Destruction': 'Shepherd of Idiotic Destruction',\r\n  'Sheperd of Idiotic Destruction': 'Shepherd of Idiotic Destruction',\r\n  'Slaves to Darkness Chaos Spawn': 'Chaos Spawn',\r\n  'Slaves to Darkness Daemon Prince': 'Daemon Prince',\r\n  'Spider Rider Skittermob': 'Spider Rider Skitterswarm',\r\n  'Squigboss with Gnasha-squig': 'Squigboss',\r\n  'Strength of Goodhood': 'Strength of Godhood',\r\n  'Swampcalla Shaman with Pot-grot': 'Swampcalla Shaman and Pot-grot',\r\n  'Terrorghiest Mantle': 'Terrorgheist Mantle',\r\n  'The Blade of Endless Bloodshed': 'Blade of Endless Bloodshed',\r\n  'The Gorechosen': 'Gorechosen',\r\n  'The Grand Fyrd of Furious Peak': 'The Grand Fyrd of Furios Peak',\r\n  'The Skull-helm of Khorne': 'Skull-helm of Khorne',\r\n  'Thunderquake - Slayers': 'Thunderquake (Slayers)',\r\n  'Thunderquake - Swift': 'Thunderquake (Swift)',\r\n  'Tzaangor Enlightened on Disc of Beasts of Chaos': 'Tzaangor Enlightened',\r\n  'Tzaangor Enlightened on Disc': 'Tzaangor Enlightened',\r\n  'Unrivalled Batte-lust': 'Unrivalled Battlelust',\r\n  'Vial of the Pure Blood': 'Vial of Pure Blood',\r\n  'Vitrolic Spray': 'Vitriolic Spray',\r\n  'Voice of the Great Green God': 'Voice of Da Great Green God',\r\n  'Vokmortian, Master of the Bone-tithe': 'Vokmortian',\r\n  'Vulturnos, High King of the Deep': 'Volturnos, High King of the Deep',\r\n  'Warpfire Thrower Weapon Team': 'Warpfire Thrower',\r\n  'Warrior Indomniate': 'Warrior Indominate',\r\n  'Warstomper Mega-Gargant': 'Warstomper',\r\n  'Windshief Charm': 'Windthief Charm',\r\n  'Yndrasta the Celestial Spear': 'Yndrasta',\r\n  'Yndrasta, The Celestial Spear': 'Yndrasta',\r\n  \"Anraheir's Claw\": \"Anraheirs's Claw\",\r\n  \"Be'Lakor, the Dark Master\": \"Be'Lakor\",\r\n  \"Dakkbad's Brawl\": 'Brawl',\r\n  \"Hedrakka's Madmob\": \"Hedkrakka's Madmob\",\r\n  \"Mastro Vivetti's Maginificent Macroscope\": \"Mastro Vivetti's Magnificent Macroscope\",\r\n  Ogors: 'Ogor Gluttons',\r\n  Razordons: 'Razordon Hunting Pack',\r\n  Salamanders: 'Salamander Hunting Pack',\r\n  Vindicators: 'Vindictors',\r\n}\r\n\r\n// Azyr on the left - AoS Reminders on the right\r\nconst azyrTypoMap: Record<string, string> = {\r\n  'Aether quartz Brooch': 'Aetherquartz Brooch',\r\n  'Blade of Symmetr y': 'Blade of Symmetry',\r\n  'Bursting with Power': \"Burstin' with Power\",\r\n  'Chaos Gorebeast Chariots': 'Gorebeast Chariots',\r\n  'DHOM-HAIN': 'Dhom-Hain',\r\n  'Druid of the Everspring Circle': 'Druid of the Everspring',\r\n  'Greywater Artillery Battery': 'Greywater Artillery Company',\r\n  'Gryph-f eather Charm': 'Gryph-feather Charm',\r\n  'Iggrind-Kaz Surge-injection Endrin Mk \u0001 IV': 'Iggrind-Kaz Surge-injection Endrin Mk. IV',\r\n  'Keen Clawed': 'Keen-clawed',\r\n  'Madcap Shamans': 'Madcap Shaman',\r\n  'Morathi, High Oracle of Khaine': 'Morathi-Khaine',\r\n  'Morathi, The Shadow Queen': 'The Shadow Queen',\r\n  'Ogors Gluttons': 'Ogor Gluttons',\r\n  'Slaves to Darkness Chaos Spawn': 'Chaos Spawn',\r\n  'Slaves to Darkness Daemon Prince': 'Daemon Prince',\r\n  'The Skyborne Slayers': 'Skyborne Slayers',\r\n  \"Gáisa's Falx\": \"Gaisa's Falx\",\r\n}\r\n\r\n// Warhammer App on the left - AoS Reminders on the right\r\nconst warhammerAppTypoMap: Record<string, string> = {\r\n  ...azyrTypoMap,\r\n  'Bastiladon with Ark of Sotek': 'Bastiladon',\r\n  'Bastiladon with Solar Engine': 'Bastiladon',\r\n  'Big Drogg Fort-kicka': 'Big Drogg Fort-Kicka - Gatebreaker',\r\n  'Corpse Cart with Balefire Brazier': 'Corpse Cart w/ Balefire Brazier',\r\n  'Corpse Cart with Unholy Lodestone': 'Corpse Cart w/ Unholy Lodestone',\r\n  'Grotmass Gitz': 'Grotmas Gitz',\r\n  'Kurnoth Hunters with Kurnoth Greatbows': 'Kurnoth Hunters',\r\n  'Kurnoth Hunters with Kurnoth Greatswords': 'Kurnoth Hunters',\r\n  'Kurnoth Hunters with Kurnoth Scythes': 'Kurnoth Hunters',\r\n  'One-eyed Grunnock': 'One-Eyed Grunnock - Warstomper',\r\n  'Rotbringer Sorcerer': 'Rotbringers Sorcerer',\r\n  'The Blessed Sons': 'Blessed Sons',\r\n  'Tzaangor Enlightened on Discs of Tzeentch': 'Tzaangor Enlightened',\r\n  \"Be'lakor\": \"Be'Lakor\",\r\n  Nagash: 'Nagash, Supreme Lord of the Undead',\r\n}\r\n\r\n// Battlescribe on the left - AoS Reminders on the right\r\nconst battlescribeTypoMap: Record<string, string> = {\r\n  'Abhorrant Ghoul King on Terrorgheist': 'Abhorrant Ghoul King on Royal Terrorgheist',\r\n  'Arcane Corrosion': 'Arcane Corrasion',\r\n  'Aspiring Deathbringer with Goreaxe and Skullhammer': 'Aspiring Deathbringer',\r\n  'Atherquartz Brooch': 'Aetherquartz Brooch',\r\n  'Aventis Firestrike, Magister of Hammerhal': 'Aventis Firestrike',\r\n  'Bladebringer on Exalted Seeker Chariot': 'Bladebringer, Herald on Exalted Chariot',\r\n  'Bladebringer on Hellflayer': 'Bladebringer, Herald on Hellflayer',\r\n  'Blood River Chalice': 'Blood-river Chalice',\r\n  'Boingrot Bounders': 'Boingrot Bounderz',\r\n  'Bracers of Ember-iron': 'Bracers of Ember Iron',\r\n  'Celestant-Prime, Hammer of Sigmar': 'Celestant-Prime',\r\n  'Chaos Gorebeast Chariot': 'Gorebeast Chariots',\r\n  'Chaos Gorebeast Chariots': 'Gorebeast Chariots',\r\n  'Chronomatic Cogs': 'Chronomantic Cogs',\r\n  'Cloying Sea Mists': 'Cloying Seas Mists',\r\n  'Corpse Cart with Balefire Brazier': 'Corpse Cart w/ Balefire Brazier',\r\n  'Corpse Cart with Unholy Lodestone': 'Corpse Cart w/ Unholy Lodestone',\r\n  'DHOM-HAIN': 'Dhom-Hain',\r\n  'Ellania and Ellathor': 'Ellania and Ellathor, Eclipsian Warsages',\r\n  'Epicurean Raiders': 'Epicurean Revellers',\r\n  'Ethereal Blessing': 'Etheral Blessings',\r\n  'Exalted Deathbringer with Impaling Spear': 'Exalted Deathbringer',\r\n  'Exalted Seeker Chariot': 'Seeker Chariots',\r\n  'Fang of Dracothian': 'Fang of Dracothion',\r\n  'Furies (of Khorne)': 'Furies',\r\n  'Gatebreaker Mega-Gargant': 'Gatebreaker',\r\n  'Geminids of Uhl-Gyish': 'Geminids of Uhl-Gysh',\r\n  'Gigantic Chaos Spawn (of Khorne)': 'Gigantic Chaos Spawn',\r\n  'Gobsprakk, the Mouth of Mork': 'Gobsprakk',\r\n  'Gravitic Redirection': 'Gravitic Reduction',\r\n  'Guardian of Souls with Mortality Glass': 'Guardian of Souls w/ Mortality Glass',\r\n  'Guardian of Souls with Nightmare Lantern': 'Guardian of Souls',\r\n  'Helblaster Volly Gun': 'Helblaster Volley Gun',\r\n  'Hellflayers of Slaanesh': 'Hellflayer',\r\n  'Helm of Obsidian': 'Helm of Obsidia',\r\n  'Horticulux Slimux': 'Horticulous Slimux',\r\n  'Hunters with Bows': 'Kurnoth Hunters',\r\n  'Hunters with Greatswords': 'Kurnoth Hunters',\r\n  'Hunters with Scythes': 'Kurnoth Hunters',\r\n  'Incandescent Rectices': 'Incandescent Rectrices',\r\n  'Katakros, Mortarch of the Necropolis': 'Orpheon Katakros',\r\n  'Kragnos, The End of Empires': 'Kragnos',\r\n  'Kraken-Eater Mega-Gargant': 'Kraken-Eater',\r\n  'Kurnoth Hunters with Greatbows': 'Kurnoth Hunters',\r\n  'Kurnoth Hunters with Greatswords': 'Kurnoth Hunters',\r\n  'Kurnoth Hunters with Scythes': 'Kurnoth Hunters',\r\n  'Light of Dracothian': 'Light of Dracothion',\r\n  'Living Fissures': 'Living Fissure',\r\n  'Lord Commander Bastian Carthalos': 'Bastian Carthalos',\r\n  'Lord-Commander Bastian Carthalos': 'Bastian Carthalos',\r\n  'Mancrusher Gargants Mob': 'Mancrusher Gargant Mob',\r\n  'Mancrusher Gargants': 'Mancrusher Gargant',\r\n  'Mazrall the Butcher, Daemon Prince of Khorne': 'Mazarall the Butcher',\r\n  'Mazrall the Butcher': 'Mazarall the Butcher',\r\n  'Miniaturized Aethermatic Repulsion Field': 'Miniaturised Aethermatic Repulsion Field',\r\n  'Moon-bitter Squigalanche': 'Moon-Biter Squigalanche',\r\n  'Morathi, High Oracle of Khaine': 'Morathi-Khaine',\r\n  'Morathi, The Shadow Queen': 'The Shadow Queen',\r\n  'Mortek Shied-corps': 'Mortek Shield-Corps',\r\n  'Prosecutor with Celestial Hammers': 'Prosecutors with Celestial Hammers',\r\n  'Prosecutor with Stormcall Javelins': 'Prosecutors with Stormcall Javelins',\r\n  'Reiknor the Grimhailer': 'Reikenor the Grimhailer',\r\n  'Savage Orruks Arrowboys': 'Savage Orruk Arrowboys',\r\n  'Shasdow Warrior': 'Shadow Warriors',\r\n  'Skink Handler': 'Razordon Hunting Pack',\r\n  'Slaves to Darkness Chaos Spawn': 'Chaos Spawn',\r\n  'Slaves to Darkness Daemon Prince': 'Daemon Prince',\r\n  'Sneaky Shufflers': 'Sneaky Snufflers',\r\n  'Staff of Occular Optimisation': 'Staff of Ocular Optimisation',\r\n  'Staff of Ocular Optimization': 'Staff of Ocular Optimisation',\r\n  'Stallarch Lords': 'Stalliarch Lords',\r\n  'Swampcalla Shaman with Pot-grot': 'Swampcalla Shaman and Pot-grot',\r\n  'The Beguilling Gem': 'Beguiling Gem (Chaos)',\r\n  'The Blade of Endless Bloodshed': 'Blade of Endless Bloodshed',\r\n  'The Guild of Summoners': 'Guild of Summoners',\r\n  'Tzaangor Enlightened on Discs of Tzeentch': 'Tzaangor Enlightened',\r\n  'Vanguard-Raptor with Hurricane Crossbow': 'Vanguard-Raptors with Hurricane Crossbows',\r\n  'Vanguard-Raptor with Longstrike Crossbow': 'Vanguard-Raptors with Longstrike Crossbows',\r\n  'Vial of Mantivore Venom': 'Vial of Manticore Venom',\r\n  'Vokmortian, Master of the Bone-tithe': 'Vokmortian',\r\n  'Vulkite Bezerkers': 'Vulkite Berzerkers',\r\n  'Warp Lighting Storm': 'Warp Lightning Storm',\r\n  'Warrgog Prophet': 'Wurrgog Prophet',\r\n  'Warstompa Mega-Gargant': 'Warstomper',\r\n  'Zharrgron Flame Splitter': 'Zharrgron Flame-spitter',\r\n  \"Anraheir's Claw\": \"Anraheirs's Claw\",\r\n  \"Dracothian's Tail\": \"Dracothion's Tail\",\r\n  \"Gashrak's Despoiler\": \"Grashrak's Despoilers\",\r\n  \"Gattleson's Endless Repeater\": \"Gattlesson's Endless Repeater (AETHERMATIC WEAPON)\",\r\n  \"Ironskull'z Boyz\": \"Ironskull's Boyz\",\r\n  \"Might 'Eadbutt\": \"Mighty 'Eadbutt\",\r\n  Asylumticae: 'Asylumaticae',\r\n  BRIOMIDAR: 'Briomdar (Enclave)',\r\n  Kroxigors: 'Kroxigor',\r\n  Protector: 'Protectors',\r\n  Razordons: 'Razordon Hunting Pack',\r\n  Salamanders: 'Salamander Hunting Pack',\r\n  Vindicators: 'Vindictors',\r\n  Voxaxe: 'Vosaxe',\r\n}\r\n\r\n/**\r\n * This is where we store unknown values that are expected and inconsequential\r\n * Such as weapon options for units\r\n * And we shouldn't bother searching for them in the error checking process\r\n */\r\nexport const ignoredUnknownSelections = [\r\n  'Aethermatic Volley Cannon',\r\n  'Aethermatic Volley Guns',\r\n  'Aethershot Rifles',\r\n  'Ancestral War-axe',\r\n  'Arc Hammer',\r\n  'Axe',\r\n  'Banner Bearer',\r\n  'Barbed Whips and Blade Bucklers',\r\n  'Barbed Whips and Sacrificial Knives',\r\n  'Blood Vulture',\r\n  'Boltstorm Pistol',\r\n  'Boss Gore-hacka and Choppa',\r\n  'Brayhorn',\r\n  'Bringer-of-the-Word',\r\n  'Broadaxes',\r\n  'Celestial Hammer(s)',\r\n  'Chaos Hand',\r\n  'Clanr at Bell-ringer',\r\n  'Clanr at Standard Bearer',\r\n  'Clanrat Bell-ringer',\r\n  'Clanrat Standard Bearer',\r\n  'Clawleader',\r\n  'Clubs',\r\n  'Culling Clubs or Prey Hackers with Iron Fists',\r\n  'Cursed Flail',\r\n  'Cursed Lance',\r\n  'Doom Knight',\r\n  'Dread Falchions',\r\n  'Drill Cannons',\r\n  'Drummers',\r\n  'Ensor celled',\r\n  'Ensorcelled',\r\n  'Grandblade',\r\n  'Grandblades',\r\n  'Grandhammer',\r\n  'Grandhammers',\r\n  'Greatblades',\r\n  'Halberds and Shields',\r\n  'Handaxes & Slingshields',\r\n  'Harpoon Launcher',\r\n  'Heavy Sky Cannon',\r\n  'Hornblower',\r\n  'Icon Bearers',\r\n  'Light Skyhooks',\r\n  'Meteoric Javelins & Star Bucklers',\r\n  'Meteoric Standard',\r\n  'Nadirite Blade and Shield',\r\n  'Noise Maker',\r\n  'Ogor Mawtribes Battleline (Beastclaw Raiders General)',\r\n  'Pair of Brute Choppas',\r\n  'Pairs of Clubs or Blades',\r\n  'Pairs of Handaxes',\r\n  'Pig-iron Choppas',\r\n  'Plague Harbingers',\r\n  'Poleaxes',\r\n  'Runic Iron',\r\n  'Savage Blade(s)',\r\n  'Savage Greatblade',\r\n  'Scythes',\r\n  'Shield & Lance',\r\n  'Shockbolt Bow',\r\n  'Sky Cannon',\r\n  'Skybolt Bow',\r\n  'Spirit Swords',\r\n  'Standard Bearer',\r\n  'Standard Bearers',\r\n  'Starstrike Javelin',\r\n  'Sword',\r\n  'Swords',\r\n  'Tenderiser',\r\n  'Tzaangor Mutant',\r\n  'Vicious Blade & Wicked Cutlass',\r\n  'Warblade & Shield',\r\n  'Warhammer & Shield',\r\n  'Witch Rod',\r\n]\r\n\r\n// Azyr helper\r\nexport const factionToFlavorMap = {\r\n  'Clans Eshin': 'Masters of Murder (Eshin)',\r\n  'Clans Moulder': 'Prized Creations (Moulder)',\r\n  'Clans Pestilens': 'Echoes of the Great Plagues (Pestilens)',\r\n  'Clans Skryre': 'Warpstone Sparks (Skryre)',\r\n  'Clans Verminus': 'Mighty Warlords (Verminus)',\r\n}\r\n\r\n// If a certain trait maps to a specific unit type, put it here\r\nexport const importUnitOptionMap = {\r\n  'Balefire Brazier': 'Corpse Cart w/ Balefire Brazier',\r\n  'Celestial Hammer(s)': 'Prosecutors with Celestial Hammers',\r\n  'Living Whip': 'Keeper of Secrets w/ Living Whip',\r\n  'Ritual Knife or Sinistrous Hand': 'Keeper of Secrets w/ Ritual Knife',\r\n  'Ritual Knife': 'Keeper of Secrets w/ Ritual Knife',\r\n  'Shining Aegis': 'Keeper of Secrets w/ Shining Aegis',\r\n  'Sinistrous Hand': 'Keeper of Secrets w/ Sinistrous Hand',\r\n  'Stormcall Javelins': 'Prosecutors with Stormcall Javelins',\r\n  'Unholy Lodestone': 'Corpse Cart w/ Unholy Lodestone',\r\n}\r\n\r\nexport const importFactionNameMap: Record<\r\n  string,\r\n  { factionName: TSupportedFaction; subFactionName?: string }\r\n> = {\r\n  'Anvils of the Heldenhammer (Stormhost)': {\r\n    factionName: STORMCAST_ETERNALS,\r\n    subFactionName: StormcastFaction.subFactionKeyMap['Living Tempest'],\r\n  },\r\n  'Beastclaw Raiders': { factionName: OGOR_MAWTRIBES },\r\n  'Beasts of Chaos': { factionName: BEASTS_OF_CHAOS },\r\n  'Big Waaagh!': {\r\n    factionName: ORRUK_WARCLANS,\r\n    subFactionName: OrrukWarclansFaction.subFactionKeyMap['Big Waaagh'],\r\n  },\r\n  'Blades of Khorne': { factionName: KHORNE },\r\n  'Cities of Sigmar': { factionName: CITIES_OF_SIGMAR },\r\n  'Clans Eshin': { factionName: SKAVEN },\r\n  'Clans Moulder': { factionName: SKAVEN },\r\n  'Clans Pestilens': { factionName: SKAVEN },\r\n  'Clans Skryre': { factionName: SKAVEN },\r\n  'Clans Verminus': { factionName: SKAVEN },\r\n  'Darkling Covens': { factionName: CITIES_OF_SIGMAR },\r\n  'Daughters of Khaine': { factionName: DAUGHTERS_OF_KHAINE },\r\n  'Disciples of Tzeentch': { factionName: TZEENTCH },\r\n  'Fist of the Everchosen': {\r\n    factionName: SLAVES_TO_DARKNESS,\r\n    subFactionName: SlavesToDarknessFaction.subFactionKeyMap['Host of the Everchosen'],\r\n  },\r\n  'Flesh Eater Courts': { factionName: FLESH_EATER_COURTS },\r\n  'Flesh-eater Courts': { factionName: FLESH_EATER_COURTS },\r\n  'Flesh-Eater Courts': { factionName: FLESH_EATER_COURTS },\r\n  'Gitmob Grots': { factionName: GLOOMSPITE_GITZ },\r\n  'Gloomspite Gitz': { factionName: GLOOMSPITE_GITZ },\r\n  'Grand Host of Nagash': {\r\n    factionName: LEGIONS_OF_NAGASH,\r\n    subFactionName: LegionsOfNagashFaction.subFactionKeyMap['Grand Host of Nagash'],\r\n  },\r\n  'Greyfyrd Lodge': { factionName: MERCENARY_COMPANIES },\r\n  'Grugg Brothers': { factionName: MERCENARY_COMPANIES },\r\n  'Hedonites of Slaanesh': { factionName: SLAANESH },\r\n  'Idoneth Deepkin': { factionName: IDONETH_DEEPKIN },\r\n  'Kharadron Overlords': { factionName: KHARADRON_OVERLORDS },\r\n  'Legion of Azgorh': { factionName: LEGION_OF_AZGORH },\r\n  'Legion of Blood': {\r\n    factionName: LEGIONS_OF_NAGASH,\r\n    subFactionName: LegionsOfNagashFaction.subFactionKeyMap['Legion of Blood'],\r\n  },\r\n  'Legion of Chaos Ascendant': { factionName: LEGION_OF_THE_FIRST_PRINCE },\r\n  'Legion of the First Prince': { factionName: LEGION_OF_THE_FIRST_PRINCE },\r\n  'Legion of The First Prince': { factionName: LEGION_OF_THE_FIRST_PRINCE },\r\n  'Legion of Grief': { factionName: LEGION_OF_GRIEF },\r\n  'Legion of Night': {\r\n    factionName: LEGIONS_OF_NAGASH,\r\n    subFactionName: LegionsOfNagashFaction.subFactionKeyMap['Legion of Night'],\r\n  },\r\n  'Legion of Sacrament': {\r\n    factionName: LEGIONS_OF_NAGASH,\r\n    subFactionName: LegionsOfNagashFaction.subFactionKeyMap['Legion of Sacrament'],\r\n  },\r\n  'Lethisian Defenders': { factionName: LETHISIAN_DEFENDERS },\r\n  'Lumineth Realm Lords': { factionName: LUMINETH_REALMLORDS },\r\n  'Lumineth Realm-lords': { factionName: LUMINETH_REALMLORDS },\r\n  'Maggotkin of Nurgle': { factionName: NURGLE },\r\n  'Mercenaries: Greyfyrd Lodge': { factionName: MERCENARY_COMPANIES },\r\n  'Mercenaries: Grugg Brothers': { factionName: MERCENARY_COMPANIES },\r\n  'Mercenaries: Order of the Blood-Drenched Rose': { factionName: MERCENARY_COMPANIES },\r\n  'Mercenaries: Rampagers': { factionName: MERCENARY_COMPANIES },\r\n  'Mercenaries: Sons of the Lichemaster': { factionName: MERCENARY_COMPANIES },\r\n  'Mercenaries: Tenebrous Court': { factionName: MERCENARY_COMPANIES },\r\n  'Mercenaries: The Blacksmoke Battery': { factionName: MERCENARY_COMPANIES },\r\n  'Mercenaries: The Gutstuffers': { factionName: MERCENARY_COMPANIES },\r\n  'Moonclan Grots': { factionName: GLOOMSPITE_GITZ },\r\n  'Ogor Mawtribes': { factionName: OGOR_MAWTRIBES },\r\n  'Order of the Blood-Drenched Rose': { factionName: MERCENARY_COMPANIES },\r\n  'Orruk Warclans': { factionName: ORRUK_WARCLANS },\r\n  'Ossiarch Bonereapers': { factionName: OSSIARCH_BONEREAPERS },\r\n  'Slaves to Darkness': { factionName: SLAVES_TO_DARKNESS },\r\n  'Sons of Behemat': { factionName: SONS_OF_BEHEMAT },\r\n  'Sons Of Behemat': { factionName: SONS_OF_BEHEMAT },\r\n  'Sons of the Lichemaster': { factionName: MERCENARY_COMPANIES },\r\n  'Soulblight Gravelords': { factionName: SOULBLIGHT_GRAVELORDS },\r\n  'Spiderfang Grots': { factionName: GLOOMSPITE_GITZ },\r\n  'Stormcast Eternals': { factionName: STORMCAST_ETERNALS },\r\n  'Swifthawk Agents': { factionName: ORDER_GRAND_ALLIANCE },\r\n  'Tenebrous Court': { factionName: MERCENARY_COMPANIES },\r\n  'The Blacksmoke Battery': { factionName: MERCENARY_COMPANIES },\r\n  'The Gutstuffers': { factionName: MERCENARY_COMPANIES },\r\n  'Tomb Kings (Compendium)': { factionName: TOMB_KINGS },\r\n  'Tomb Kings': { factionName: TOMB_KINGS },\r\n  \"Mercenaries: Nimyard's Rough-Riders\": { factionName: MERCENARY_COMPANIES },\r\n  \"Mercenaries: Skroug's Menagerie\": { factionName: MERCENARY_COMPANIES },\r\n  \"Nimyard's Rough-Riders\": { factionName: MERCENARY_COMPANIES },\r\n  \"Skroug's Menagerie\": { factionName: MERCENARY_COMPANIES },\r\n /* Bonesplitterz: {\r\n    factionName: ORRUK_WARCLANS,\r\n    subFactionName: OrrukWarclansFaction.subFactionKeyMap.Bonesplitterz,\r\n  }, */\r\n  Brayherd: { factionName: BEASTS_OF_CHAOS },\r\n  // JS Chaos: { factionName: CHAOS_GRAND_ALLIANCE },\r\n  Death: { factionName: DEATH_GRAND_ALLIANCE },\r\n  Destruction: { factionName: DESTRUCTION_GRAND_ALLIANCE },\r\n  Dispossessed: { factionName: DISPOSSESSED },\r\n  Everchosen: {\r\n    factionName: SLAVES_TO_DARKNESS,\r\n    subFactionName: SlavesToDarknessFaction.subFactionKeyMap['Host of the Everchosen'],\r\n  },\r\n  Fyreslayers: { factionName: FYRESLAYERS },\r\n  Greenskinz: { factionName: GREENSKINZ },\r\n  Gutbusters: { factionName: OGOR_MAWTRIBES },\r\n  Ironjawz: { factionName: ORRUK_WARCLANS, subFactionName: OrrukWarclansFaction.subFactionKeyMap.Ironjawz },\r\n  Khorne: { factionName: KHORNE },\r\n  Kruleboyz: {\r\n    factionName: ORRUK_WARCLANS,\r\n    subFactionName: OrrukWarclansFaction.subFactionKeyMap.Kruleboyz,\r\n  },\r\n  Lethisian: { factionName: LETHISIAN_DEFENDERS },\r\n  Lumineth: { factionName: LUMINETH_REALMLORDS },\r\n  Nighthaunt: { factionName: NIGHTHAUNT },\r\n  Nurgle: { factionName: NURGLE },\r\n  Order: { factionName: ORDER_GRAND_ALLIANCE },\r\n  Rampagers: { factionName: MERCENARY_COMPANIES },\r\n  Seraphon: { factionName: SERAPHON },\r\n  Skaven: { factionName: SKAVEN },\r\n  Skaventide: { factionName: SKAVEN },\r\n  Slaanesh: { factionName: SLAANESH },\r\n  Soulblight: { factionName: LEGIONS_OF_NAGASH },\r\n  Sylvaneth: { factionName: SYLVANETH },\r\n  Thunderscorn: { factionName: BEASTS_OF_CHAOS },\r\n  Tzeentch: { factionName: TZEENTCH },\r\n  Wanderers: { factionName: WANDERERS },\r\n  Warherds: { factionName: BEASTS_OF_CHAOS },\r\n}\r\n\r\n// A map to help the user when Azyr uses the same name for multiple warscrolls\r\n// eg 'Lord-Arcanum on Celestial Dracoline' is one of a number of units just called 'Lord-Arcanum'\r\n// AoS Reminders on the left - Azyr on the right\r\n// Note that the AoS Reminders version is what it *does* import as. This can be the same as\r\n// the Azyr string, which just means there is a unit exactly called what Azyr lists multiple\r\n// units as, or it can be different, meaning multiple units from Azyr map to one in AoS Reminders\r\n// by a partial match.\r\nconst azyrAmbiguousNamesMap = {\r\n  'Abhorrant Ghoul King': 'Abhorrant Ghoul King',\r\n  'Arachnarok Spider with Flinger': 'Arachnarok Spider',\r\n  'Auric Runefather': 'Auric Runefather',\r\n  'Auric Runesmiter': 'Auric Runesmiter',\r\n  'Auric Runeson': 'Auric Runeson',\r\n  'Bladebringer, Herald on Exalted Chariot': 'Bladebringer',\r\n  'Bloodthirster of Insensate Rage': 'Bloodthirster',\r\n  'Chaos Lord': 'Chaos Lord',\r\n  'Corpse Cart w/ Balefire Brazier': 'Corpse Cart',\r\n  'Eidolon of Mathlann, Aspect of the Sea': 'Eidolon of Mathlann',\r\n  'Grey Seer': 'Grey Seer',\r\n  'Herald of Tzeentch': 'Herald of Tzeentch',\r\n  'Knight of Shrouds': 'Knight of Shrouds',\r\n  'Lord-Arcanum': 'Lord-Arcanum',\r\n  'Lord-Celestant': 'Lord-Celestant',\r\n  'Plague Priest': 'Plague Priest',\r\n  'Prosecutors with Celestial Hammers': 'Prosecutors',\r\n  'Prosecutors with Stormcall Javelins': 'Prosecutors',\r\n  'Saurus Scar-Veteran on Carnosaur': 'Saurus Scar-Veteran',\r\n  'Vanguard-Raptors with Hurricane Crossbows': 'Vanguard-Raptors',\r\n  'Wight King with Baleful Tomb Blade': 'Wight King',\r\n  Evocators: 'Evocators',\r\n  Loonboss: 'Loonboss',\r\n}\r\n\r\nexport const DEPRECATED_PROFILE = 'it no longer has a pitched battle profile'\r\nexport const DEPRECATED_FIRESTORM = 'the allegiances from Firestorm are no longer matched play legal'\r\nexport const DEPRECATED_MALIGN_SORCERY = 'the artifacts from Malign Sorcery are no longer matched play legal'\r\nexport const DEPRECATED_AOS_3 = 'it was removed in AoS 3.0'\r\n\r\n/**\r\n * Given the following format:\r\n * 'deprecation-warn': `'${text}' has been removed from AoS Reminders because ${reason}.`,\r\n * `text` goes on the left, `reason` goes on the right.\r\n */\r\nexport const DeprecatedSelections = {\r\n  'Aegis Immortal': DEPRECATED_AOS_3,\r\n  'Aether-eater Host': DEPRECATED_AOS_3,\r\n  'Aetherguard Windrunners': DEPRECATED_AOS_3,\r\n  'Aetherquartz Brooch': DEPRECATED_MALIGN_SORCERY,\r\n  'Affliction Cyst': DEPRECATED_AOS_3,\r\n  'Akhelian Corps': DEPRECATED_AOS_3,\r\n  'Alarith Temple': DEPRECATED_AOS_3,\r\n  'Alchemical Chain': DEPRECATED_MALIGN_SORCERY,\r\n  'Alliance of Wood and Sea': DEPRECATED_AOS_3,\r\n  'Alter-kin Coven': DEPRECATED_AOS_3,\r\n  'Amethyst Blindmask': DEPRECATED_MALIGN_SORCERY,\r\n  'Arachnarok Spider Cluster': DEPRECATED_AOS_3,\r\n  'Arboreal Stave': DEPRECATED_MALIGN_SORCERY,\r\n  'Arcanite Cabal': DEPRECATED_AOS_3,\r\n  'Arcanite Cult': DEPRECATED_AOS_3,\r\n  'Argent Armour': DEPRECATED_MALIGN_SORCERY,\r\n  'Arkhspark Voltik (Enginecoven)': DEPRECATED_AOS_3,\r\n  'Attendants at Court': DEPRECATED_AOS_3,\r\n  'Auralan Legion': DEPRECATED_AOS_3,\r\n  'Balewind Vortex': DEPRECATED_AOS_3,\r\n  'Banshee Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Bejewelled Gauntlet': DEPRECATED_MALIGN_SORCERY,\r\n  'Black Kraken Helm': DEPRECATED_AOS_3,\r\n  'Blackshard Warhost': DEPRECATED_AOS_3,\r\n  'Blade of Carving': DEPRECATED_MALIGN_SORCERY,\r\n  'Blade of Endings': DEPRECATED_MALIGN_SORCERY,\r\n  'Blade of Folded Shadows': DEPRECATED_MALIGN_SORCERY,\r\n  'Blade of Hammerhal Ghyra': DEPRECATED_MALIGN_SORCERY,\r\n  'Blade of Secrets': DEPRECATED_MALIGN_SORCERY,\r\n  'Blade of Symmetry': DEPRECATED_MALIGN_SORCERY,\r\n  'Blade of the Thirteen Dominions': DEPRECATED_MALIGN_SORCERY,\r\n  'Bladelord Host': DEPRECATED_AOS_3,\r\n  'Blight Cyst': DEPRECATED_AOS_3,\r\n  'Blood Host': DEPRECATED_AOS_3,\r\n  'Blood Hunt': DEPRECATED_AOS_3,\r\n  'Blood Legion': DEPRECATED_AOS_3,\r\n  'Bloodbound Murderband': DEPRECATED_AOS_3,\r\n  'Bloodbound Warhorde': DEPRECATED_AOS_3,\r\n  'Bloodmad Warband': DEPRECATED_AOS_3,\r\n  'Bloodmarked Warband': DEPRECATED_AOS_3,\r\n  'Bloodthunder Stampede': DEPRECATED_AOS_3,\r\n  'Bound Balewind Vortex': DEPRECATED_AOS_3,\r\n  'Brass Despoilers': DEPRECATED_AOS_3,\r\n  'Brass Stampede': DEPRECATED_AOS_3,\r\n  'Cannibal Court': DEPRECATED_AOS_3,\r\n  'Castellans of the Crimson Keep': DEPRECATED_AOS_3,\r\n  'Cauldron Guard': DEPRECATED_AOS_3,\r\n  'Chamonite Darts': DEPRECATED_MALIGN_SORCERY,\r\n  'Chaos Horde': DEPRECATED_AOS_3,\r\n  'Charrwind Beasthunters': DEPRECATED_AOS_3,\r\n  'Claw-horde': DEPRECATED_AOS_3,\r\n  'Cleansing Brooch': DEPRECATED_MALIGN_SORCERY,\r\n  'Congregation of Filth': DEPRECATED_AOS_3,\r\n  'Court of Nulahmia': DEPRECATED_AOS_3,\r\n  'Cronehair Fetish': DEPRECATED_MALIGN_SORCERY,\r\n  'Crown of Flames': DEPRECATED_MALIGN_SORCERY,\r\n  'Crucible of Molten Silver': DEPRECATED_MALIGN_SORCERY,\r\n  'Crystalline Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Daemon Legion of Khorne': DEPRECATED_AOS_3,\r\n  'Daemonsteel Contingent': DEPRECATED_AOS_3,\r\n  'Dark Feast': DEPRECATED_AOS_3,\r\n  'Dawnrider Lance': DEPRECATED_AOS_3,\r\n  'Death Stalkers': DEPRECATED_AOS_3,\r\n  'Deathstench Drove': DEPRECATED_AOS_3,\r\n  'Deepsurge Raiding Party': DEPRECATED_AOS_3,\r\n  'Depraved Carnival': DEPRECATED_AOS_3,\r\n  'Depraved Drove': DEPRECATED_AOS_3,\r\n  'Desolating Beastherd': DEPRECATED_AOS_3,\r\n  'Devout Supplicants': DEPRECATED_AOS_3,\r\n  'Dimensional Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Doppelganger Cloak': DEPRECATED_MALIGN_SORCERY,\r\n  'Dragonlord Host': DEPRECATED_AOS_3,\r\n  'Drakeforged Plate': DEPRECATED_MALIGN_SORCERY,\r\n  'Entangling Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Epicurean Revellers': DEPRECATED_AOS_3,\r\n  'Essence of Vulcatrix': DEPRECATED_MALIGN_SORCERY,\r\n  'Ethereal Amulet': DEPRECATED_MALIGN_SORCERY,\r\n  'Everspring Diadem': DEPRECATED_AOS_3,\r\n  'Exalted Speed-Knights': DEPRECATED_AOS_3,\r\n  'Execution Herd': DEPRECATED_AOS_3,\r\n  'Execution Horde': DEPRECATED_AOS_3,\r\n  'Exile Torch': DEPRECATED_MALIGN_SORCERY,\r\n  'Fate Legion': DEPRECATED_AOS_3,\r\n  'Fatesworn Warband': DEPRECATED_AOS_3,\r\n  'Fecund Rituculturalists': DEPRECATED_AOS_3,\r\n  'Fellwing Flock': DEPRECATED_AOS_3,\r\n  'Fleshmeld Menagerie': DEPRECATED_AOS_3,\r\n  'Flowstone Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Forest Folk': DEPRECATED_AOS_3,\r\n  'Forge Brethren': DEPRECATED_AOS_3,\r\n  'Foulrain Congregation': DEPRECATED_AOS_3,\r\n  'Free Spirits': DEPRECATED_AOS_3,\r\n  'Gargant-bone Dice': DEPRECATED_MALIGN_SORCERY,\r\n  'Gascloud Chokelung (Enginecoven)': DEPRECATED_AOS_3,\r\n  'Gautfyre Skorch (Enginecoven)': DEPRECATED_AOS_3,\r\n  'Ghoul Patrol': DEPRECATED_AOS_3,\r\n  'Ghyrropian Gauntlets': DEPRECATED_MALIGN_SORCERY,\r\n  'Gleaming Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Goblet of Draining': DEPRECATED_MALIGN_SORCERY,\r\n  'Godsworn Champions of Ruin': DEPRECATED_AOS_3,\r\n  'Godswrath Warband': DEPRECATED_AOS_3,\r\n  'Godwrought Helm': DEPRECATED_MALIGN_SORCERY,\r\n  'Gore Pilgrims': DEPRECATED_AOS_3,\r\n  'Gorethunder Cohort': DEPRECATED_AOS_3,\r\n  'Grand Armada': DEPRECATED_AOS_3,\r\n  'Grand Fyrd': DEPRECATED_AOS_3,\r\n  'Gravesand Brooch': DEPRECATED_AOS_3,\r\n  'Greenglade Flask': DEPRECATED_MALIGN_SORCERY,\r\n  'Greywater Artillery Company': DEPRECATED_AOS_3,\r\n  'Greywater Shieldband (Greywater Fastness)': DEPRECATED_AOS_3,\r\n  'Grimscuttle Nest': DEPRECATED_AOS_3,\r\n  'Grimscuttle Skitterswarm': DEPRECATED_AOS_3,\r\n  'Grimscuttle Spider Cluster': DEPRECATED_AOS_3,\r\n  'Grudgebound War Throng': DEPRECATED_AOS_3,\r\n  'Grundstok Escort Wing': DEPRECATED_AOS_3,\r\n  'Gryph-feather Charm': DEPRECATED_MALIGN_SORCERY,\r\n  'Gutbuster Warglutt': DEPRECATED_AOS_3,\r\n  'Hammerhalian Lancers': DEPRECATED_AOS_3,\r\n  'Hedonite Host': DEPRECATED_AOS_3,\r\n  'Host of Corruption': DEPRECATED_AOS_3,\r\n  'Host of Rage': DEPRECATED_AOS_3,\r\n  'Host of the Arcane': DEPRECATED_AOS_3,\r\n  'Host of the Depraved': DEPRECATED_AOS_3,\r\n  'Hungering Warherd': DEPRECATED_AOS_3,\r\n  'Hurakan Temple': DEPRECATED_AOS_3,\r\n  'Hydroxskin Cloak': DEPRECATED_MALIGN_SORCERY,\r\n  'Hypersnare Seeds': DEPRECATED_MALIGN_SORCERY,\r\n  'Incandescent Rageblade': DEPRECATED_AOS_3,\r\n  'Intrepid Prospectors': DEPRECATED_AOS_3,\r\n  'Invidian Plaguehost': DEPRECATED_AOS_3,\r\n  'Iron Sky Attack Squadron': DEPRECATED_AOS_3,\r\n  'Iron Sky Command': DEPRECATED_AOS_3,\r\n  'Jade Diadem': DEPRECATED_MALIGN_SORCERY,\r\n  'Jadewound Thorn': DEPRECATED_MALIGN_SORCERY,\r\n  'Katakrosian Deathglaive': DEPRECATED_AOS_3,\r\n  'Kavalos Lance': DEPRECATED_AOS_3,\r\n  'Leaping Pox': DEPRECATED_AOS_3,\r\n  'Legion of Shyish': DEPRECATED_AOS_3,\r\n  'Lens of Refraction': DEPRECATED_MALIGN_SORCERY,\r\n  'Lords of Sacrament': DEPRECATED_AOS_3,\r\n  'Lords of the Clan': DEPRECATED_AOS_3,\r\n  'Lords of the Lodge': DEPRECATED_AOS_3,\r\n  'Lords of Vostarg': DEPRECATED_AOS_3,\r\n  'Luminary Rod': DEPRECATED_MALIGN_SORCERY,\r\n  'Magmadroth Blood Vials': DEPRECATED_MALIGN_SORCERY,\r\n  'Magmaforged Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Marauding Brayherd': DEPRECATED_AOS_3,\r\n  'Miasmatic Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Mirrored Cuirass': DEPRECATED_MALIGN_SORCERY,\r\n  'Molten Infusion': DEPRECATED_AOS_3,\r\n  'Moon-Biter Squigalanche': DEPRECATED_AOS_3,\r\n  'Moon-Jumper Stampede': DEPRECATED_AOS_3,\r\n  'Moonclan Skrap': DEPRECATED_AOS_3,\r\n  'Mortek Ballistari': DEPRECATED_AOS_3,\r\n  'Mortek Shield-Corps': DEPRECATED_AOS_3,\r\n  'Mortisan Trident': DEPRECATED_AOS_3,\r\n  'Multitudinous Host': DEPRECATED_AOS_3,\r\n  'Namarti Corps': DEPRECATED_AOS_3,\r\n  'Nightfall Pack': DEPRECATED_AOS_3,\r\n  'Nighthaunt Procession': DEPRECATED_AOS_3,\r\n  'Nobles of Excess': DEPRECATED_AOS_3,\r\n  'Omniscient Oracles': DEPRECATED_AOS_3,\r\n  'Onyx Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Ossiarch Cohort': DEPRECATED_AOS_3,\r\n  'Overlords of Chaos': DEPRECATED_AOS_3,\r\n  'Pestilent Throng': DEPRECATED_AOS_3,\r\n  'Phantasmagoria of Fate': DEPRECATED_AOS_3,\r\n  'Phoenix Flight': DEPRECATED_AOS_3,\r\n  'Plague Cyst': DEPRECATED_AOS_3,\r\n  'Plaguesmog Congregation': DEPRECATED_AOS_3,\r\n  'Plaguetouched Warband': DEPRECATED_AOS_3,\r\n  'Plate of Perfect Protection': DEPRECATED_AOS_3,\r\n  'Pleasurebound Warband': DEPRECATED_AOS_3,\r\n  'Prism Amyntok': DEPRECATED_MALIGN_SORCERY,\r\n  'Prism of Amyntok': DEPRECATED_AOS_3,\r\n  'Purefire Brazier': DEPRECATED_MALIGN_SORCERY,\r\n  'Rattlegauge Warplock (Enginecoven)': DEPRECATED_AOS_3,\r\n  'Red Banqueters': DEPRECATED_AOS_3,\r\n  'Red Headsmen': DEPRECATED_AOS_3,\r\n  'Royal Council': DEPRECATED_AOS_3,\r\n  'Royal Family': DEPRECATED_AOS_3,\r\n  'Royal Menagerie': DEPRECATED_AOS_3,\r\n  'Royal Mordants': DEPRECATED_AOS_3,\r\n  'Ruby Ring': DEPRECATED_MALIGN_SORCERY,\r\n  'Ruinbringer Warband': DEPRECATED_AOS_3,\r\n  'Rune Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Sash of the Ten Paradises': DEPRECATED_MALIGN_SORCERY,\r\n  'Seed of Rebirth': DEPRECATED_AOS_3,\r\n  'Seeker Cavalcade': DEPRECATED_AOS_3,\r\n  'Sepulchral Plate': DEPRECATED_MALIGN_SORCERY,\r\n  'Shadow Patrol': DEPRECATED_AOS_3,\r\n  'Shardfist Pelt': DEPRECATED_MALIGN_SORCERY,\r\n  'Shrieker Host': DEPRECATED_AOS_3,\r\n  'Shrine Blood': DEPRECATED_AOS_3,\r\n  'Skitterstrand Nest': DEPRECATED_AOS_3,\r\n  'Skulkmob Horde': DEPRECATED_AOS_3,\r\n  'Skullseeker Host': DEPRECATED_AOS_3,\r\n  'Skyshoal Coven': DEPRECATED_AOS_3,\r\n  'Slaughter Troupe': DEPRECATED_AOS_3,\r\n  'Sliver of Decrepitude': DEPRECATED_MALIGN_SORCERY,\r\n  'Smouldering Helm': DEPRECATED_MALIGN_SORCERY,\r\n  'Sons of the Maggot Lord': DEPRECATED_AOS_3,\r\n  'Spider Rider Skitterswarm': DEPRECATED_AOS_3,\r\n  'Spiderfang Stalk Tribe': DEPRECATED_AOS_3,\r\n  'Squig Rider Stampede': DEPRECATED_AOS_3,\r\n  'Starshard Battery': DEPRECATED_AOS_3,\r\n  'Stomping Megamob': DEPRECATED_AOS_3,\r\n  'Stonehorn Blade': DEPRECATED_MALIGN_SORCERY,\r\n  'Supreme Sybarites': DEPRECATED_AOS_3,\r\n  'Sword of Judgement': DEPRECATED_MALIGN_SORCERY,\r\n  'Syari Trueblade': DEPRECATED_AOS_3,\r\n  'Sylvaneth Heartwood Host': DEPRECATED_AOS_3,\r\n  'Talisman of the Watcher': DEPRECATED_MALIGN_SORCERY,\r\n  'Tallyband of Nurgle': DEPRECATED_AOS_3,\r\n  'Teclian Vanguard': DEPRECATED_AOS_3,\r\n  'The Arcasanctorian Guard': DEPRECATED_AOS_3,\r\n  'The Bloodsurf Hunt': DEPRECATED_AOS_3,\r\n  'The Butcher-Herd': DEPRECATED_AOS_3,\r\n  'The Condemned': DEPRECATED_AOS_3,\r\n  'The Devourer': DEPRECATED_AOS_3,\r\n  'The Dolorous Guard': DEPRECATED_AOS_3,\r\n  'The Emerald Host': DEPRECATED_AOS_3,\r\n  'The Exquisite Pursuit': DEPRECATED_AOS_3,\r\n  'The First Cohort': DEPRECATED_AOS_3,\r\n  'The Forgotten Scions': DEPRECATED_AOS_3,\r\n  'The Grand Fyrd of Furios Peak': DEPRECATED_AOS_3,\r\n  'The Ragged Cloak': DEPRECATED_MALIGN_SORCERY,\r\n  'The Sorrowmourn Choir': DEPRECATED_AOS_3,\r\n  'The Sunderblade': DEPRECATED_MALIGN_SORCERY,\r\n  'The Vengeful Alliance': DEPRECATED_AOS_3,\r\n  'Thermalrider Cloak': DEPRECATED_MALIGN_SORCERY,\r\n  'Thricefold Befoulment': DEPRECATED_AOS_3,\r\n  'Thunderscorn Stormherd': DEPRECATED_AOS_3,\r\n  'Tyrants of Blood': DEPRECATED_AOS_3,\r\n  'Tzaangor Coven': DEPRECATED_AOS_3,\r\n  'Vengeful Throng': DEPRECATED_AOS_3,\r\n  'Verdant Mantle': DEPRECATED_MALIGN_SORCERY,\r\n  'Viridian Pathfinders': DEPRECATED_AOS_3,\r\n  'Virulent Procession': DEPRECATED_AOS_3,\r\n  'Vostarg Forge Brethren': DEPRECATED_AOS_3,\r\n  'Vostarg Warrior Kinband': DEPRECATED_AOS_3,\r\n  'Vyperic Guard': DEPRECATED_AOS_3,\r\n  'Wand of Restoration': DEPRECATED_MALIGN_SORCERY,\r\n  'War Coven of Morathi': DEPRECATED_AOS_3,\r\n  'Warpcog Convocation': DEPRECATED_AOS_3,\r\n  'Warpflame Host': DEPRECATED_AOS_3,\r\n  'Warrior Kinband': DEPRECATED_AOS_3,\r\n  'Waystone Pathfinders': DEPRECATED_AOS_3,\r\n  'Whitefire Retinue': DEPRECATED_AOS_3,\r\n  'Whyrlblade Threshik (Enginecoven)': DEPRECATED_AOS_3,\r\n  'Witchfyre Coven': DEPRECATED_AOS_3,\r\n  'Wristbands of Illusion': DEPRECATED_MALIGN_SORCERY,\r\n  'Xintil War-Magi': DEPRECATED_AOS_3,\r\n  \"Ab-Het's Skyseekers\": DEPRECATED_AOS_3,\r\n  \"Aiban's Hidden Blade\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Anraheirs's Claw\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Argentine's Tooth\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Atra'zan's Blazing Cavalcade\": DEPRECATED_AOS_3,\r\n  \"Beastcaller's Bones\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Betrayer's Crown\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Blacktalon's Shadowhammers\": DEPRECATED_PROFILE,\r\n  \"Butcher's Band\": DEPRECATED_AOS_3,\r\n  \"Drongon's Aether-Runners\": DEPRECATED_AOS_3,\r\n  \"Drycha's Spitegrove\": DEPRECATED_AOS_3,\r\n  \"Gestharyx's Cavalcade\": DEPRECATED_AOS_3,\r\n  \"Gresh's Iron Reapers\": DEPRECATED_AOS_3,\r\n  \"Guardian's Coronet\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Hajkarl's Sons of Fortune\": DEPRECATED_AOS_3,\r\n  \"Hashut's Wrath Artillery Train\": DEPRECATED_AOS_3,\r\n  \"Horrek's Dreadlance\": DEPRECATED_AOS_3,\r\n  \"Ignax's Scales\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Kin-eater's Bully Boys\": DEPRECATED_AOS_3,\r\n  \"King's Ghouls\": DEPRECATED_AOS_3,\r\n  \"Kraeth's Shadowhost\": DEPRECATED_AOS_3,\r\n  \"M'zarr's Aetherhost\": DEPRECATED_AOS_3,\r\n  \"Mortevell's Helcourt\": DEPRECATED_AOS_3,\r\n  \"Nurgle's Menagerie\": DEPRECATED_AOS_3,\r\n  \"Overseer's Fate-twisters\": DEPRECATED_AOS_3,\r\n  \"Rattachak's Doom-Coven\": DEPRECATED_AOS_3,\r\n  \"Skall'uk's Slaughterband\": DEPRECATED_AOS_3,\r\n  \"Sqwal's Pestilent Congregation\": DEPRECATED_AOS_3,\r\n  \"Stoneklaw's Gutstompas\": DEPRECATED_FIRESTORM,\r\n  \"The Fetch's Ring\": DEPRECATED_AOS_3,\r\n  \"Trickster's Foil\": DEPRECATED_AOS_3,\r\n  \"Trickster's Helm\": DEPRECATED_MALIGN_SORCERY,\r\n  \"Tyrant's Gutguard\": DEPRECATED_AOS_3,\r\n  \"Vokmortian's Retinue\": DEPRECATED_AOS_3,\r\n  Abattoir: DEPRECATED_AOS_3,\r\n  Alfrostun: DEPRECATED_AOS_3,\r\n  Amberglaive: DEPRECATED_MALIGN_SORCERY,\r\n  Bloodforged: DEPRECATED_AOS_3,\r\n  Chainguard: DEPRECATED_AOS_3,\r\n  Changehost: DEPRECATED_AOS_3,\r\n  Deadwatch: DEPRECATED_AOS_3,\r\n  Deathmarch: DEPRECATED_AOS_3,\r\n  Deathriders: DEPRECATED_AOS_3,\r\n  Eurlbad: DEPRECATED_AOS_3,\r\n  Ghyrstrike: DEPRECATED_MALIGN_SORCERY,\r\n  Gildenbane: DEPRECATED_MALIGN_SORCERY,\r\n  Glimmering: DEPRECATED_AOS_3,\r\n  Gobbapalooza: DEPRECATED_AOS_3,\r\n  Gorechosen: DEPRECATED_AOS_3,\r\n  Goremand: DEPRECATED_AOS_3,\r\n  Household: DEPRECATED_AOS_3,\r\n  Jorlbad: DEPRECATED_AOS_3,\r\n  Junkmob: DEPRECATED_AOS_3,\r\n  Lifebane: DEPRECATED_MALIGN_SORCERY,\r\n  Lightshard: DEPRECATED_MALIGN_SORCERY,\r\n  Murderhost: DEPRECATED_AOS_3,\r\n  Outcasts: DEPRECATED_AOS_3,\r\n  Phalanx: DEPRECATED_AOS_3,\r\n  Rageblade: DEPRECATED_MALIGN_SORCERY,\r\n  Rockjaws: DEPRECATED_MALIGN_SORCERY,\r\n  Scathcoven: DEPRECATED_AOS_3,\r\n  Shroudguard: DEPRECATED_AOS_3,\r\n  Skal: DEPRECATED_AOS_3,\r\n  Skulltake: DEPRECATED_AOS_3,\r\n  Slaughterborn: DEPRECATED_AOS_3,\r\n  Slinktalon: DEPRECATED_AOS_3,\r\n  Spellmirror: DEPRECATED_MALIGN_SORCERY,\r\n  Splintertooth: DEPRECATED_MALIGN_SORCERY,\r\n  Squigalanche: DEPRECATED_AOS_3,\r\n  Sunblade: DEPRECATED_MALIGN_SORCERY,\r\n  Torrbad: DEPRECATED_AOS_3,\r\n  Troggherd: DEPRECATED_AOS_3,\r\n  Tuskhelm: DEPRECATED_MALIGN_SORCERY,\r\n  Wargrove: DEPRECATED_AOS_3,\r\n  Wraithbow: DEPRECATED_MALIGN_SORCERY,\r\n}\r\n\r\ntype TParserOptions = {\r\n  [key in TImportParsers]: {\r\n    ambiguousNamesMap: Record<string, string>\r\n    checkPoorSpacing: boolean\r\n    fileReadError: string\r\n    typoMap: Record<string, string>\r\n  }\r\n}\r\n\r\nexport const parserOptions: TParserOptions = {\r\n  [WARSCROLL_BUILDER]: {\r\n    ambiguousNamesMap: {},\r\n    checkPoorSpacing: false,\r\n    fileReadError: `There was a problem reading this file. Please try re-downloading it from ${WARSCROLL_BUILDER}.`,\r\n    typoMap: warscrollTypoMap,\r\n  },\r\n  [WARHAMMER_APP]: {\r\n    ambiguousNamesMap: {},\r\n    checkPoorSpacing: false,\r\n    fileReadError: `There was a problem parsing this text. Please try copy + pasting it again from the ${WARHAMMER_APP}.`,\r\n    typoMap: warhammerAppTypoMap,\r\n  },\r\n  [AZYR]: {\r\n    ambiguousNamesMap: azyrAmbiguousNamesMap,\r\n    checkPoorSpacing: true,\r\n    fileReadError: `There was a problem reading this file.`,\r\n    typoMap: azyrTypoMap,\r\n  },\r\n  [BATTLESCRIBE]: {\r\n    ambiguousNamesMap: {},\r\n    checkPoorSpacing: false,\r\n    fileReadError: `There was a problem reading this file.`,\r\n    typoMap: battlescribeTypoMap,\r\n  },\r\n  [UNKNOWN]: {\r\n    ambiguousNamesMap: {},\r\n    checkPoorSpacing: false,\r\n    fileReadError: `This file format is not recognized.`,\r\n    typoMap: {},\r\n  },\r\n}\r\n","import { useTheme } from 'context/useTheme'\r\nimport { useCallback } from 'react'\r\nimport Select, { ActionMeta, OnChangeValue } from 'react-select'\r\nimport { logIndividualSelection } from 'utils/analytics'\r\nimport { titleCase } from 'utils/textUtils'\r\n\r\nexport interface IDropdownOption {\r\n  value: string\r\n  label: string\r\n}\r\ntype TSelectOneValueType = OnChangeValue<IDropdownOption, false>\r\ntype TSelectMultiValueType = OnChangeValue<IDropdownOption, true>\r\n\r\nexport type TSelectOneSetValueFn = (value: TSelectOneValueType, action: ActionMeta<IDropdownOption>) => void\r\nexport type TSelectMultiSetValueFn = (\r\n  values: TSelectMultiValueType,\r\n  action: ActionMeta<IDropdownOption>\r\n) => void\r\n\r\nexport type TFilterOptionFn = (option: { label: string; value: string }, inputValue: string) => boolean\r\n\r\ninterface ISelectOneProps {\r\n  hasDefault?: boolean\r\n  filterOption?: TFilterOptionFn\r\n  isClearable?: boolean\r\n  isDisabled?: boolean\r\n  items: string[]\r\n  setValue: TSelectOneSetValueFn\r\n  toTitle?: boolean\r\n  value?: string | null\r\n  log?: TLogOpts\r\n}\r\n\r\nexport const SelectOne = (props: ISelectOneProps) => {\r\n  const {\r\n    hasDefault = false,\r\n    filterOption = null,\r\n    isClearable = false,\r\n    isDisabled = false,\r\n    items,\r\n    log = null,\r\n    setValue,\r\n    toTitle = false,\r\n    value = null,\r\n  } = props\r\n  const { theme } = useTheme()\r\n  const options = convertToOptions(items, toTitle)\r\n  const controlledValue = value ? convertToOptions([value], false)[0] : value\r\n\r\n  const onChange: TSelectOneSetValueFn = useCallback(\r\n    (value, action) => {\r\n      if (log && action.action === 'select-option' && value?.value) {\r\n        logIndividualSelection(log.title, value.value, log.label)\r\n      }\r\n      setValue(value, action)\r\n    },\r\n    [log, setValue]\r\n  )\r\n\r\n  const selectProps: Record<string, any> = {\r\n    defaultValue: hasDefault ? options[0] : null,\r\n    isClearable,\r\n    isDisabled,\r\n    isMulti: false,\r\n    isSearchable: true,\r\n    onChange,\r\n    options,\r\n  }\r\n\r\n  if (filterOption !== null) {\r\n    selectProps.filterOption = filterOption\r\n  }\r\n\r\n  if (controlledValue !== undefined) {\r\n    selectProps.value = controlledValue\r\n  }\r\n  return (\r\n    <>\r\n      <Select\r\n        {...selectProps}\r\n        // Apply styling via theme context\r\n        className={theme.text}\r\n        theme={defaultTheme => ({\r\n          ...defaultTheme,\r\n          colors: {\r\n            ...defaultTheme.colors,\r\n            ...theme.selectTheme,\r\n          },\r\n        })}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const convertToOptions = (items: string[] = [], toTitle: boolean = true): IDropdownOption[] => {\r\n  return items.map(i => ({ value: i, label: toTitle ? titleCase(i) : i }))\r\n}\r\n\r\ntype TLogOpts = { title: string; label: string } | null\r\n\r\ninterface ISelectMultiProps {\r\n  hasDefault?: boolean\r\n  isClearable?: boolean\r\n  items: string[]\r\n  setValues: TSelectMultiSetValueFn\r\n  toTitle?: boolean\r\n  values: string[]\r\n  log?: TLogOpts\r\n}\r\n\r\nexport const SelectMulti = (props: ISelectMultiProps) => {\r\n  const {\r\n    hasDefault = false,\r\n    isClearable = false,\r\n    items,\r\n    log = null,\r\n    setValues,\r\n    toTitle = false,\r\n    values,\r\n  } = props\r\n  const { theme } = useTheme()\r\n  const options = convertToOptions(items, toTitle)\r\n  const selectValues = convertToOptions(values, toTitle)\r\n\r\n  const handleChange: TSelectMultiSetValueFn = useCallback(\r\n    (value, action) => {\r\n      if (log && action.action === 'select-option' && action?.option?.value) {\r\n        logIndividualSelection(log.title, action.option.value, log.label)\r\n      }\r\n      setValues(value, action)\r\n    },\r\n    [log, setValues]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        value={selectValues}\r\n        defaultValue={hasDefault ? options[0] : null}\r\n        closeMenuOnSelect={false}\r\n        isClearable={isClearable}\r\n        isMulti={true}\r\n        isSearchable={true}\r\n        onChange={handleChange}\r\n        options={options}\r\n        // Apply styling via theme context\r\n        className={theme.text}\r\n        theme={defaultTheme => ({\r\n          ...defaultTheme,\r\n          colors: {\r\n            ...defaultTheme.colors,\r\n            ...theme.selectTheme,\r\n          },\r\n        })}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { mergeParentEffectObjs } from 'factions/temporaryAdapter'\r\nimport { uniq } from 'lodash'\r\nimport { entryKeyToSelectionsKey, TEffects, TEntry } from 'types/data'\r\nimport { TSelectionTypes } from 'types/selections'\r\nimport { ISideEffectsPayload } from 'utils/withSelect'\r\n\r\nexport const getSideEffects = (items: TEntry[]) => {\r\n  const Collection = items?.reduce((accum, item) => {\r\n    accum[item.name] = {}\r\n\r\n    // We like using mandatory (and we will probably ONLY do this in the future)\r\n    checkForMandatory(item, accum, item.name)\r\n\r\n    // We don't like doing it this way!\r\n    item.effects.forEach(effect => checkEffects(effect, item.name, accum))\r\n\r\n    return accum\r\n  }, {} as ISideEffectsPayload)\r\n\r\n  return Collection\r\n}\r\n\r\nconst checkEffects = (effect: TEffects, itemName: string, accum: ISideEffectsPayload) => {\r\n  let addedToAccum = false\r\n\r\n  Object.keys(entryKeyToSelectionsKey).forEach(key => {\r\n    if (addedToAccum) return\r\n    if (effect[key]) {\r\n      addToAccum(accum, itemName, effect.name, entryKeyToSelectionsKey[key])\r\n      addedToAccum = true\r\n    }\r\n  })\r\n}\r\n\r\nconst addToAccum = (\r\n  accum: ISideEffectsPayload,\r\n  itemName: string,\r\n  effectName: string,\r\n  type: TSelectionTypes\r\n) => {\r\n  if (!accum[itemName]) accum[itemName] = { [type]: {} }\r\n  const obj = accum[itemName][type] || { values: [] }\r\n  const values = obj.values || []\r\n  accum[itemName][type] = { values: uniq(values.concat(effectName)) }\r\n}\r\n\r\n/**\r\n * A recursive function that checks for all children's mandatory keys\r\n * Probably not very good for performance... This is why Google won't hire me.\r\n *\r\n * @param item\r\n * @param accum\r\n * @param accumKey - Where should we save these sideEffects in accum? - aka item.name\r\n */\r\nconst checkForMandatory = (item: TEntry, accum: ISideEffectsPayload, accumKey: string) => {\r\n  if (!item.mandatory) return\r\n\r\n  Object.keys(item.mandatory).forEach(sliceKey => {\r\n    let key = sliceKey as TSelectionTypes\r\n\r\n    const slice = item?.mandatory?.[key]\r\n    if (!slice || !slice.length) return\r\n\r\n    const mergedEntries = mergeParentEffectObjs(slice)\r\n\r\n    mergedEntries.forEach(_entry => {\r\n      addToAccum(accum, accumKey, _entry.name, key)\r\n      if (_entry.mandatory) checkForMandatory(_entry, accum, accumKey)\r\n    })\r\n  })\r\n}\r\n","import { ActionCreatorWithPayload } from '@reduxjs/toolkit'\r\nimport { TSelectMultiSetValueFn, TSelectOneSetValueFn } from 'components/input/select'\r\nimport { selectionActions } from 'ducks'\r\nimport { store } from 'store'\r\nimport { TSelectionTypes } from 'types/selections'\r\nimport { logIndividualSelection } from 'utils/analytics'\r\nimport { titleCase } from 'utils/textUtils'\r\n\r\ntype TWithSelectOne = (method: (value: string | null) => void) => TSelectOneSetValueFn\r\n\r\nexport const withSelectOne: TWithSelectOne = method => selectValue => {\r\n  return method(selectValue?.value || null)\r\n}\r\n\r\ntype TWithSelectMultipleWithPayload = (\r\n  method: ActionCreatorWithPayload<any, string>,\r\n  key: string,\r\n  payload?: Record<string, any>\r\n) => TSelectMultiSetValueFn\r\n\r\n/**\r\n * This dispatches for you, no need to do it yourself\r\n *\r\n * @param method\r\n * @param key\r\n * @param payload\r\n */\r\nexport const withSelectMultipleWithPayload: TWithSelectMultipleWithPayload =\r\n  (method, key, payload = {}) =>\r\n  selectValues => {\r\n    const { dispatch } = store\r\n    const values = selectValues?.map(x => x.value) || []\r\n    dispatch(method({ ...payload, [key]: values }))\r\n  }\r\n\r\nexport interface ISideEffectsPayload {\r\n  [key: string]: {\r\n    [key in TSelectionTypes]?: {\r\n      values: string[]\r\n    }\r\n  }\r\n}\r\n\r\ntype TWithSelectMultiWithSideEffects = (\r\n  method: ActionCreatorWithPayload<string[], string>,\r\n  payload: ISideEffectsPayload,\r\n  label: string\r\n) => TSelectMultiSetValueFn\r\n\r\n/**\r\n * This dispatches for you, no need to do it yourself\r\n *\r\n * @param method\r\n * @param payload\r\n * @param label\r\n */\r\nexport const withSelectMultiWithSideEffects: TWithSelectMultiWithSideEffects =\r\n  (method, payload, label) =>\r\n  (selectValues, { action }) => {\r\n    const { dispatch } = store\r\n    const values = selectValues?.map(x => x.value) || []\r\n\r\n    // Set the given value for the dropdown\r\n    dispatch(method(values))\r\n\r\n    // Don't add side effects if we're just removing values from the dropdown\r\n    if (action === 'remove-value') return\r\n\r\n    // Handle side effects\r\n    Object.keys(payload).forEach(value => {\r\n      if (values.includes(value)) {\r\n        Object.keys(payload[value]).forEach(_slice => {\r\n          const sideEffectVals: string[] = payload[value][_slice].values\r\n\r\n          if (sideEffectVals) {\r\n            dispatch(\r\n              selectionActions.addToSelections({\r\n                value,\r\n                values: sideEffectVals,\r\n                slice: _slice as TSelectionTypes,\r\n              })\r\n            )\r\n\r\n            const trait = titleCase(_slice)\r\n\r\n            // Log each value to GA\r\n            sideEffectVals.forEach((val: string) => {\r\n              logIndividualSelection(trait, val, label)\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\nexport const handleSelectOneSideEffects = (payload: ISideEffectsPayload) => {\r\n  const { dispatch } = store\r\n\r\n  // Handle side effects\r\n  Object.entries(payload).forEach(([_key, _value]) => {\r\n    Object.keys(_value).forEach(_slice => {\r\n      const sideEffectVals: string[] = _value[_slice].values\r\n      if (sideEffectVals) {\r\n        dispatch(\r\n          selectionActions.addToSelections({\r\n            value: _key,\r\n            values: sideEffectVals,\r\n            slice: _slice as TSelectionTypes,\r\n          })\r\n        )\r\n      }\r\n    })\r\n  })\r\n}\r\n","import { useAppStatus } from 'context/useAppStatus'\r\nimport Switch from 'react-switch'\r\nimport { centerContentClass } from 'theme/helperClasses'\r\n\r\nconst ToggleGameMode = () => {\r\n  const { isGameMode, toggleGameMode } = useAppStatus()\r\n\r\n  const enableEditMode = () => isGameMode && toggleGameMode()\r\n  const enableGameMode = () => !isGameMode && toggleGameMode()\r\n\r\n  const spanClass = `align-self-center pb-2`\r\n\r\n  return (\r\n    <div className={`${centerContentClass} text-white`}>\r\n      <div className={`d-inline-flex flex-row`}>\r\n        <span\r\n          className={`${spanClass} mr-2 ${isGameMode ? `` : `font-weight-bold`}`}\r\n          onClick={enableEditMode}\r\n        >\r\n          Edit\r\n        </span>\r\n        <label htmlFor=\"game-mode-switch\" className=\"mb-0\">\r\n          <Switch\r\n            onChange={toggleGameMode}\r\n            checked={isGameMode}\r\n            onColor=\"#1C7595\"\r\n            onHandleColor=\"#E9ECEF\"\r\n            handleDiameter={30}\r\n            uncheckedIcon={false}\r\n            checkedIcon={false}\r\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n            height={20}\r\n            width={80}\r\n            className=\"react-switch\"\r\n            id=\"game-mode-switch\"\r\n          />\r\n        </label>\r\n        <span\r\n          className={`${spanClass} ml-2 ${isGameMode ? `font-weight-bold` : ``}`}\r\n          onClick={enableGameMode}\r\n        >\r\n          Play\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToggleGameMode\r\n","import { LinkNewTab } from 'components/helpers/link'\r\nimport { LoadingHeader } from 'components/helpers/suspenseFallbacks'\r\nimport { SelectOne, TFilterOptionFn } from 'components/input/select'\r\nimport ToggleGameMode from 'components/input/toggle_game_mode'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useSavedArmies } from 'context/useSavedArmies'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { factionNamesActions, realmscapeActions, selectionActions, selectors } from 'ducks'\r\nimport { PRIMARY_FACTIONS, TPrimaryFactions } from 'meta/factions'\r\nimport { getFactionFromList } from 'meta/faction_list'\r\nimport React, { lazy, Suspense, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IArmy } from 'types/army'\r\nimport { logFactionSwitch, logSubFactionSwitch, resetAnalyticsStore } from 'utils/analytics'\r\nimport { getArmy } from 'utils/getArmy/getArmy'\r\nimport { getSideEffects } from 'utils/getSideEffects'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\nimport { importFactionNameMap } from 'utils/import/options'\r\nimport { titleCase } from 'utils/textUtils'\r\nimport { handleSelectOneSideEffects, withSelectOne } from 'utils/withSelect'\r\n\r\nconst Navbar = lazy(() => import('./navbar'))\r\n\r\nconst { resetAllySelections, resetSelections, resetSideEffects, removeSelections } = selectionActions\r\nconst { resetRealmscapeStore } = realmscapeActions\r\nconst { setFactionName, setSubFactionName } = factionNamesActions\r\n\r\nexport const Header = () => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <div className={theme.headerColor}>\r\n      <Suspense fallback={<LoadingHeader />}>\r\n        <Navbar />\r\n      </Suspense>\r\n      <Jumbotron />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Jumbotron = () => {\r\n  const { isGameMode } = useAppStatus()\r\n  const { isMobile } = useWindowSize()\r\n  const { loadedArmy } = useSavedArmies()\r\n  const { theme } = useTheme()\r\n  const factionName = useSelector(selectors.selectFactionName)\r\n\r\n  const jumboClass = `jumbotron jumbotron-fluid text-center ${theme.headerColor} d-print-none mb-0 pt-4 ${\r\n    isMobile ? `pb-2` : `pb-3`\r\n  }`\r\n\r\n  return (\r\n    <div className={jumboClass}>\r\n      <div className=\"container\">\r\n        <h1 className=\"display-5 text-white\">Age of Sigmar Reminders</h1>\r\n        <p className=\"mt-3 mb-1 d-none d-sm-block text-white\">\r\n          By Davis E. Ford, Updated to 4th E. by Joel Scrivner -{' '}\r\n          <LinkNewTab className=\"text-white\" href=\"//daviseford.com\" label={'Davis E. Ford website'}>\r\n            daviseford.com\r\n          </LinkNewTab>\r\n        </p>\r\n        <ToggleGameMode />\r\n        {isGameMode ? (\r\n          <div className={`pt-1 pb-0 justify-content-center`}>\r\n            <h2 className=\"display-5 text-white\">\r\n              {loadedArmy ? loadedArmy.armyName : titleCase(factionName)}\r\n            </h2>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <FactionSelectComponent />\r\n            <SubFactionSelectComponent />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Allows us to type in subfaction names and helpfully gets factionNames\r\n *\r\n * e.g. User can type \"Ironjawz\" and will get the \"Orruk Warclans\" result suggested!\r\n *\r\n * @param option\r\n * @param inputValue\r\n */\r\nconst filterFactionsAndSubfactions: TFilterOptionFn = (option, inputValue) => {\r\n  const { label, value } = option\r\n  const inputValueLower = inputValue.toLowerCase()\r\n  const viaSubfaction = Object.entries(importFactionNameMap || {}).reduce((a, [key, faction]) => {\r\n    if (key.toLowerCase().includes(inputValueLower)) a.push(faction.factionName)\r\n    return a\r\n  }, [] as string[])\r\n  return label.toLowerCase().includes(inputValueLower) || viaSubfaction.includes(value)\r\n}\r\n\r\nconst FactionSelectComponent = () => {\r\n  const dispatch = useDispatch()\r\n  const { isOnline } = useAppStatus()\r\n  const { setLoadedArmy } = useSavedArmies()\r\n  const factionName = useSelector(selectors.selectFactionName)\r\n\r\n  const setValue = withSelectOne(value => {\r\n    setLoadedArmy(null)\r\n    dispatch(resetSelections())\r\n    dispatch(resetSideEffects())\r\n    dispatch(resetRealmscapeStore())\r\n    dispatch(resetAllySelections())\r\n    resetAnalyticsStore()\r\n\r\n    const { subFactionKeys, SubFactions } = getFactionFromList(value as TPrimaryFactions)\r\n    const name = subFactionKeys[0]\r\n    dispatch(setSubFactionName(name))\r\n\r\n    // Handle subfaction sideEffects\r\n    const sideEffects = getSideEffects([{ ...SubFactions[name], name }])\r\n    handleSelectOneSideEffects(sideEffects)\r\n\r\n    dispatch(setFactionName(value as TPrimaryFactions))\r\n\r\n    if (isOnline) {\r\n      logFactionSwitch(value)\r\n      logSubFactionSwitch(name)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-white\">Select your faction to get started:</span>\r\n      <div className={`d-flex pt-3 pb-2 justify-content-center`}>\r\n        <div className=\"col-12 col-sm-9 col-md-6 col-lg-4 text-left\">\r\n          <SelectOne\r\n            value={titleCase(factionName)}\r\n            items={PRIMARY_FACTIONS}\r\n            setValue={setValue}\r\n            hasDefault={true}\r\n            toTitle={true}\r\n            filterOption={filterFactionsAndSubfactions}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SubFactionSelectComponent = () => {\r\n  const dispatch = useDispatch()\r\n  const { subFactionName, factionName } = useSelector(selectors.selectFactionNameSlice)\r\n  const { origin_realm, realmscape } = useSelector(selectors.selectRealmscapeSlice)\r\n  const sideEffects = useSelector(selectors.selectSideEffects)\r\n  const factionInfo = useMemo(() => getFactionFromList(factionName), [factionName])\r\n\r\n  // Only display if we actually need to choose between subfactions\r\n  if (!factionInfo?.subFactionKeys || factionInfo.subFactionKeys.length < 2) return <></>\r\n\r\n  const setValue = withSelectOne(name => {\r\n    const army = getArmy(factionName, name || null, origin_realm, realmscape) as IArmy\r\n\r\n    const types = [\r\n      army.Artifacts || [],\r\n      army.Battalions || [],\r\n      army.CommandAbilities || [],\r\n      army.CommandTraits || [],\r\n      army.EndlessSpells || [],\r\n      army.Flavors || [],\r\n      army.MountTraits || [],\r\n      army.Prayers || [],\r\n      army.Scenery || [],\r\n      army.Spells || [],\r\n      army.Triumphs || [],\r\n      army.Units || [],\r\n      army.Manifestations || [],\r\n    ]\r\n\r\n    const validKeysInArmy = types.map(x => x.map(y => y.name)).flat()\r\n    const sideEffectKeysToRemoveFromSelections = Object.entries(sideEffects).reduce((a, [key, slice]) => {\r\n      if (validKeysInArmy.includes(key)) return a\r\n      a = a.concat(key) // Add the parent element obviously\r\n      // And now find all sub-keys for that element (we need to remove them too)\r\n      Object.entries(slice).forEach(([_k, _v]) => {\r\n        a = a.concat(..._v)\r\n      })\r\n\r\n      return a\r\n    }, [] as string[])\r\n\r\n    dispatch(removeSelections(sideEffectKeysToRemoveFromSelections))\r\n    dispatch(setSubFactionName(name || ''))\r\n\r\n    if (name) {\r\n      const sideEffects = getSideEffects([{ ...factionInfo.SubFactions[name], name }])\r\n      handleSelectOneSideEffects(sideEffects)\r\n      logSubFactionSwitch(name)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-white\">Select your sub-faction:</span>\r\n      <div className={`d-flex pt-3 pb-2 justify-content-center`}>\r\n        <div className=\"col-12 col-sm-9 col-md-6 col-lg-4 text-left\">\r\n          <SelectOne\r\n            value={subFactionName}\r\n            items={factionInfo.subFactionKeys}\r\n            setValue={setValue}\r\n            hasDefault={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { LargeSpinner } from 'components/helpers/suspenseFallbacks'\r\nimport { Header } from 'components/page/homeHeader'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useSubscription } from 'context/useSubscription'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { lazy, Suspense, useEffect } from 'react'\r\nimport { logPageView } from 'utils/analytics'\r\n\r\nconst AlliedArmies = lazy(() => import('components/input/ally_armies'))\r\nconst AppBanner = lazy(() => import('components/info/banners/app_banner'))\r\nconst ArmyBuilder = lazy(() => import('components/input/army_builder'))\r\nconst FooterComponent = lazy(() => import('components/page/footer'))\r\nconst LoadedArmyHeader = lazy(() => import('components/input/savedArmies/loaded_army_header'))\r\nconst PrintArmy = lazy(() => import('components/print/printArmy'))\r\nconst PrintFooter = lazy(() => import('components/print/printFooter'))\r\nconst Reminders = lazy(() => import('components/info/reminders'))\r\nconst Toolbar = lazy(() => import('components/input/toolbar/toolbar'))\r\nconst UpdateBanner = lazy(() => import('components/info/banners/update_banner'))\r\n\r\nconst Home = () => {\r\n  const { getSubscription } = useSubscription()\r\n  const { theme } = useTheme()\r\n  const { isGameMode } = useAppStatus()\r\n\r\n  useEffect(() => {\r\n    logPageView()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getSubscription()\r\n  }, [getSubscription])\r\n\r\n  return (\r\n    <div className={theme.bgColor}>\r\n      <Header />\r\n\r\n      <Suspense fallback={<></>}>\r\n        <AppBanner />\r\n      </Suspense>\r\n\r\n      <Suspense fallback={<></>}>\r\n        <UpdateBanner />\r\n      </Suspense>\r\n\r\n      {!isGameMode && (\r\n        <>\r\n          <Suspense fallback={<></>}>\r\n            <LoadedArmyHeader />\r\n          </Suspense>\r\n\r\n          <Suspense fallback={<LargeSpinner className=\"mt-5\" />}>\r\n            <ArmyBuilder />\r\n          </Suspense>\r\n\r\n          <Suspense fallback={<></>}>\r\n            <AlliedArmies />\r\n          </Suspense>\r\n        </>\r\n      )}\r\n\r\n      <Suspense fallback={<></>}>\r\n        <Toolbar />\r\n      </Suspense>\r\n\r\n      <Suspense fallback={<></>}>\r\n        <Reminders />\r\n\r\n        <PrintArmy />\r\n\r\n        <PrintFooter />\r\n\r\n        <FooterComponent />\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}