{"version":3,"sources":["components/helpers/link.tsx","components/page/contact.tsx","components/info/donate.tsx","components/info/offline.tsx","components/page/footer.tsx","components/routes/Faq.tsx"],"names":["LinkNewTab","_ref","href","children","label","props","_jsx","target","rel","LinkButton","Icon","btnClass","text","isMobile","useWindowSize","className","concat","onClick","e","logClick","_jsxs","centerContentClass","Contact","size","isOffline","useAppStatus","isDark","useTheme","_Fragment","GITHUB_URL","FaGithub","FaEnvelopeOpenText","FaDiscord","DonateComponent","theme","bgColor","role","IconContext","Provider","value","PayPalButton","handleClick","preventDefault","window","open","FaCcPaypal","style","cursor","OfflineComponent","isOnline","userName","LocalUserName","get","card","FiWifiOff","Footer","Disclaimer","ReleaseNotes","pkgJson","version","Navbar","lazy","FaqEntry","title","imgUrl","src","alt","width","height","PageHeader","Faq","useEffect","logPageView","scrollTo","headerColor","Suspense","fallback","LoadingHeader"],"mappings":"0HAAA,6GAaO,MAAMA,EAAaC,IAAA,IAAC,KAAEC,EAAI,SAAEC,EAAQ,MAAEC,KAAUC,GAA4CJ,EAAA,OACjGK,cAAA,KAAGJ,KAAMA,EAAMK,OAAO,SAASC,IAAI,sBAAsB,aAAYJ,KAAWC,EAAKF,SAClFA,GACC,EAUOM,EAAcJ,IACzB,MAAM,KAAEK,EAAI,KAAER,EAAI,SAAES,EAAQ,KAAEC,GAASP,GACjC,SAAEQ,GAAaC,cAErB,OACER,cAACN,EAAU,CACTE,KAAMA,EACNa,UAAS,GAAAC,OAAKL,EAAQ,SACtBM,QAASC,GAAKC,YAAS,WAADH,OAAYJ,IAClCR,MAAOQ,EAAKT,SAEZiB,eAAA,OAAKL,UAAWM,IAAmBlB,SAAA,CACjCG,cAACI,EAAI,CAACK,UAAWF,EAAQ,qBACxBA,EAAQ,OAAAG,OAAYJ,OAEZ,C,mCCzCjB,qDAiCeU,IAvBCrB,IAAyC,IAAxC,KAAEsB,EAAO,UAAyBtB,EACjD,MAAM,UAAEuB,GAAcC,eAChB,OAAEC,GAAWC,cAEbhB,EAAQ,OAAAK,OADW,UAATO,EAAmB,SAAoB,UAATA,EAAmB,SAAW,GAC7C,iBAAAP,OAAgBU,EAAM,eAAmB,SAExE,OAAIF,EAAkB,KAGpBJ,eAAAQ,WAAA,CAAAzB,SAAA,CACEG,cAACG,IAAU,CAACP,KAAM2B,IAAYlB,SAAUA,EAAUD,KAAMoB,IAAUlB,KAAM,WACxEN,cAACG,IAAU,CACTP,KAAK,gCACLS,SAAUA,EACVD,KAAMqB,IACNnB,KAAM,UAGRN,cAACG,IAAU,CAACP,KAAK,uBAAuBS,SAAUA,EAAUD,KAAMsB,IAAWpB,KAAM,cAClF,C,+yICpBA,MAAMqB,EAAkBA,KAC7B,MAAM,UAAET,GAAcC,eAChB,MAAES,GAAUP,cAwBlB,OAAIH,EAAkB,KAGpBlB,cAAAsB,WAAA,CAAAzB,SACEG,cAAA,OAAKS,UAAS,aAAAC,OAAekB,EAAMC,QAAO,SAAQhC,SAChDG,cAAA,OAAKS,UAAU,6BAA4BZ,SACzCiB,eAAA,OACEL,UAAS,mDAAAC,OAAqDkB,EAAMC,QAAO,KAAAnB,OAAIkB,EAAMtB,KAAI,SAAQT,SAAA,CAOjGG,cAAA,OAAKS,UAAU,iDAAgDZ,SAC7DG,cAAA,OAAKS,UAAU,yBAAyBqB,KAAK,QAAQ,aAAW,SAAQjC,SACtEG,cAAA,OAAKS,UAAU,iBAAiBqB,KAAK,QAAQ,aAAW,iBAAgBjC,SACtEG,cAAC+B,IAAYC,SAAQ,CAACC,MAAO,CAAEhB,KAAM,SAAUpB,SAC7CG,cAACkC,EAAY,CAACC,YAxBLvB,IACzBA,EAAEwB,iBACFvB,YAAS,gBACTwB,OAAOC,KAAK,8BAA8B,YA6BlCxB,eAAA,SAAOL,UAAU,mBAAkBZ,SAAA,CAAC,+CAElCG,cAAA,SAAM,uDAMb,EAqDDkC,EAA0BnC,GAC9BC,cAACuC,IAAU,CAAC5B,QAASZ,EAAMoC,YAAa1B,UAAW,OAAQ+B,MAAO,CAAEC,OAAQ,a,qBCnF/DC,MAnCUA,KACvB,MAAM,SAAEC,GAAaxB,eACf,MAAES,GAAUP,cAElB,GAAIsB,EAAU,OAAO,KAErB,MAAMC,EAAWC,IAAcC,MAE/B,OACE9C,cAAA,OAAKS,UAAU,iBAAgBZ,SAC7BG,cAAA,OAAKS,UAAU,6BAA4BZ,SACzCiB,eAAA,OACEL,UAAS,wDAAAC,OAA0DkB,EAAMmB,KAAI,KAAArC,OAAIkB,EAAMC,QAAO,KAAAnB,OAAIkB,EAAMtB,KAAI,qBAAoBT,SAAA,CAEhIiB,eAAA,KAAGL,UAAU,cAAaZ,SAAA,CACxBG,cAACgD,IAAS,CAACvC,UAAU,SAAS,cACnBT,cAAA,UAAAH,SAAQ,YAAgB,SACnCG,cAACgD,IAAS,CAACvC,UAAU,YAEvBT,cAAA,KAAAH,SAAG,+CAA8C,gCAE9C+C,GACD9B,eAAAQ,WAAA,CAAAzB,SAAA,CACEG,cAAA,SAAM,sCAENA,cAAA,SAAM,2CAMV,E,kBCVKiD,UAhBAA,IAEXnC,eAAA,OAAKL,UAAU,yBAAwBZ,SAAA,CACrCG,cAAC2B,EAAe,IAChB3B,cAAC0C,EAAgB,IACjB1C,cAACkD,EAAU,IACXlD,cAAA,OAAKS,UAAU,uBAAsBZ,SACnCG,cAAA,OAAKS,UAAU,MAAKZ,SAClBG,cAACgB,IAAO,CAACC,KAAK,cAGlBjB,cAACmD,EAAY,OAOnB,MAAMD,EAAaA,KACjB,MAAM,MAAEtB,GAAUP,cAElB,OACErB,cAAA,OAAKS,UAAS,0CAAAC,OAA4CkB,EAAMC,QAAO,SAAQhC,SAC7EG,cAAA,OAAKS,UAAU,8CAA6CZ,SAC1DiB,eAAA,SAAOL,UAAS,kBAAAC,OAAoBkB,EAAMtB,MAAOT,SAAA,CAAC,+GAGhDG,cAAA,SAAM,2FAGN,EAIJmD,EAAeA,KACnB,MAAM,MAAEvB,GAAUP,cAElB,OACErB,cAAA,OAAKS,UAAS,mBAAAC,OAAqBkB,EAAMC,QAAO,cAAahC,SAC3DG,cAAA,OAAKS,UAAU,MAAKZ,SAClBG,cAACN,IAAU,CACTE,KAAK,8DACLE,MAAO,sBAAsBD,SAE7BiB,eAAA,SAAOL,UAAWmB,EAAMtB,KAAKT,SAAA,CAAC,kBAAgBuD,EAAQC,QAAQ,2BAG9D,C,mCCzDV,2DAMA,MAAMC,EAASC,gBAAK,IAAM,gCA6CpBC,EAAW7D,IAAmD,IAAlD,MAAE8D,EAAK,KAAEnD,EAAI,OAAEoD,EAAS,IAAoB/D,EAC5D,OACEK,cAAA,OAAKS,UAAW,4CAA4CZ,SAC1DiB,eAAA,OAAKL,UAAU,+FAA8FZ,SAAA,CAC3GiB,eAAA,OAAKL,UAAU,6CAA4CZ,SAAA,CACzDG,cAAA,MAAIS,UAAU,OAAMZ,SAAE4D,IACtBzD,cAAA,KAAGS,UAAU,oBAAmBZ,SAAES,OAEnCoD,GACC1D,cAAA,OAAKS,UAAU,6EAA4EZ,SACzFG,cAAA,OACES,UAAS,kCACTkD,IAAKD,EACLE,IAAI,GACJC,MAAM,MACNC,OAAO,MACPhC,KAAK,cAKT,EAIJiC,EAAaA,KACjB,MAAM,MAAEnC,GAAUP,cAClB,OACEP,eAAA,OAAKL,UAAS,aAAAC,OAAekB,EAAMC,QAAO,KAAAnB,OAAIkB,EAAMtB,KAAI,0BAAyBT,SAAA,CAC/EG,cAAA,MAAAH,SAAI,+BACJG,cAAA,WACI,EAIKgE,UA9EHA,KACV,MAAM,MAAEpC,GAAUP,cAOlB,OALA4C,qBAAU,KACRC,cACA7B,OAAO8B,SAAS,EAAG,EAAE,GACpB,IAGDrD,eAAA,OAAKL,UAAS,WAAAC,OAAakB,EAAMC,SAAUhC,SAAA,CACzCG,cAAA,OAAKS,UAAS,GAAAC,OAAKkB,EAAMwC,YAAW,SAAQvE,SAC1CG,cAACqE,WAAQ,CAACC,SAAUtE,cAACuE,IAAa,IAAI1E,SACpCG,cAACsD,EAAM,QAGXtD,cAAC+D,EAAU,IAEX/D,cAAA,OAAKS,UAAS,aAAAC,OAAekB,EAAMC,QAAO,KAAAnB,OAAIkB,EAAMtB,MAAOT,SACzDiB,eAAA,OAAKL,UAAS,MAAQZ,SAAA,CACpBG,cAACwD,EAAQ,CACPC,MAAM,+BACNnD,KAAI,gKACJoD,OAAQ,sCAEV1D,cAACwD,EAAQ,CACPC,MAAM,wBACNnD,KAAI,qFACJoD,OAAQ,6BAEV1D,cAACwD,EAAQ,CACPC,MAAM,6CACNnD,KAAI,6EAKVN,cAACiD,UAAM,MACH,C","file":"static/js/22.6afe76ee.chunk.js","sourcesContent":["import React from 'react'\r\nimport { IconType } from 'react-icons'\r\nimport { centerContentClass } from 'theme/helperClasses'\r\nimport { logClick } from 'utils/analytics'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\n\r\ninterface ILinkProps {\r\n  className?: string\r\n  href: string\r\n  label: string\r\n  onClick?: (...args: any[]) => void\r\n}\r\n\r\nexport const LinkNewTab = ({ href, children, label, ...props }: React.PropsWithChildren<ILinkProps>) => (\r\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" aria-label={label} {...props}>\r\n    {children}\r\n  </a>\r\n)\r\n\r\ninterface ILinkBtnProps {\r\n  href: string\r\n  btnClass: string\r\n  Icon: IconType\r\n  text: string\r\n}\r\n\r\nexport const LinkButton = (props: ILinkBtnProps) => {\r\n  const { Icon, href, btnClass, text } = props\r\n  const { isMobile } = useWindowSize()\r\n\r\n  return (\r\n    <LinkNewTab\r\n      href={href}\r\n      className={`${btnClass} mb-1`}\r\n      onClick={e => logClick(`Contact-${text}`)}\r\n      label={text}\r\n    >\r\n      <div className={centerContentClass}>\r\n        <Icon className={isMobile ? `mx-2 my-1` : `mr-2`} />\r\n        {isMobile ? `` : ` ${text}`}\r\n      </div>\r\n    </LinkNewTab>\r\n  )\r\n}\r\n","import { LinkButton } from 'components/helpers/link'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { FaDiscord, FaEnvelopeOpenText, FaGithub } from 'react-icons/fa'\r\nimport { GITHUB_URL } from 'utils/env'\r\n\r\ninterface IContactProps {\r\n  size?: 'normal' | 'small' | 'large'\r\n}\r\n\r\nconst Contact = ({ size = 'normal' }: IContactProps) => {\r\n  const { isOffline } = useAppStatus()\r\n  const { isDark } = useTheme()\r\n  const btnSize = size === 'small' ? 'btn-sm' : size === 'large' ? 'btn-lg' : ''\r\n  const btnClass = `btn ${btnSize} btn-outline-${isDark ? `light` : `dark`} mx-1`\r\n\r\n  if (isOffline) return null\r\n\r\n  return (\r\n    <>\r\n      <LinkButton href={GITHUB_URL} btnClass={btnClass} Icon={FaGithub} text={'Github'} />\r\n      <LinkButton\r\n        href=\"mailto:aosreminders@gmail.com\"\r\n        btnClass={btnClass}\r\n        Icon={FaEnvelopeOpenText}\r\n        text={'Email'}\r\n      />\r\n      {/* <LinkButton href=\"//reddit.com/r/AoSReminders/\" btnClass={btnClass} Icon={FaReddit} text={'Reddit'} /> */}\r\n      <LinkButton href=\"//discord.gg/2nt9Fxp\" btnClass={btnClass} Icon={FaDiscord} text={'Discord'} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","// import GenericButton from 'components/input/generic_button'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport React from 'react'\r\n// import CopyToClipboard from 'react-copy-to-clipboard'\r\nimport { IconContext } from 'react-icons'\r\nimport { FaCcPaypal } from 'react-icons/fa'\r\nimport { logClick } from 'utils/analytics'\r\n\r\nexport const DonateComponent = () => {\r\n  const { isOffline } = useAppStatus()\r\n  const { theme } = useTheme()\r\n  // const [ethClicked, setEthClicked] = useState(false)\r\n  // const [btcClicked, setBtcClicked] = useState(false)\r\n\r\n  // const handleEthClick = (e: React.MouseEvent) => {\r\n  //   e.preventDefault()\r\n  //   logClick('DonateETH')\r\n  //   setEthClicked(true)\r\n  //   setBtcClicked(false)\r\n  // }\r\n\r\n  // const handleBtcClick = (e: React.MouseEvent) => {\r\n  //   e.preventDefault()\r\n  //   logClick('DonateBTC')\r\n  //   setBtcClicked(true)\r\n  //   setEthClicked(false)\r\n  // }\r\n\r\n  const handlePaypalClick = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    logClick('DonatePayPal')\r\n    window.open('//paypal.me/ahouseofhobbies')\r\n  }\r\n\r\n  if (isOffline) return null\r\n\r\n  return (\r\n    <>\r\n      <div className={`container ${theme.bgColor} pt-4`}>\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className={`col-10 col-sm-8 col-md-6 col-lg-4 col-xl-4 card ${theme.bgColor} ${theme.text} py-3`}\r\n          >\r\n            {/* <div className=\"row justify-content-center d-print-none\">\r\n              <div className=\"col mx-2\">\r\n                <DisplayWallet ethActive={ethClicked} btcActive={btcClicked} />\r\n              </div>\r\n            </div> */}\r\n            <div className=\"row d-flex justify-content-center d-print-none\">\r\n              <div className=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Donate\">\r\n                <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"Donate options\">\r\n                  <IconContext.Provider value={{ size: '2.2em' }}>\r\n                    <PayPalButton handleClick={handlePaypalClick} />\r\n                    {/* <EthButton handleClick={handleEthClick} />\r\n                    <BtcButton handleClick={handleBtcClick} /> */}\r\n                  </IconContext.Provider>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <small className=\"text-center mt-3\">\r\n              Creating this took a lot of time and effort.\r\n              <br />\r\n              If you'd like to thank me, buy me a beer!\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// const DisplayWallet = ({ ethActive, btcActive }: { ethActive: boolean; btcActive: boolean }) => {\r\n//   const [copied, setCopied] = useState(false)\r\n//   const handleSetCopied = () => {\r\n//     setCopied(true)\r\n//     setTimeout(() => {\r\n//       setCopied(false)\r\n//     }, 5000)\r\n//   }\r\n//   const ethWallet = '0x0656E46AA9dFbB379887dD371e6f078AcE472E33'\r\n//   const btcWallet = '3JqXcy5qdoNq4DDRsJRfsFeozuhkapgBR4'\r\n//   const currentWallet = ethActive ? ethWallet : btcWallet\r\n//   const isHidden = !ethActive && !btcActive\r\n\r\n//   return (\r\n//     <div className={`row ${isHidden ? `d-none` : `d-flex mt-1 mb-3`} justify-content-center`}>\r\n//       <small className=\"text-muted\">{ethActive ? `ETH` : `BTC`} Wallet Address</small>\r\n//       <WalletCopyInput currentWallet={currentWallet} setCopied={handleSetCopied} />\r\n//       {copied && <small className=\"text-success\">Copied to clipboard.</small>}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// const WalletCopyInput = ({ currentWallet, setCopied }: { currentWallet: string; setCopied: () => void }) => (\r\n//   <div className=\"input-group\">\r\n//     <input\r\n//       type=\"text\"\r\n//       className=\"form-control\"\r\n//       aria-label=\"Copy to clipboard\"\r\n//       value={currentWallet}\r\n//       disabled\r\n//     />\r\n//     <div className=\"input-group-append\">\r\n//       <CopyToClipboard text={currentWallet} onCopy={setCopied}>\r\n//         <GenericButton className=\"btn btn-light\">\r\n//           <FaRegCopy />\r\n//         </GenericButton>\r\n//       </CopyToClipboard>\r\n//     </div>\r\n//   </div>\r\n// )\r\n\r\ntype TBtnProps = React.FC<{ handleClick: (e: React.MouseEvent) => void }>\r\n\r\n// const BtcButton: TBtnProps = props => (\r\n//   <FaBtc onClick={props.handleClick} className={'mx-2'} style={{ cursor: 'pointer' }} />\r\n// )\r\n// const EthButton: TBtnProps = props => (\r\n//   <FaEthereum onClick={props.handleClick} className={'mx-2'} style={{ cursor: 'pointer' }} />\r\n// )\r\nconst PayPalButton: TBtnProps = props => (\r\n  <FaCcPaypal onClick={props.handleClick} className={'mx-2'} style={{ cursor: 'pointer' }} />\r\n)\r\n","import { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { FiWifiOff } from 'react-icons/fi'\r\nimport { LocalUserName } from 'utils/localStore'\r\n\r\nconst OfflineComponent = () => {\r\n  const { isOnline } = useAppStatus()\r\n  const { theme } = useTheme()\r\n\r\n  if (isOnline) return null\r\n\r\n  const userName = LocalUserName.get()\r\n\r\n  return (\r\n    <div className=\"container pt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div\r\n          className={`col-12 col-sm-8 col-md-6 col-lg-6 col-xl-6 col-xxl-4 ${theme.card} ${theme.bgColor} ${theme.text} py-3 text-center`}\r\n        >\r\n          <p className=\"text-danger\">\r\n            <FiWifiOff className=\"mr-2\" />\r\n            You are in <strong>Offline</strong> mode.\r\n            <FiWifiOff className=\"ml-2\" />\r\n          </p>\r\n          <p>Your capabilites are limited in this mode.</p>\r\n          You cannot save a new army.\r\n          {!!userName && (\r\n            <>\r\n              <br />\r\n              You cannot update or delete armies.\r\n              <br />\r\n              You cannot access your profile.\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OfflineComponent\r\n","import { LinkNewTab } from 'components/helpers/link'\r\nimport { DonateComponent } from 'components/info/donate'\r\nimport OfflineComponent from 'components/info/offline'\r\nimport Contact from 'components/page/contact'\r\nimport { useTheme } from 'context/useTheme'\r\nimport pkgJson from '../../../package.json'\r\n\r\n/**\r\n * Hidden when printing\r\n */\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container d-print-none\">\r\n      <DonateComponent />\r\n      <OfflineComponent />\r\n      <Disclaimer />\r\n      <div className=\"row text-center pt-2\">\r\n        <div className=\"col\">\r\n          <Contact size=\"small\" />\r\n        </div>\r\n      </div>\r\n      <ReleaseNotes />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n\r\nconst Disclaimer = () => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <div className={`row justify-content-center text-center ${theme.bgColor} pt-0`}>\r\n      <div className=\"col-12 col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n        <small className={`DisclaimerText ${theme.text}`}>\r\n          Disclaimer: This tool is in no way endorsed or sanctioned by Games Workshop - it is unofficial and\r\n          fan-made.\r\n          <br />I take absolutely no credit for any of the Games Workshop content displayed above.\r\n        </small>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ReleaseNotes = () => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <div className={`row text-center ${theme.bgColor} pt-1 pb-2`}>\r\n      <div className=\"col\">\r\n        <LinkNewTab\r\n          href=\"https://github.com/daviseford/aos-reminders/releases/latest\"\r\n          label={'GithubLatestRelease'}\r\n        >\r\n          <small className={theme.text}>AoS Reminders v{pkgJson.version} - Release Notes</small>\r\n        </LinkNewTab>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { LoadingHeader } from 'components/helpers/suspenseFallbacks'\r\nimport Footer from 'components/page/footer'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { lazy, Suspense, useEffect } from 'react'\r\nimport { logPageView } from 'utils/analytics'\r\n\r\nconst Navbar = lazy(() => import('components/page/navbar'))\r\n\r\nconst Faq = () => {\r\n  const { theme } = useTheme()\r\n\r\n  useEffect(() => {\r\n    logPageView()\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`d-block ${theme.bgColor}`}>\r\n      <div className={`${theme.headerColor} py-2`}>\r\n        <Suspense fallback={<LoadingHeader />}>\r\n          <Navbar />\r\n        </Suspense>\r\n      </div>\r\n      <PageHeader />\r\n\r\n      <div className={`container ${theme.bgColor} ${theme.text}`}>\r\n        <div className={`row`}>\r\n          <FaqEntry\r\n            title=\"I can't recover my password!\"\r\n            text={`If you're attempting to recover your password, and you're not seeing a recovery email - please try clicking \"Continue with Google\" when you see the log in.`}\r\n            imgUrl={'/img/faq_continue_with_google.png'}\r\n          />\r\n          <FaqEntry\r\n            title=\"How do I unsubscribe?\"\r\n            text={`Log in and then visit your Profile. From there, please click \"Cancel Subscription\"`}\r\n            imgUrl={'/img/faq_unsubscribe.png'}\r\n          />\r\n          <FaqEntry\r\n            title=\"I've noticed an incorrect or missing rule!\"\r\n            text={`Please ping me on Discord, email me, or open a new issue on Github.`}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\ntype TFaqEntryProps = { title: string; text: string; imgUrl?: string }\r\n\r\nconst FaqEntry = ({ title, text, imgUrl = '' }: TFaqEntryProps) => {\r\n  return (\r\n    <div className={'col-12 col-md-8 col-lg-6 col-xl-5 mx-xl-1'}>\r\n      <div className=\"row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\">\r\n        <div className=\"col p-4 d-flex flex-column position-static\">\r\n          <h3 className=\"mb-0\">{title}</h3>\r\n          <p className=\"card-text mb-auto\">{text}</p>\r\n        </div>\r\n        {imgUrl && (\r\n          <div className=\"col-auto d-none d-block d-sm-block d-md-block d-lg-block align-self-center\">\r\n            <img\r\n              className={`mx-auto mb-4 img-fluid bg-white`}\r\n              src={imgUrl}\r\n              alt=\"\"\r\n              width=\"200\"\r\n              height=\"250\"\r\n              role=\"img\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PageHeader = () => {\r\n  const { theme } = useTheme()\r\n  return (\r\n    <div className={`container ${theme.bgColor} ${theme.text} text-center mt-3 pb-2`}>\r\n      <h2>Frequently Asked Questions</h2>\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Faq\r\n"],"sourceRoot":""}