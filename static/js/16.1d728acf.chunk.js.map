{"version":3,"sources":["../../../Warhammer/AOS Reminders/src/components/helpers/link.tsx","../../../Warhammer/AOS Reminders/src/utils/openPopup.ts","../../../Warhammer/AOS Reminders/src/utils/hooks/useLogin.tsx","../../../Warhammer/AOS Reminders/src/components/page/contact.tsx","../../../Warhammer/AOS Reminders/src/components/page/navbar.tsx","../../../Warhammer/AOS Reminders/src/components/helpers/alreadySubscribed.tsx","../../../Warhammer/AOS Reminders/src/components/page/redemption.tsx","../../../Warhammer/AOS Reminders/src/components/routes/Redeem.tsx"],"names":["LinkNewTab","_ref","href","children","label","props","_jsx","target","rel","LinkButton","Icon","btnClass","text","isMobile","useWindowSize","className","concat","onClick","e","logClick","_jsxs","centerContentClass","openPopup","left","window","screenX","innerWidth","top","screenY","innerHeight","open","undefined","useLogin","isLoading","loginWithPopup","useAuth0","popupIsClosed","setPopupIsClosed","useState","useMemo","isLoggingIn","login","_e$preventDefault","preventDefault","call","origin","popup","timer","setInterval","closed","clearInterval","logEvent","onPopupClose","authorizationParams","redirect_uri","location","Contact","size","isOffline","useAppStatus","isDark","useTheme","_Fragment","GITHUB_URL","FaGithub","FaEnvelopeOpenText","FaDiscord","Navbar","isAuthenticated","logout","isActive","subscriptionLoading","useSubscription","isTinyMobile","pathname","loginBtnText","OfflineHeader","LoadingHeader","discount","SubscriptionPlans","some","x","sale","max","map","discount_pct","NavbarWrapper","ROUTES","HOME","Link","to","navbarStyles","link","PROFILE","SUBSCRIBE","FAQ","GenericButton","btn","handleLoginBtn","LocalUserName","clear","LocalSavedArmies","LocalTheme","clientId","config","logoutParams","returnTo","BASE_URL","AlreadySubscribed","theme","useEffect","setTimeout","replace","headerColor","RedemptionLogin","handleClick","RedemptionSuccess","FaRegSmileBeam","handleClickSuccess","RedemptionError","error","showButton","disabled","FaRegFrown","lazy","Preamble","RedeemSection","user","redeemInfo","getRedemptionInfo","LocalRedemptionKey","get","giftId","redeem","referrer","qs","parse","search","ignoreQueryPrefix","isString","userId","success","setSuccess","setError","NoKeyFound","email","async","body","SubscriptionApi","redeemGift","userName","err","console","setLocalRedemptionKey","set","Login","Redeem","getSubscription","setLightTheme","containerClass","bgColor","logPageView","LoadingBody","Suspense","fallback"],"mappings":"4HAAA,6GAaO,MAAMA,EAAaC,IAAA,IAAC,KAAEC,EAAI,SAAEC,EAAQ,MAAEC,KAAUC,GAA4CJ,EAAA,OACjGK,cAAA,KAAGJ,KAAMA,EAAMK,OAAO,SAASC,IAAI,sBAAsB,aAAYJ,KAAWC,EAAKF,SAClFA,GACC,EAUOM,EAAcJ,IACzB,MAAM,KAAEK,EAAI,KAAER,EAAI,SAAES,EAAQ,KAAEC,GAASP,GACjC,SAAEQ,GAAaC,cAErB,OACER,cAACN,EAAU,CACTE,KAAMA,EACNa,UAAS,GAAAC,OAAKL,EAAQ,SACtBM,QAASC,GAAKC,YAAS,WAADH,OAAYJ,IAClCR,MAAOQ,EAAKT,SAEZiB,eAAA,OAAKL,UAAWM,IAAmBlB,SAAA,CACjCG,cAACI,EAAI,CAACK,UAAWF,EAAQ,qBACxBA,EAAQ,OAAAG,OAAYJ,OAEZ,C,8DC5BFU,MAbGA,KAChB,MAEMC,EAAOC,OAAOC,SAAWD,OAAOE,WAFxB,KAE8C,EACtDC,EAAMH,OAAOI,SAAWJ,OAAOK,YAFtB,KAE8C,EAE7D,OAAOL,OAAOM,UACZC,EACA,wBAAwB,QAADf,OACfO,EAAI,SAAAP,OAAQW,EAAG,WAAAX,OARX,IAQ0B,YAAAA,OAPzB,IAO0C,sCACxD,ECmDYgB,IAlCG3B,IAChB,MAAM,UAAE4B,EAAS,eAAEC,GAAmBC,eAC/BC,EAAeC,GAAoBC,oBAAS,GA6BnD,OA3BcC,mBACZ,MACEC,YAAaP,IAAcG,EAC3BA,gBACAK,MAAQvB,IAAa,IAADwB,EACjB,OAADxB,QAAC,IAADA,GAAiB,QAAhBwB,EAADxB,EAAGyB,sBAAc,IAAAD,GAAjBA,EAAAE,KAAA1B,GACAC,YAAS,GAADH,OAAIX,EAAMwC,OAAM,WAExB,MAAMC,EAAQxB,IACde,GAAiB,GAGjB,MAAMU,EAAQC,aAAY,MACf,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOG,UACTC,cAAcH,GACdV,GAAiB,GACjBc,YAAS,GAADnC,OAAIX,EAAMwC,OAAM,kBACpBxC,EAAM+C,cAAc/C,EAAM+C,eAChC,GACC,KAEH,OAAOlB,EAAe,CAAEmB,oBAAqB,CAAEC,aAAc9B,OAAO+B,SAASrD,OAAU,CAAE4C,SAAQ,KAGrG,CAACb,EAAWC,EAAgBE,EAAe/B,GAGjC,C,mCC1Dd,qDAiCemD,IAvBCvD,IAAyC,IAAxC,KAAEwD,EAAO,UAAyBxD,EACjD,MAAM,UAAEyD,GAAcC,eAChB,OAAEC,GAAWC,cAEblD,EAAQ,OAAAK,OADW,UAATyC,EAAmB,SAAoB,UAATA,EAAmB,SAAW,GAC7C,iBAAAzC,OAAgB4C,EAAM,eAAmB,SAExE,OAAIF,EAAkB,KAGpBtC,eAAA0C,WAAA,CAAA3D,SAAA,CACEG,cAACG,IAAU,CAACP,KAAM6D,IAAYpD,SAAUA,EAAUD,KAAMsD,IAAUpD,KAAM,WACxEN,cAACG,IAAU,CACTP,KAAK,gCACLS,SAAUA,EACVD,KAAMuD,IACNrD,KAAM,UAGRN,cAACG,IAAU,CAACP,KAAK,uBAAuBS,SAAUA,EAAUD,KAAMwD,IAAWtD,KAAM,cAClF,C,mCC7BP,uJAuFeuD,UAtEAA,KACb,MAAM,UAAET,GAAcC,eAChB,gBAAES,EAAe,OAAEC,GAAWlC,eAC9B,MAAEM,EAAK,YAAED,GAAgBR,YAAS,CAAEa,OAAQ,YAC5C,SAAEyB,EAAQ,oBAAEC,GAAwBC,eACpC,aAAEC,GAAiB3D,eAEnB,SAAE4D,GAAalD,OAAO+B,SACtBoB,EAAgBP,EAAe,mBAcrC,GAAIV,EAAW,OAAOpD,cAACsE,IAAa,IACpC,GAAIpC,GAAe+B,EAAqB,OAAOjE,cAACuE,IAAa,IAE7D,MAAMC,EAAWC,IAAkBC,MAAKC,GAAKA,EAAEC,OAAQC,cAAIJ,IAAkBK,KAAIH,GAAKA,EAAEI,gBAAiB,EAEzG,OACEjE,eAACkE,IAAa,CAAAnF,SAAA,CACXuE,IAAaa,IAAOC,MACnBlF,cAACmF,IAAI,CAACC,GAAIH,IAAOC,KAAMzE,UAAW4E,IAAaC,KAAM3E,QAASA,IAAME,YAAS,eAAehB,SAAC,SAS9FiE,GAAmBM,IAAaa,IAAOM,SACtCvF,cAACmF,IAAI,CAACC,GAAIH,IAAOM,QAAS9E,UAAW4E,IAAaC,KAAM3E,QAASA,IAAME,YAAS,kBAAkBhB,SAAC,aAInGmE,GAAYI,IAAaa,IAAOO,WAChC1E,eAACqE,IAAI,CACHC,GAAIH,IAAOO,UACX/E,UAAW4E,IAAaC,KACxB3E,QAASA,IAAME,YAAS,oBAAoBhB,SAAA,CAC7C,cAEI2E,IAAaL,GACdrD,eAAA,QAAML,UAAU,qCAAoCZ,SAAA,CAAE2E,EAAS,eAKpEJ,IAAaa,IAAOQ,KACnBzF,cAACmF,IAAI,CAACC,GAAIH,IAAOQ,IAAKhF,UAAW4E,IAAaC,KAAM3E,QAASA,IAAME,YAAS,cAAchB,SAAC,QAK7FG,cAAC0F,IAAa,CAACjF,UAAW4E,IAAaM,IAAKhF,QArDzBiF,IACjB9B,GACFjD,YAAS,iBACTgF,IAAcC,QACdC,IAAiBD,QACjBE,IAAWF,QACJ/B,EAAO,CAAEkC,SAAUC,EAAOD,SAAUE,aAAc,CAAEC,SAAUC,QAE9DlE,IA6C6DtC,SACjEwE,MAEW,C,mCCnFpB,2CA4BeiC,IAvBWA,KACxB,MAAM,MAAEC,GAAUhD,cAQlB,OANAiD,qBAAU,KACRC,YAAW,KACTvF,OAAO+B,SAASyD,QAAQzB,IAAOC,KAAK,GACnC,IAAK,GACP,IAGDpE,eAAA,OAAKL,UAAS,WAAAC,OAAa6F,EAAMjG,MAAOT,SAAA,CACtCG,cAAA,OAAKS,UAAS,QAAAC,OAAU6F,EAAMI,aAAc9G,SAC1CG,cAAC6D,UAAM,MAET7D,cAAA,OAAKS,UAAU,uDAAsDZ,SACnEG,cAAA,OAAKS,UAAU,0BAAyBZ,SACtCG,cAAA,MAAIS,UAAU,cAAaZ,SAAC,4CAG5B,C,mCCxBV,0JAUO,MAAM+G,EAAmB7G,GAE5Be,eAAA,OAAAjB,SAAA,CACGE,EAAMF,SACPG,cAAA,KAAAH,SAAG,wHAIHG,cAAC0F,IAAa,CAACjF,UAAS,yBAA4BE,QAASZ,EAAM8G,YAAYhH,SAAC,wBAOzEiH,EAAoBA,IAM7BhG,eAAA0C,WAAA,CAAA3D,SAAA,CACEG,cAAA,MAAAH,SAAI,4BACJG,cAAA,MAAIS,UAAU,OAAMZ,SAClBG,cAAC+G,IAAc,MAEjB/G,cAAC0F,IAAa,CAACjF,UAAS,yBAA4BE,QAV7BqG,KACzB9F,OAAO+B,SAASyD,QAAQzB,IAAOM,QAAQ,EAS2C1F,SAAC,8BAO1EoH,EAAkBtH,IAAoE,IAAnE,MAAEuH,EAAK,WAAEC,GAAoDxH,EAC3F,OACEmB,eAAA0C,WAAA,CAAA3D,SAAA,CACGsH,GACCrG,eAAC4E,IAAa,CAACjF,UAAS,wBAA2B2G,UAAQ,EAAAvH,SAAA,CAAC,SAE1DG,cAACqH,IAAU,CAAC5G,UAAU,YAI1BT,cAAA,KAAGS,UAAU,OAAMZ,SAAC,iEACpBG,cAAA,KAAAH,SACEG,cAAA,QAAAH,SAAOqH,MAETlH,cAAA,KAAAH,SAAG,gGAEHG,cAAA,OAAKS,UAAU,4BAA2BZ,SACxCG,cAAA,OAAKS,UAAU,MAAKZ,SAClBG,cAACkD,IAAO,CAACC,KAAK,gBAGjB,C,mCChEP,8IAeA,MAAMU,EAASyD,gBAAK,IAAM,2CA2CpBC,EAAWA,IACfvH,cAAA,KAAAH,SAAG,uGAkBC2H,EAAgBA,KACpB,MAAM,KAAEC,GAAS5F,cACX6F,EAjBkBC,MACxB,MAAMD,EAAaE,IAAmBC,MACtC,GAAIH,GAAcA,EAAWI,OAAQ,OAAOJ,EAE5C,MAAM,OAAEK,EAAM,SAAEC,GAAaC,IAAGC,MAAMhH,OAAO+B,SAASkF,OAAQ,CAC5DC,mBAAmB,IAGrB,OAAIL,GAAUC,GAAYK,mBAASN,IAAWM,mBAASL,GAC9C,CAAEF,OAAQC,EAAQO,OAAQN,GAG5B,IAAI,EAKQL,IACZY,EAASC,GAAcxG,oBAAS,IAChCkF,EAAOuB,GAAYzG,mBAAS,IAEnC,IAAK0F,GAAca,EAAS,OAAOvI,cAAC8G,IAAiB,IACrD,IAAKY,GAAcR,EAAO,OAAOlH,cAACiH,IAAe,CAACC,MAAOA,EAAOC,YAAY,IAC5E,IAAKO,EAAY,OAAO1H,cAAC0I,EAAU,IAEnC,MAAM,OAAEZ,EAAM,OAAEQ,GAAWZ,EAmB3B,OACE5G,eAAA,OAAAjB,SAAA,EACIqH,IAAUqB,GAAWvI,cAACuH,EAAQ,KAC9BL,IAAUqB,GACVzH,eAAA,KAAAjB,SAAA,CAAG,iCAC6BG,cAAA,UAAAH,SAAa,OAAJ4H,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,QAAe,IAC5D3I,cAAA,SAAM,kFAKRkH,IAAUqB,GACVvI,cAAC0F,IAAa,CAACjF,UAAS,yBAA4BE,QA7BhCiI,UACxB,IAEE,GADAhI,EAAEyB,mBACO,OAAJoF,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,OAAO,OAClB,MAAM,KAAEE,SAAeC,IAAgBC,WAAW,CAAEjB,SAAQQ,SAAQU,SAAc,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,QAEpF,GADAf,IAAmB9B,QACf+C,EAAK3B,MAAO,OAAOuB,EAASI,EAAK3B,OACjC2B,EAAKN,UACPC,GAAW,GACX3F,YAAS,iBAEb,CAAE,MAAOoG,GACPC,QAAQhC,MAAM+B,GACdR,EAAS,6BACX,GAemF5I,SAAC,WAKjF0I,GAAWvI,cAAC8G,IAAiB,IAC7BI,GAASlH,cAACiH,IAAe,CAACC,MAAOA,EAAOC,YAAY,MACjD,EAIJuB,EAAaA,IACjB1I,cAAA,KAAAH,SAAG,0FAGCsJ,EAAwBA,KAC5B,MAAM,OAAEpB,EAAM,SAAEC,GAAaC,IAAGC,MAAMhH,OAAO+B,SAASkF,OAAQ,CAC5DC,mBAAmB,IAEjBL,GAAUC,GAAYK,mBAASN,IAAWM,mBAASL,IACrDJ,IAAmBwB,IAAIrB,EAAQC,EACjC,EAEIqB,EAAQA,KACZ,MAAM,MAAElH,GAAUT,YAAS,CAAEa,OAAQ,kBAQrC,OACEvC,cAAC4G,IAAe,CAACC,YAPEjG,IACnBA,EAAEyB,iBACF8G,IACAhH,GAAO,EAImCtC,SACxCG,cAACuH,EAAQ,KACO,EAIP+B,UAzIAA,KACb,MAAM,UAAE3H,EAAS,KAAE8F,GAAS5F,eACtB,gBAAE0H,EAAe,SAAEvF,GAAaE,eAChC,MAAEqC,EAAK,OAAEjD,EAAM,cAAEkG,GAAkBjG,cAEnCkG,EAAc,aAAA/I,OAAgB6F,EAAMmD,QAAO,kFAYjD,OAVAlD,qBAAU,KACRmD,cACAR,GAAuB,GACtB,IAEH3C,qBAAU,KACR+C,GAAiB,GAChB,CAACA,IAEAjG,GAAQkG,IACR7H,EAAkB3B,cAAC4J,IAAW,IAC9B5F,EAAiBhE,cAACsG,IAAiB,IAGrCxF,eAAA,OAAKL,UAAS,WAAAC,OAAa6F,EAAMmD,SAAU7J,SAAA,CACzCG,cAAA,OAAKS,UAAS,GAAAC,OAAK6F,EAAMI,YAAW,SAAQ9G,SAC1CG,cAAC6J,WAAQ,CAACC,SAAU9J,cAACuE,IAAa,IAAI1E,SACpCG,cAAC6D,EAAM,QAIX7D,cAAA,OAAKS,UAAWgJ,EAAe5J,SAC7BiB,eAAA,OAAKL,UAAU,kBAAiBZ,SAAA,EAC5B4H,GAAQzH,cAACqJ,EAAK,IACf5B,GAAQzH,cAACwH,EAAa,WAGvB,C","file":"static/js/16.1d728acf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { IconType } from 'react-icons'\r\nimport { centerContentClass } from 'theme/helperClasses'\r\nimport { logClick } from 'utils/analytics'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\n\r\ninterface ILinkProps {\r\n  className?: string\r\n  href: string\r\n  label: string\r\n  onClick?: (...args: any[]) => void\r\n}\r\n\r\nexport const LinkNewTab = ({ href, children, label, ...props }: React.PropsWithChildren<ILinkProps>) => (\r\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" aria-label={label} {...props}>\r\n    {children}\r\n  </a>\r\n)\r\n\r\ninterface ILinkBtnProps {\r\n  href: string\r\n  btnClass: string\r\n  Icon: IconType\r\n  text: string\r\n}\r\n\r\nexport const LinkButton = (props: ILinkBtnProps) => {\r\n  const { Icon, href, btnClass, text } = props\r\n  const { isMobile } = useWindowSize()\r\n\r\n  return (\r\n    <LinkNewTab\r\n      href={href}\r\n      className={`${btnClass} mb-1`}\r\n      onClick={e => logClick(`Contact-${text}`)}\r\n      label={text}\r\n    >\r\n      <div className={centerContentClass}>\r\n        <Icon className={isMobile ? `mx-2 my-1` : `mr-2`} />\r\n        {isMobile ? `` : ` ${text}`}\r\n      </div>\r\n    </LinkNewTab>\r\n  )\r\n}\r\n","const openPopup = () => {\r\n  const width = 400\r\n  const height = 600\r\n  const left = window.screenX + (window.innerWidth - width) / 2\r\n  const top = window.screenY + (window.innerHeight - height) / 2\r\n\r\n  return window.open(\r\n    undefined,\r\n    'auth0:authorize:popup',\r\n    `left=${left},top=${top},width=${width},height=${height},resizable,scrollbars=yes,status=1`\r\n  )\r\n}\r\n\r\nexport default openPopup\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport { useMemo, useState } from 'react'\r\nimport { logClick, logEvent } from 'utils/analytics'\r\nimport openPopup from 'utils/openPopup'\r\n\r\ninterface IUseLoginProps {\r\n  /**\r\n   * The source of this login, e.g. 'Navbar'\r\n   */\r\n  origin: string\r\n  /**\r\n   * An optional function to run after the user has closed the login popup\r\n   *\r\n   * Note: This is triggered whether the user logged in successfully, or just closed the window.\r\n   */\r\n  onPopupClose?: () => unknown\r\n}\r\n\r\n/**\r\n * A useful hook to help with logins\r\n *\r\n * Includes a tracker for the login window that can notify you when closed.\r\n *\r\n * @param props\r\n *\r\n * @example const { login } =  useLogin({ origin: 'Navbar' })\r\n */\r\nconst useLogin = (props: IUseLoginProps) => {\r\n  const { isLoading, loginWithPopup } = useAuth0()\r\n  const [popupIsClosed, setPopupIsClosed] = useState(false)\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isLoggingIn: isLoading && !popupIsClosed,\r\n      popupIsClosed,\r\n      login: (e?: any) => {\r\n        e?.preventDefault?.()\r\n        logClick(`${props.origin}-Login`)\r\n\r\n        const popup = openPopup()\r\n        setPopupIsClosed(false)\r\n\r\n        // https://stackoverflow.com/a/48240128\r\n        const timer = setInterval(() => {\r\n          if (popup?.closed) {\r\n            clearInterval(timer)\r\n            setPopupIsClosed(true)\r\n            logEvent(`${props.origin}-Login-Closed`)\r\n            if (props.onPopupClose) props.onPopupClose()\r\n          }\r\n        }, 1000)\r\n\r\n        return loginWithPopup({ authorizationParams: { redirect_uri: window.location.href } }, { popup })\r\n      },\r\n    }),\r\n    [isLoading, loginWithPopup, popupIsClosed, props]\r\n  )\r\n\r\n  return value\r\n}\r\n\r\nexport default useLogin\r\n","import { LinkButton } from 'components/helpers/link'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { FaDiscord, FaEnvelopeOpenText, FaGithub } from 'react-icons/fa'\r\nimport { GITHUB_URL } from 'utils/env'\r\n\r\ninterface IContactProps {\r\n  size?: 'normal' | 'small' | 'large'\r\n}\r\n\r\nconst Contact = ({ size = 'normal' }: IContactProps) => {\r\n  const { isOffline } = useAppStatus()\r\n  const { isDark } = useTheme()\r\n  const btnSize = size === 'small' ? 'btn-sm' : size === 'large' ? 'btn-lg' : ''\r\n  const btnClass = `btn ${btnSize} btn-outline-${isDark ? `light` : `dark`} mx-1`\r\n\r\n  if (isOffline) return null\r\n\r\n  return (\r\n    <>\r\n      <LinkButton href={GITHUB_URL} btnClass={btnClass} Icon={FaGithub} text={'Github'} />\r\n      <LinkButton\r\n        href=\"mailto:aosreminders@gmail.com\"\r\n        btnClass={btnClass}\r\n        Icon={FaEnvelopeOpenText}\r\n        text={'Email'}\r\n      />\r\n      {/* <LinkButton href=\"//reddit.com/r/AoSReminders/\" btnClass={btnClass} Icon={FaReddit} text={'Reddit'} /> */}\r\n      <LinkButton href=\"//discord.gg/2nt9Fxp\" btnClass={btnClass} Icon={FaDiscord} text={'Discord'} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport config from 'auth_config.json'\r\nimport { LoadingHeader, OfflineHeader } from 'components/helpers/suspenseFallbacks'\r\nimport GenericButton from 'components/input/generic_button'\r\nimport NavbarWrapper from 'components/page/navbar_wrapper'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useSubscription } from 'context/useSubscription'\r\nimport { max } from 'lodash'\r\nimport { Link } from 'react-router-dom'\r\nimport { navbarStyles } from 'theme/helperClasses'\r\nimport { logClick } from 'utils/analytics'\r\nimport { BASE_URL, ROUTES } from 'utils/env'\r\nimport useLogin from 'utils/hooks/useLogin'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\nimport { LocalSavedArmies, LocalTheme, LocalUserName } from 'utils/localStore'\r\nimport { SubscriptionPlans } from 'utils/plans'\r\n\r\nconst Navbar = () => {\r\n  const { isOffline } = useAppStatus()\r\n  const { isAuthenticated, logout } = useAuth0()\r\n  const { login, isLoggingIn } = useLogin({ origin: 'Navbar' })\r\n  const { isActive, subscriptionLoading } = useSubscription()\r\n  const { isTinyMobile } = useWindowSize()\r\n\r\n  const { pathname } = window.location\r\n  const loginBtnText = !isAuthenticated ? `Log in` : `Log out`\r\n\r\n  const handleLoginBtn = () => {\r\n    if (isAuthenticated) {\r\n      logClick('Navbar-Logout')\r\n      LocalUserName.clear() // Get rid of stored user info\r\n      LocalSavedArmies.clear() // Remove any saved armies that we've fetched from the API\r\n      LocalTheme.clear() // Revert back to default theme settings\r\n      return logout({ clientId: config.clientId, logoutParams: { returnTo: BASE_URL } })\r\n    } else {\r\n      return login()\r\n    }\r\n  }\r\n\r\n  if (isOffline) return <OfflineHeader />\r\n  if (isLoggingIn || subscriptionLoading) return <LoadingHeader />\r\n\r\n  const discount = SubscriptionPlans.some(x => x.sale) ? max(SubscriptionPlans.map(x => x.discount_pct)) : 0\r\n\r\n  return (\r\n    <NavbarWrapper>\r\n      {pathname !== ROUTES.HOME && (\r\n        <Link to={ROUTES.HOME} className={navbarStyles.link} onClick={() => logClick('Navbar-Home')}>\r\n          Home\r\n        </Link>\r\n      )}\r\n      {/* {pathname !== ROUTES.STATS && (\r\n        <Link to={ROUTES.STATS} className={navbarStyles.link} onClick={() => logClick('Navbar-Stats')}>\r\n          Stats\r\n        </Link>\r\n      )} */}\r\n      {isAuthenticated && pathname !== ROUTES.PROFILE && (\r\n        <Link to={ROUTES.PROFILE} className={navbarStyles.link} onClick={() => logClick('Navbar-Profile')}>\r\n          Profile\r\n        </Link>\r\n      )}\r\n      {!isActive && pathname !== ROUTES.SUBSCRIBE && (\r\n        <Link\r\n          to={ROUTES.SUBSCRIBE}\r\n          className={navbarStyles.link}\r\n          onClick={() => logClick('Navbar-Subscribe')}\r\n        >\r\n          Subscribe\r\n          {!!discount && !isTinyMobile && (\r\n            <span className=\"ml-1 badge badge-pill badge-danger\">{discount}% off!</span>\r\n          )}\r\n        </Link>\r\n      )}\r\n\r\n      {pathname !== ROUTES.FAQ && (\r\n        <Link to={ROUTES.FAQ} className={navbarStyles.link} onClick={() => logClick('Navbar-Faq')}>\r\n          FAQ\r\n        </Link>\r\n      )}\r\n\r\n      <GenericButton className={navbarStyles.btn} onClick={handleLoginBtn}>\r\n        {loginBtnText}\r\n      </GenericButton>\r\n    </NavbarWrapper>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import Navbar from 'components/page/navbar'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { useEffect } from 'react'\r\nimport { ROUTES } from 'utils/env'\r\n\r\nconst AlreadySubscribed = () => {\r\n  const { theme } = useTheme()\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      window.location.replace(ROUTES.HOME)\r\n    }, 1000)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`d-block ${theme.text}`}>\r\n      <div className={`py-2 ${theme.headerColor}`}>\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center align-items-center\">\r\n        <div className=\"col mx-5 my-5 py-5 px-5\">\r\n          <h1 className=\"text-center\">You are now subscribed :) Thanks!</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlreadySubscribed\r\n","import GenericButton from 'components/input/generic_button'\r\nimport Contact from 'components/page/contact'\r\nimport React from 'react'\r\nimport { FaRegFrown, FaRegSmileBeam } from 'react-icons/fa'\r\nimport { ROUTES } from 'utils/env'\r\n\r\ninterface ILoginSectionProps {\r\n  handleClick: (e: React.MouseEvent) => any\r\n}\r\n\r\nexport const RedemptionLogin = (props: React.PropsWithChildren<ILoginSectionProps>) => {\r\n  return (\r\n    <div>\r\n      {props.children}\r\n      <p>\r\n        First, you're going to need to create an account and log in. Once you've done that, we'll set your\r\n        subscription up!\r\n      </p>\r\n      <GenericButton className={`btn btn-primary btn-lg`} onClick={props.handleClick}>\r\n        Log In / Sign Up\r\n      </GenericButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const RedemptionSuccess = () => {\r\n  const handleClickSuccess = () => {\r\n    window.location.replace(ROUTES.PROFILE)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h5>Woohoo! You're all set!</h5>\r\n      <h2 className=\"my-2\">\r\n        <FaRegSmileBeam />\r\n      </h2>\r\n      <GenericButton className={`btn btn-success btn-lg`} onClick={handleClickSuccess}>\r\n        Take me to my Profile!\r\n      </GenericButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const RedemptionError = ({ error, showButton }: { error: string; showButton: boolean }) => {\r\n  return (\r\n    <>\r\n      {showButton && (\r\n        <GenericButton className={`btn btn-danger btn-lg`} disabled>\r\n          Error!\r\n          <FaRegFrown className=\"ml-2\" />\r\n        </GenericButton>\r\n      )}\r\n\r\n      <p className=\"pt-3\">We're sorry. There was an error redeeming your subscription.</p>\r\n      <p>\r\n        <code>{error}</code>\r\n      </p>\r\n      <p>If you continue to receive this error, please get in contact with us using the links below.</p>\r\n\r\n      <div className=\"row text-center pt-2 pb-3\">\r\n        <div className=\"col\">\r\n          <Contact size=\"small\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport { SubscriptionApi } from 'api/subscriptionApi'\r\nimport AlreadySubscribed from 'components/helpers/alreadySubscribed'\r\nimport { LoadingBody, LoadingHeader } from 'components/helpers/suspenseFallbacks'\r\nimport GenericButton from 'components/input/generic_button'\r\nimport { RedemptionError, RedemptionLogin, RedemptionSuccess } from 'components/page/redemption'\r\nimport { useSubscription } from 'context/useSubscription'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { isString } from 'lodash'\r\nimport qs from 'qs'\r\nimport React, { lazy, Suspense, useEffect, useState } from 'react'\r\nimport { logEvent, logPageView } from 'utils/analytics'\r\nimport useLogin from 'utils/hooks/useLogin'\r\nimport { LocalRedemptionKey } from 'utils/localStore'\r\n\r\nconst Navbar = lazy(() => import('components/page/navbar'))\r\n\r\n/**\r\n * This Route is used for coupon code redemption\r\n */\r\nconst Redeem = () => {\r\n  const { isLoading, user } = useAuth0()\r\n  const { getSubscription, isActive } = useSubscription()\r\n  const { theme, isDark, setLightTheme } = useTheme()\r\n\r\n  const containerClass = `container ${theme.bgColor} d-flex flex-column align-items-center justify-content-center LoadingContainer`\r\n\r\n  useEffect(() => {\r\n    logPageView()\r\n    setLocalRedemptionKey()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getSubscription()\r\n  }, [getSubscription])\r\n\r\n  if (isDark) setLightTheme()\r\n  if (isLoading) return <LoadingBody />\r\n  if (isActive) return <AlreadySubscribed />\r\n\r\n  return (\r\n    <div className={`d-block ${theme.bgColor}`}>\r\n      <div className={`${theme.headerColor} py-2`}>\r\n        <Suspense fallback={<LoadingHeader />}>\r\n          <Navbar />\r\n        </Suspense>\r\n      </div>\r\n\r\n      <div className={containerClass}>\r\n        <div className=\"col text-center\">\r\n          {!user && <Login />}\r\n          {user && <RedeemSection />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Preamble = () => (\r\n  <p>Congratulations! One of your friends has decided that you deserve a subscription to AoS Reminders!</p>\r\n)\r\n\r\nconst getRedemptionInfo = (): { giftId: string; userId: string } | null => {\r\n  const redeemInfo = LocalRedemptionKey.get()\r\n  if (redeemInfo && redeemInfo.giftId) return redeemInfo\r\n\r\n  const { redeem, referrer } = qs.parse(window.location.search, {\r\n    ignoreQueryPrefix: true,\r\n  })\r\n\r\n  if (redeem && referrer && isString(redeem) && isString(referrer)) {\r\n    return { giftId: redeem, userId: referrer }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst RedeemSection = () => {\r\n  const { user } = useAuth0()\r\n  const redeemInfo = getRedemptionInfo()\r\n  const [success, setSuccess] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  if (!redeemInfo && success) return <RedemptionSuccess />\r\n  if (!redeemInfo && error) return <RedemptionError error={error} showButton={true} />\r\n  if (!redeemInfo) return <NoKeyFound />\r\n\r\n  const { giftId, userId } = redeemInfo\r\n\r\n  const handleClickRedeem = async (e: React.MouseEvent) => {\r\n    try {\r\n      e.preventDefault()\r\n      if (!user?.email) return\r\n      const { body } = await SubscriptionApi.redeemGift({ giftId, userId, userName: user?.email })\r\n      LocalRedemptionKey.clear()\r\n      if (body.error) return setError(body.error)\r\n      if (body.success) {\r\n        setSuccess(true)\r\n        logEvent(`Redeemed-Gift`)\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n      setError('An unknown error occurred.')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!error && !success && <Preamble />}\r\n      {!error && !success && (\r\n        <p>\r\n          You're currently logged in as <strong>{user?.email}</strong>.\r\n          <br />\r\n          If you're ready to redeem this gifted subscription, click the button below!\r\n        </p>\r\n      )}\r\n\r\n      {!error && !success && (\r\n        <GenericButton className={`btn btn-primary btn-lg`} onClick={handleClickRedeem}>\r\n          Redeem\r\n        </GenericButton>\r\n      )}\r\n\r\n      {success && <RedemptionSuccess />}\r\n      {error && <RedemptionError error={error} showButton={true} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst NoKeyFound = () => (\r\n  <p>We couldn't locate a subscription id. You may have arrived here via a malformed link.</p>\r\n)\r\n\r\nconst setLocalRedemptionKey = () => {\r\n  const { redeem, referrer } = qs.parse(window.location.search, {\r\n    ignoreQueryPrefix: true,\r\n  })\r\n  if (redeem && referrer && isString(redeem) && isString(referrer)) {\r\n    LocalRedemptionKey.set(redeem, referrer)\r\n  }\r\n}\r\nconst Login = () => {\r\n  const { login } = useLogin({ origin: 'Before-Redeem' })\r\n\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    setLocalRedemptionKey()\r\n    login()\r\n  }\r\n\r\n  return (\r\n    <RedemptionLogin handleClick={handleClick}>\r\n      <Preamble />\r\n    </RedemptionLogin>\r\n  )\r\n}\r\n\r\nexport default Redeem\r\n"],"sourceRoot":""}