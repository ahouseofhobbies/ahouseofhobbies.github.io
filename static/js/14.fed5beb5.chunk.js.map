{"version":3,"sources":["components/helpers/link.tsx","components/modals/generic/generic_modal.tsx","utils/openPopup.ts","utils/hooks/useLogin.tsx","components/page/contact.tsx","components/page/navbar.tsx","components/helpers/alreadySubscribed.tsx","utils/hooks/useInterval.ts","components/modals/paypal_post_subscribe_modal.tsx","context/usePaypal.tsx","components/payment/paypal/paypalButton.tsx","components/payment/pricingPlans.tsx","components/routes/Subscribe.tsx"],"names":["LinkNewTab","_ref","href","children","label","props","_jsx","target","rel","LinkButton","Icon","btnClass","text","isMobile","useWindowSize","className","concat","onClick","e","logClick","_jsxs","centerContentClass","Modal","setAppElement","GenericModal","closeModal","isOpen","isProcessing","isDark","useTheme","modalClassName","contentLabel","onRequestClose","overlayClassName","ModalSpinner","hidden","variant","Spinner","size","openPopup","left","window","screenX","innerWidth","top","screenY","innerHeight","open","undefined","useLogin","isLoading","loginWithPopup","useAuth0","popupIsClosed","setPopupIsClosed","useState","useMemo","isLoggingIn","login","_e$preventDefault","preventDefault","call","origin","popup","timer","setInterval","closed","clearInterval","logEvent","onPopupClose","authorizationParams","redirect_uri","location","Contact","isOffline","useAppStatus","_Fragment","GITHUB_URL","FaGithub","FaEnvelopeOpenText","FaDiscord","Navbar","isAuthenticated","logout","isActive","subscriptionLoading","useSubscription","isTinyMobile","pathname","loginBtnText","OfflineHeader","LoadingHeader","discount","SubscriptionPlans","some","x","sale","max","map","discount_pct","NavbarWrapper","ROUTES","HOME","Link","to","navbarStyles","link","PROFILE","SUBSCRIBE","FAQ","GenericButton","btn","handleLoginBtn","LocalUserName","clear","LocalSavedArmies","LocalTheme","clientId","config","logoutParams","returnTo","BASE_URL","AlreadySubscribed","theme","useEffect","setTimeout","replace","headerColor","useSetInterval","callback","delay","savedCallback","useRef","current","id","PaypalPostSubscribeModal","modalIsOpen","getSubscription","interval","console","log","IconContext","Provider","value","LargeSpinner","modalConfirmClass","DEFAULT_OPTS","PAYPAL_CLIENT_ID","components","currency","vault","PaypalContext","React","createContext","PaypalProvider","paypalIsReady","setIsPaypalReady","isMounted","unmountFn","paypal","script","document","createElement","type","src","qs","stringify","async","onload","onerror","error","body","appendChild","PaypalButton","user","planTitle","usePaypal","context","useContext","Error","onSuccess","onCancel","planId","style","btnStyle","layout","color","shape","tagline","Button","Buttons","driver","ReactDOM","createSubscription","data","actions","subscription","create","plan_id","subscriber","email_address","email","onApprove","_onApprove","PricingPlansComponent","paypalModalIsOpen","setPaypalModalIsOpen","PlansHeader","plan","i","PlanComponent","supportPlan","hasSale","title","stripe","useStripe","monthly_cost","cost","isDev","stripe_dev","stripe_prod","url","item","quantity","redirectToCheckout","items","customerEmail","clientReferenceId","successUrl","protocol","subscribed","cancelUrl","canceled","then","result","PayPalComponent","setModalIsOpen","paypal_dev","paypal_prod","PayPalButton","handleCancel","logSubscription","SubscriptionApi","requestGrant","err","stripePromise","loadStripe","STRIPE_KEY","PricingPlans","Elements","lazy","Subscribe","isSubscribed","logPageView","scrollTo","LoadingBody","bgColor","Suspense","fallback","Intro","CurrentFeatures","ComingSoon","ExamplesRow","MobileDarkModeDemo","WebmWithFallback","webmUrl","gifUrl","description","width","alt","featuresColClass","STATS","supportsWebm","canPlayType","preload","loop","poster","autoPlay"],"mappings":"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","file":"static/js/14.fed5beb5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { IconType } from 'react-icons'\r\nimport { centerContentClass } from 'theme/helperClasses'\r\nimport { logClick } from 'utils/analytics'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\n\r\ninterface ILinkProps {\r\n  className?: string\r\n  href: string\r\n  label: string\r\n  onClick?: (...args: any[]) => void\r\n}\r\n\r\nexport const LinkNewTab = ({ href, children, label, ...props }: React.PropsWithChildren<ILinkProps>) => (\r\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" aria-label={label} {...props}>\r\n    {children}\r\n  </a>\r\n)\r\n\r\ninterface ILinkBtnProps {\r\n  href: string\r\n  btnClass: string\r\n  Icon: IconType\r\n  text: string\r\n}\r\n\r\nexport const LinkButton = (props: ILinkBtnProps) => {\r\n  const { Icon, href, btnClass, text } = props\r\n  const { isMobile } = useWindowSize()\r\n\r\n  return (\r\n    <LinkNewTab\r\n      href={href}\r\n      className={`${btnClass} mb-1`}\r\n      onClick={e => logClick(`Contact-${text}`)}\r\n      label={text}\r\n    >\r\n      <div className={centerContentClass}>\r\n        <Icon className={isMobile ? `mx-2 my-1` : `mr-2`} />\r\n        {isMobile ? `` : ` ${text}`}\r\n      </div>\r\n    </LinkNewTab>\r\n  )\r\n}\r\n","import Spinner from 'components/helpers/spinner'\r\nimport { useTheme } from 'context/useTheme'\r\nimport React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\ninterface IGenericModalProps {\r\n  isProcessing?: boolean\r\n  isOpen: boolean\r\n  closeModal: () => void\r\n  label: string\r\n}\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst GenericModal = (props: React.PropsWithChildren<IGenericModalProps>) => {\r\n  const { children, closeModal, isOpen, label, isProcessing = false } = props\r\n  const { isDark } = useTheme()\r\n\r\n  const themeType = isDark ? 'Dark' : 'Light'\r\n  const modalClassName = `Modal-${isProcessing ? `Transparent` : themeType}`\r\n\r\n  return (\r\n    <Modal\r\n      className={modalClassName}\r\n      contentLabel={label}\r\n      isOpen={isOpen}\r\n      onRequestClose={closeModal}\r\n      overlayClassName={'Modal-Overlay'}\r\n    >\r\n      <div className={`container`}>\r\n        {isProcessing && <ModalSpinner />}\r\n        <div hidden={isProcessing}>{children}</div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default GenericModal\r\n\r\nconst ModalSpinner = ({ isDark = false }) => {\r\n  const variant = isDark ? 'light-gray' : 'dark'\r\n  return (\r\n    <div className={`d-flex flex-row justify-content-center`}>\r\n      <Spinner variant={variant} size=\"large\" />\r\n    </div>\r\n  )\r\n}\r\n","const openPopup = () => {\r\n  const width = 400\r\n  const height = 600\r\n  const left = window.screenX + (window.innerWidth - width) / 2\r\n  const top = window.screenY + (window.innerHeight - height) / 2\r\n\r\n  return window.open(\r\n    undefined,\r\n    'auth0:authorize:popup',\r\n    `left=${left},top=${top},width=${width},height=${height},resizable,scrollbars=yes,status=1`\r\n  )\r\n}\r\n\r\nexport default openPopup\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport { useMemo, useState } from 'react'\r\nimport { logClick, logEvent } from 'utils/analytics'\r\nimport openPopup from 'utils/openPopup'\r\n\r\ninterface IUseLoginProps {\r\n  /**\r\n   * The source of this login, e.g. 'Navbar'\r\n   */\r\n  origin: string\r\n  /**\r\n   * An optional function to run after the user has closed the login popup\r\n   *\r\n   * Note: This is triggered whether the user logged in successfully, or just closed the window.\r\n   */\r\n  onPopupClose?: () => unknown\r\n}\r\n\r\n/**\r\n * A useful hook to help with logins\r\n *\r\n * Includes a tracker for the login window that can notify you when closed.\r\n *\r\n * @param props\r\n *\r\n * @example const { login } =  useLogin({ origin: 'Navbar' })\r\n */\r\nconst useLogin = (props: IUseLoginProps) => {\r\n  const { isLoading, loginWithPopup } = useAuth0()\r\n  const [popupIsClosed, setPopupIsClosed] = useState(false)\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isLoggingIn: isLoading && !popupIsClosed,\r\n      popupIsClosed,\r\n      login: (e?: any) => {\r\n        e?.preventDefault?.()\r\n        logClick(`${props.origin}-Login`)\r\n\r\n        const popup = openPopup()\r\n        setPopupIsClosed(false)\r\n\r\n        // https://stackoverflow.com/a/48240128\r\n        const timer = setInterval(() => {\r\n          if (popup?.closed) {\r\n            clearInterval(timer)\r\n            setPopupIsClosed(true)\r\n            logEvent(`${props.origin}-Login-Closed`)\r\n            if (props.onPopupClose) props.onPopupClose()\r\n          }\r\n        }, 1000)\r\n\r\n        return loginWithPopup({ authorizationParams: { redirect_uri: window.location.href } }, { popup })\r\n      },\r\n    }),\r\n    [isLoading, loginWithPopup, popupIsClosed, props]\r\n  )\r\n\r\n  return value\r\n}\r\n\r\nexport default useLogin\r\n","import { LinkButton } from 'components/helpers/link'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { FaDiscord, FaEnvelopeOpenText, FaGithub } from 'react-icons/fa'\r\nimport { GITHUB_URL } from 'utils/env'\r\n\r\ninterface IContactProps {\r\n  size?: 'normal' | 'small' | 'large'\r\n}\r\n\r\nconst Contact = ({ size = 'normal' }: IContactProps) => {\r\n  const { isOffline } = useAppStatus()\r\n  const { isDark } = useTheme()\r\n  const btnSize = size === 'small' ? 'btn-sm' : size === 'large' ? 'btn-lg' : ''\r\n  const btnClass = `btn ${btnSize} btn-outline-${isDark ? `light` : `dark`} mx-1`\r\n\r\n  if (isOffline) return null\r\n\r\n  return (\r\n    <>\r\n      <LinkButton href={GITHUB_URL} btnClass={btnClass} Icon={FaGithub} text={'Github'} />\r\n      <LinkButton\r\n        href=\"mailto:aosreminders@gmail.com\"\r\n        btnClass={btnClass}\r\n        Icon={FaEnvelopeOpenText}\r\n        text={'Email'}\r\n      />\r\n      {/* <LinkButton href=\"//reddit.com/r/AoSReminders/\" btnClass={btnClass} Icon={FaReddit} text={'Reddit'} /> */}\r\n      <LinkButton href=\"//discord.gg/2nt9Fxp\" btnClass={btnClass} Icon={FaDiscord} text={'Discord'} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport config from 'auth_config.json'\r\nimport { LoadingHeader, OfflineHeader } from 'components/helpers/suspenseFallbacks'\r\nimport GenericButton from 'components/input/generic_button'\r\nimport NavbarWrapper from 'components/page/navbar_wrapper'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useSubscription } from 'context/useSubscription'\r\nimport { max } from 'lodash'\r\nimport { Link } from 'react-router-dom'\r\nimport { navbarStyles } from 'theme/helperClasses'\r\nimport { logClick } from 'utils/analytics'\r\nimport { BASE_URL, ROUTES } from 'utils/env'\r\nimport useLogin from 'utils/hooks/useLogin'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\nimport { LocalSavedArmies, LocalTheme, LocalUserName } from 'utils/localStore'\r\nimport { SubscriptionPlans } from 'utils/plans'\r\n\r\nconst Navbar = () => {\r\n  const { isOffline } = useAppStatus()\r\n  const { isAuthenticated, logout } = useAuth0()\r\n  const { login, isLoggingIn } = useLogin({ origin: 'Navbar' })\r\n  const { isActive, subscriptionLoading } = useSubscription()\r\n  const { isTinyMobile } = useWindowSize()\r\n\r\n  const { pathname } = window.location\r\n  const loginBtnText = !isAuthenticated ? `Log in` : `Log out`\r\n\r\n  const handleLoginBtn = () => {\r\n    if (isAuthenticated) {\r\n      logClick('Navbar-Logout')\r\n      LocalUserName.clear() // Get rid of stored user info\r\n      LocalSavedArmies.clear() // Remove any saved armies that we've fetched from the API\r\n      LocalTheme.clear() // Revert back to default theme settings\r\n      return logout({ clientId: config.clientId, logoutParams: { returnTo: BASE_URL } })\r\n    } else {\r\n      return login()\r\n    }\r\n  }\r\n\r\n  if (isOffline) return <OfflineHeader />\r\n  if (isLoggingIn || subscriptionLoading) return <LoadingHeader />\r\n\r\n  const discount = SubscriptionPlans.some(x => x.sale) ? max(SubscriptionPlans.map(x => x.discount_pct)) : 0\r\n\r\n  return (\r\n    <NavbarWrapper>\r\n      {pathname !== ROUTES.HOME && (\r\n        <Link to={ROUTES.HOME} className={navbarStyles.link} onClick={() => logClick('Navbar-Home')}>\r\n          Home\r\n        </Link>\r\n      )}\r\n      {/* {pathname !== ROUTES.STATS && (\r\n        <Link to={ROUTES.STATS} className={navbarStyles.link} onClick={() => logClick('Navbar-Stats')}>\r\n          Stats\r\n        </Link>\r\n      )} */}\r\n      {isAuthenticated && pathname !== ROUTES.PROFILE && (\r\n        <Link to={ROUTES.PROFILE} className={navbarStyles.link} onClick={() => logClick('Navbar-Profile')}>\r\n          Profile\r\n        </Link>\r\n      )}\r\n      {!isActive && pathname !== ROUTES.SUBSCRIBE && (\r\n        <Link\r\n          to={ROUTES.SUBSCRIBE}\r\n          className={navbarStyles.link}\r\n          onClick={() => logClick('Navbar-Subscribe')}\r\n        >\r\n          Subscribe\r\n          {!!discount && !isTinyMobile && (\r\n            <span className=\"ml-1 badge badge-pill badge-danger\">{discount}% off!</span>\r\n          )}\r\n        </Link>\r\n      )}\r\n\r\n      {pathname !== ROUTES.FAQ && (\r\n        <Link to={ROUTES.FAQ} className={navbarStyles.link} onClick={() => logClick('Navbar-Faq')}>\r\n          FAQ\r\n        </Link>\r\n      )}\r\n\r\n      <GenericButton className={navbarStyles.btn} onClick={handleLoginBtn}>\r\n        {loginBtnText}\r\n      </GenericButton>\r\n    </NavbarWrapper>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import Navbar from 'components/page/navbar'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { useEffect } from 'react'\r\nimport { ROUTES } from 'utils/env'\r\n\r\nconst AlreadySubscribed = () => {\r\n  const { theme } = useTheme()\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      window.location.replace(ROUTES.HOME)\r\n    }, 1000)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`d-block ${theme.text}`}>\r\n      <div className={`py-2 ${theme.headerColor}`}>\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center align-items-center\">\r\n        <div className=\"col mx-5 my-5 py-5 px-5\">\r\n          <h1 className=\"text-center\">You are now subscribed :) Thanks!</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlreadySubscribed\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useSetInterval = (callback, delay: number) => {\r\n  const savedCallback = useRef()\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      // @ts-expect-error\r\n      savedCallback.current()\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n  }, [delay])\r\n}\r\n","import { LargeSpinner } from 'components/helpers/suspenseFallbacks'\r\nimport GenericButton from 'components/input/generic_button'\r\nimport GenericModal from 'components/modals/generic/generic_modal'\r\nimport { useSubscription } from 'context/useSubscription'\r\nimport { useTheme } from 'context/useTheme'\r\nimport React, { useState } from 'react'\r\nimport { IconContext } from 'react-icons'\r\nimport { useSetInterval } from 'utils/hooks/useInterval'\r\n\r\ninterface IModalComponentProps {\r\n  modalIsOpen: boolean\r\n  closeModal: () => void\r\n}\r\n\r\nexport const PaypalPostSubscribeModal = ({ closeModal, modalIsOpen }: IModalComponentProps) => {\r\n  const { isActive, subscriptionLoading, getSubscription } = useSubscription()\r\n  const { theme } = useTheme()\r\n\r\n  const [interval, setInterval] = useState(1000)\r\n\r\n  useSetInterval(() => {\r\n    if (subscriptionLoading) return\r\n\r\n    if (isActive) {\r\n      setInterval(0)\r\n      closeModal()\r\n      return\r\n    }\r\n\r\n    if (!isActive && !subscriptionLoading) {\r\n      console.log('Checking for subscription update from Paypal...')\r\n      getSubscription()\r\n    }\r\n  }, interval)\r\n\r\n  return (\r\n    <GenericModal\r\n      isOpen={modalIsOpen}\r\n      closeModal={closeModal}\r\n      label=\"Post Paypal Subscription Modal\"\r\n      isProcessing={false}\r\n    >\r\n      <div className=\"row\">\r\n        <IconContext.Provider value={{ size: '1.7em' }}>\r\n          <div className={`col ${theme.text}`}>\r\n            <h4 className=\"mb-3\">Thanks! :)</h4>\r\n            <p className=\"text-center mb-1\">One sec, we're verifying your PayPal transaction...</p>\r\n\r\n            <LargeSpinner className={'text-dark'} />\r\n\r\n            <p className=\"text-center mt-1\">\r\n              This application will automatically reload when your subscription is available.\r\n              <br />\r\n              This could take up to one minute. Feel free to close this window and browse around.\r\n            </p>\r\n          </div>\r\n        </IconContext.Provider>\r\n      </div>\r\n\r\n      <div className=\"row text-center\">\r\n        <div className=\"col px-0\">\r\n          <GenericButton className={theme.modalConfirmClass} onClick={closeModal}>\r\n            Close\r\n          </GenericButton>\r\n        </div>\r\n      </div>\r\n    </GenericModal>\r\n  )\r\n}\r\n","import qs from 'qs'\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { PAYPAL_CLIENT_ID } from 'utils/env'\r\n\r\ninterface IPaypalStatusProvider {\r\n  paypalIsReady: boolean\r\n}\r\n\r\nconst DEFAULT_OPTS = {\r\n  'client-id': PAYPAL_CLIENT_ID,\r\n  'disable-funding': 'credit,card',\r\n  components: 'buttons',\r\n  currency: 'USD',\r\n  vault: true,\r\n}\r\n\r\nconst PaypalContext = React.createContext<IPaypalStatusProvider | void>(undefined)\r\n\r\nconst PaypalProvider = ({ children }: React.PropsWithChildren<{}>) => {\r\n  const [paypalIsReady, setIsPaypalReady] = useState<boolean>(false)\r\n  const isMounted = useRef(false)\r\n\r\n  const unmountFn = () => {\r\n    isMounted.current = false\r\n  }\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true\r\n\r\n    // If we already have paypal loaded, we don't need to do anything\r\n    if (paypalIsReady) return unmountFn\r\n\r\n    // Check if Paypal already exists in the window (probably from a previous mount)\r\n    if (window.paypal) {\r\n      setIsPaypalReady(true)\r\n      return unmountFn\r\n    }\r\n\r\n    const script = document.createElement('script')\r\n\r\n    script.type = 'text/javascript'\r\n    script.src = `https://www.paypal.com/sdk/js?${qs.stringify(DEFAULT_OPTS)}`\r\n    script.async = true\r\n\r\n    script.onload = () => {\r\n      // Only update if this component is still mounted\r\n      if (isMounted) setIsPaypalReady(true)\r\n    }\r\n\r\n    script.onerror = () => {\r\n      if (isMounted) setIsPaypalReady(false)\r\n      console.error('The Paypal SDK could not be loaded.')\r\n    }\r\n\r\n    document.body && document.body.appendChild(script)\r\n\r\n    return unmountFn\r\n  }, [paypalIsReady])\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      paypalIsReady,\r\n    }),\r\n    [paypalIsReady]\r\n  )\r\n\r\n  return <PaypalContext.Provider value={value}>{children}</PaypalContext.Provider>\r\n}\r\n\r\nconst usePaypal = () => {\r\n  const context = React.useContext(PaypalContext)\r\n  if (context === undefined) {\r\n    throw new Error('usePaypal must be used within a PaypalProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport { PaypalProvider, usePaypal }\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport {\r\n  IApprovalActions,\r\n  IApprovalResponse,\r\n  ICreateSubscriptionsActions,\r\n} from 'components/payment/paypal/paypalTypes'\r\nimport { usePaypal } from 'context/usePaypal'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport useLogin from 'utils/hooks/useLogin'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    paypal: any\r\n  }\r\n}\r\n\r\ninterface IStyle {\r\n  layout?: 'vertical' | 'horizontal'\r\n  color?: 'gold' | 'blue' | 'silver' | 'white' | 'black'\r\n  shape?: 'pill' | 'rect'\r\n  label?: 'paypal'\r\n  tagline?: boolean\r\n}\r\n\r\ninterface IPayPalButtonProps {\r\n  planId: string\r\n  planTitle: string\r\n  onSuccess?: (data: IApprovalResponse) => any\r\n  onCancel?: (data: any) => any\r\n  style?: IStyle\r\n}\r\n\r\nconst PaypalButton = (props: IPayPalButtonProps) => {\r\n  const { user, isAuthenticated } = useAuth0()\r\n  const { login } = useLogin({ origin: props.planTitle })\r\n  const { paypalIsReady } = usePaypal()\r\n\r\n  const { onSuccess = undefined, onCancel = undefined, planId, style = {} } = props\r\n\r\n  if (!paypalIsReady || typeof window === 'undefined' || window.paypal === undefined || !user) {\r\n    return <></>\r\n  }\r\n\r\n  const _onApprove = (data: IApprovalResponse, actions: IApprovalActions) => {\r\n    if (onSuccess) onSuccess(data)\r\n  }\r\n\r\n  const _createSubscription = async (data: any, actions: ICreateSubscriptionsActions) => {\r\n    return actions.subscription.create({\r\n      plan_id: planId,\r\n      subscriber: {\r\n        email_address: user.email,\r\n      },\r\n    })\r\n  }\r\n\r\n  const btnStyle: IStyle = {\r\n    layout: 'vertical',\r\n    color: 'gold',\r\n    shape: 'rect',\r\n    label: 'paypal',\r\n    tagline: false,\r\n    ...(style || {}),\r\n  }\r\n\r\n  const Button = window.paypal.Buttons.driver('react', {\r\n    React,\r\n    ReactDOM,\r\n  })\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      createSubscription={!isAuthenticated ? undefined : _createSubscription}\r\n      onApprove={(data: IApprovalResponse, actions: IApprovalActions) => _onApprove(data, actions)}\r\n      style={btnStyle}\r\n      onClick={isAuthenticated ? undefined : login}\r\n      onCancel={onCancel}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PaypalButton\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport { Elements, useStripe } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport { SubscriptionApi } from 'api/subscriptionApi'\r\nimport GenericButton from 'components/input/generic_button'\r\nimport { PaypalPostSubscribeModal } from 'components/modals/paypal_post_subscribe_modal'\r\nimport PayPalButton from 'components/payment/paypal/paypalButton'\r\nimport { PaypalProvider } from 'context/usePaypal'\r\nimport qs from 'qs'\r\nimport React, { useState } from 'react'\r\nimport { IconContext } from 'react-icons'\r\nimport { logClick, logEvent, logSubscription } from 'utils/analytics'\r\nimport { isDev, STRIPE_KEY } from 'utils/env'\r\nimport useLogin from 'utils/hooks/useLogin'\r\nimport { ISubscriptionPlan, SubscriptionPlans } from 'utils/plans'\r\n\r\nconst PricingPlansComponent = () => {\r\n  const [paypalModalIsOpen, setPaypalModalIsOpen] = useState(false)\r\n\r\n  return (\r\n    <PaypalProvider>\r\n      <div className=\"container\">\r\n        <PlansHeader />\r\n\r\n        <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 justify-content-center text-center\">\r\n          {SubscriptionPlans.map((plan, i) => (\r\n            <PlanComponent\r\n              supportPlan={plan}\r\n              paypalModalIsOpen={paypalModalIsOpen}\r\n              setPaypalModalIsOpen={setPaypalModalIsOpen}\r\n              key={i}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"row text-center justify-content-center\">\r\n          <div className=\"col-12 col-sm-10 col-md-10 col-xl-8 col-xxl-6\">\r\n            <small>\r\n              <em>\r\n                AoS Reminders does not store your credit card information.\r\n                <br />\r\n                Subscriptions are managed by Stripe and PayPal. They can be canceled at any time.\r\n                <br />\r\n                You will have access to all subscription features until the end of your subscription, even if\r\n                you cancel the recurring payments.\r\n              </em>\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PaypalProvider>\r\n  )\r\n}\r\n\r\nconst PlansHeader = () => {\r\n  const hasSale = SubscriptionPlans.some(x => x.sale)\r\n\r\n  return (\r\n    <div className=\"col-12 bg-light text-center mb-3\">\r\n      <h2>\r\n        Subscription Plans\r\n        {hasSale && <span className=\"ml-2 badge badge-danger\">Sale!</span>}\r\n      </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface IPlanProps {\r\n  supportPlan: ISubscriptionPlan\r\n  paypalModalIsOpen: boolean\r\n  setPaypalModalIsOpen: (x: boolean) => void\r\n}\r\n\r\nconst PlanComponent = (props: IPlanProps) => {\r\n  const { supportPlan } = props\r\n  const { user, isAuthenticated } = useAuth0()\r\n  const { login } = useLogin({ origin: supportPlan.title })\r\n  const stripe = useStripe()\r\n\r\n  if (!stripe) return null\r\n\r\n  // When the customer clicks on the Subscribe button, redirect them to Stripe Checkout.\r\n  const handleStripeCheckout = async (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n\r\n    if (!user) return\r\n\r\n    logClick(supportPlan.title)\r\n\r\n    const plan = isDev ? supportPlan.stripe_dev : supportPlan.stripe_prod\r\n    const url = isDev ? 'localhost:3000' : 'aosreminders.com'\r\n\r\n    const item = { plan, quantity: 1 }\r\n\r\n    stripe\r\n      .redirectToCheckout({\r\n        items: [item],\r\n\r\n        // Meta\r\n        customerEmail: user.email, // Used to prefill checkout\r\n        clientReferenceId: user.email, // Included in the checkout.session.completed webhook\r\n\r\n        // Redirect after checkout\r\n        successUrl: `${window.location.protocol}//${url}/?${qs.stringify({\r\n          subscribed: true,\r\n          plan: supportPlan.title,\r\n        })}`,\r\n        cancelUrl: `${window.location.protocol}//${url}/?${qs.stringify({\r\n          canceled: true,\r\n          plan: supportPlan.title,\r\n        })}`,\r\n      })\r\n      .then(function (result) {\r\n        if (result.error) {\r\n          // If `redirectToCheckout` fails due to a browser or network\r\n          // error, display the localized error message to your customer.\r\n          console.error(result.error)\r\n          // var displayError = document.getElementById('error-message');\r\n          // displayError.textContent = result.error.message;\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"card mb-4 shadow-sm\">\r\n      <div className=\"card-header bg-themeDarkBluePrimary text-light\">\r\n        <h3 className=\"my-0 font-weight-normal\">{supportPlan.title}</h3>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h1 className=\"card-title pricing-card-title\">\r\n          ${supportPlan.monthly_cost}\r\n          <small className=\"text-muted\">/ month</small>\r\n        </h1>\r\n        <ul className=\"list-unstyled mt-3 mb-4\">\r\n          <li>\r\n            {!!supportPlan.discount_pct && (\r\n              <>\r\n                <span className=\"badge badge-pill badge-danger mb-2\">{supportPlan.discount_pct}% off!</span>\r\n                <br />\r\n              </>\r\n            )}\r\n            Total: ${supportPlan.cost}\r\n          </li>\r\n        </ul>\r\n\r\n        <div className={'mx-3'}>\r\n          <IconContext.Provider value={{ size: '1.2em' }}>\r\n            <GenericButton\r\n              type=\"button\"\r\n              className=\"btn btn btn-block btn-primary btn-pill py-2\"\r\n              onClick={isAuthenticated ? handleStripeCheckout : login}\r\n            >\r\n              Subscribe for {supportPlan.title}\r\n            </GenericButton>\r\n          </IconContext.Provider>\r\n        </div>\r\n\r\n        <PayPalComponent {...props} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PayPalComponent = (props: IPlanProps) => {\r\n  const { user } = useAuth0()\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n  const { paypal_dev, paypal_prod, title } = props.supportPlan\r\n\r\n  const handleSuccess = async () => {\r\n    setModalIsOpen(true)\r\n    props.setPaypalModalIsOpen(true)\r\n    logEvent(`Checkout-Subscribed-${title}`)\r\n    logSubscription(title, 'paypal')\r\n    try {\r\n      if (!user?.email) return null\r\n      // Request a ten-minute temporary grant while Paypal approvals happen in the background\r\n      await SubscriptionApi.requestGrant(user.email)\r\n    } catch (err) {\r\n      // pass\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    logEvent(`Checkout-Canceled-${title}`)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false)\r\n    props.setPaypalModalIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col mt-2\">\r\n      {!props.paypalModalIsOpen && (\r\n        <PayPalButton\r\n          onCancel={handleCancel}\r\n          onSuccess={handleSuccess}\r\n          planId={isDev ? paypal_dev : paypal_prod}\r\n          planTitle={title}\r\n        />\r\n      )}\r\n      {modalIsOpen && <PaypalPostSubscribeModal modalIsOpen={modalIsOpen} closeModal={closeModal} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst stripePromise = loadStripe(STRIPE_KEY)\r\n\r\nexport const PricingPlans = () => {\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <PricingPlansComponent />\r\n    </Elements>\r\n  )\r\n}\r\n","import { useAuth0 } from '@auth0/auth0-react'\r\nimport AlreadySubscribed from 'components/helpers/alreadySubscribed'\r\nimport { LinkNewTab } from 'components/helpers/link'\r\nimport { LoadingBody, LoadingHeader } from 'components/helpers/suspenseFallbacks'\r\nimport Contact from 'components/page/contact'\r\nimport { PricingPlans } from 'components/payment/pricingPlans'\r\nimport { useSubscription } from 'context/useSubscription'\r\nimport { useTheme } from 'context/useTheme'\r\nimport React, { lazy, Suspense, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { logClick, logPageView } from 'utils/analytics'\r\nimport { GITHUB_URL, ROUTES } from 'utils/env'\r\nimport useWindowSize from 'utils/hooks/useWindowSize'\r\n\r\nconst Navbar = lazy(() => import('components/page/navbar'))\r\n\r\nconst headerClass = `col-12 col-lg-8 col-xl-8 pt-5 mx-auto`\r\n\r\nconst Subscribe = () => {\r\n  const { isLoading } = useAuth0()\r\n  const { isSubscribed, isActive, getSubscription } = useSubscription()\r\n  const { theme } = useTheme()\r\n\r\n  useEffect(() => {\r\n    logPageView()\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getSubscription()\r\n  }, [getSubscription])\r\n\r\n  if (isLoading) return <LoadingBody />\r\n  if (isSubscribed && isActive) return <AlreadySubscribed />\r\n\r\n  return (\r\n    <div className={`d-block ${theme.bgColor}`}>\r\n      <div className={`${theme.headerColor} py-2`}>\r\n        <Suspense fallback={<LoadingHeader />}>\r\n          <Navbar />\r\n        </Suspense>\r\n      </div>\r\n\r\n      <Intro />\r\n\r\n      <div className={`container ${theme.bgColor} ${theme.text}`}>\r\n        <div className=\"row align-items-start justify-content-center mt-3\">\r\n          <CurrentFeatures />\r\n          <ComingSoon />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row py-5 bg-light justify-content-center jumbotron-fluid\">\r\n        <PricingPlans />\r\n      </div>\r\n\r\n      <ExamplesRow />\r\n\r\n      <div className={`container ${theme.bgColor} ${theme.text} text-center py-4`}>\r\n        <Contact size={'small'} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Subscribe\r\n\r\nconst ExamplesRow = () => {\r\n  return (\r\n    <div className=\"row py-5 mx-3 bg-light justify-content-center jumbotron-fluid\">\r\n      <MobileDarkModeDemo />\r\n      <div className={'col-12 col-xl-8 col-xxl-5'}>\r\n        <WebmWithFallback\r\n          webmUrl={'/img/import_demo.mp4'}\r\n          gifUrl={'/img/import_demo.gif'}\r\n          description={'Importing Warscroll Builder/Azyr files'}\r\n          label={'Demo-Import'}\r\n        />\r\n      </div>\r\n      {/* <StatsDemo /> */}\r\n      <div className={'col-12 col-xl-8 col-xxl-5'}>\r\n        <WebmWithFallback\r\n          webmUrl={'/img/save_load_demo.mp4'}\r\n          gifUrl={'/img/save_load_demo.gif'}\r\n          description={'Saving, loading, and deleting armies'}\r\n          label={'Demo-SaveLoad'}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const StatsDemo = () => {\r\n//   const { isMobile } = useWindowSize()\r\n//   return (\r\n//     <div className={'col-12 col-xl-8 col-xxl-5 text-center'}>\r\n//       <figure className=\"figure\">\r\n//         <img\r\n//           className={`figure-img img-fluid rounded img-thumbnail`}\r\n//           src={`/img/stats_demo_${isMobile ? `mobile` : `desktop`}.png`}\r\n//           alt=\"Subscribe to access advanced stats\"\r\n//         />\r\n//         <figcaption className=\"figure-caption text-center\">\r\n//           <strong>Advanced Stats</strong>\r\n//         </figcaption>\r\n//       </figure>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nconst MobileDarkModeDemo = () => {\r\n  const { isMobile } = useWindowSize()\r\n  if (!isMobile) return null\r\n  return (\r\n    <div className={'col-12'}>\r\n      <WebmWithFallback\r\n        webmUrl={'/img/dark_mode1.mp4'}\r\n        gifUrl={'/img/dark_mode1.gif'}\r\n        description={'Dark Mode'}\r\n        label={'Demo-DarkMode'}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Intro = () => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <div className={`${headerClass} ${theme.text}`}>\r\n      <img\r\n        className={`d-block mx-auto mb-4 img-fluid rounded-circle bg-white`}\r\n        src=\"/img/logo_medium_padding.png\"\r\n        width=\"120px\"\r\n        alt=\"Subscribe to support AoS Reminders\"\r\n      />\r\n      <h2>Support AoS Reminders</h2>\r\n      <p className=\"lead\">\r\n        <strong>\r\n          It takes a lot of time, effort, and money to keep this project going. While the core product will{' '}\r\n          <i>always</i> be free, I do offer this subscription service to those who wish to support AoS\r\n          Reminders.\r\n        </strong>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst featuresColClass = `col-12 col-lg-5 col-xl-5 col-xxl-5 mt-2`\r\n\r\nconst CurrentFeatures = () => (\r\n  <div className={featuresColClass}>\r\n    <p className=\"lead\">\r\n      <strong>What do you get when you subscribe?</strong>\r\n    </p>\r\n    <ul className=\"lead\">\r\n      <li>\r\n        <strong>NEW:</strong> Import lists from the new Warhammer App!\r\n      </li>\r\n      <li>Write, edit, and save notes!</li>\r\n      <li>\r\n        Access to <Link to={ROUTES.STATS}>advanced stats!</Link>\r\n      </li>\r\n      <li>Share army lists with your friends!</li>\r\n      <li>Spare your eyes! Turn on dark mode!</li>\r\n      <li>\r\n        Save, load, update, and delete your army lists from <strong>anywhere</strong> on <strong>any</strong>{' '}\r\n        device - even <strong>offline!</strong>\r\n      </li>\r\n      <li>\r\n        Import your army lists <strong>instantly</strong> from Azyr, Warscroll Builder, and Battlescribe.\r\n      </li>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nconst ComingSoon = () => (\r\n  <div className={featuresColClass}>\r\n    <p className=\"lead\">\r\n      <strong>Coming soon: </strong>\r\n    </p>\r\n    <ul className=\"lead\">\r\n      <li>\r\n        <i>Add custom reminders to any phase</i>\r\n      </li>\r\n      <li>\r\n        <i>Attach PDF/HTML lists to your Saved Army</i>\r\n      </li>\r\n      <li>\r\n        <i>\r\n          <strong>and much more!</strong>\r\n        </i>{' '}\r\n        - Check out our list of planned feature enhancements{' '}\r\n        <LinkNewTab href={`${GITHUB_URL}/labels/enhancement`} label={'Github'}>\r\n          on Github!\r\n        </LinkNewTab>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\ntype TWebmWithFallback = React.FC<{ webmUrl: string; gifUrl: string; description: string; label: string }>\r\n\r\nconst WebmWithFallback: TWebmWithFallback = ({ webmUrl, gifUrl, description, label }) => {\r\n  const supportsWebm = !!document.createElement('video').canPlayType\r\n\r\n  return (\r\n    <>\r\n      <figure className=\"figure\">\r\n        <LinkNewTab\r\n          href={supportsWebm ? webmUrl : gifUrl}\r\n          onClick={() => logClick(label)}\r\n          label={'Video URL'}\r\n        >\r\n          <video\r\n            preload=\"auto\"\r\n            loop={true}\r\n            poster={gifUrl}\r\n            autoPlay={true}\r\n            className=\"figure-img img-fluid rounded img-thumbnail\"\r\n          >\r\n            <source src={webmUrl} type=\"video/mp4\"></source>\r\n            <source src={webmUrl} type=\"video/webm\"></source>\r\n          </video>\r\n        </LinkNewTab>\r\n        <figcaption className=\"figure-caption text-center\">\r\n          <strong>{description}</strong>\r\n        </figcaption>\r\n      </figure>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}