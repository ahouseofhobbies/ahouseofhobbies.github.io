{"version":3,"sources":["../../../Warhammer/AOS Reminders/src/components/print/printArmy.tsx"],"names":["PrintArmy","factionName","subFactionName","selections","allySelections","realmscape","useSelector","selectors","selectCurrentArmy","artifacts","battalions","command_abilities","command_traits","core_rules","endless_spells","flavors","prayers","mount_traits","scenery","spells","triumphs","grand_strategies","units","realm","_jsxs","_Fragment","children","className","_jsx","titleCase","ItemsDisplayComponent","name","items","pluralize","Object","keys","map","_allySelections","concat","_allySelections2","props","title","length","itemsText","useMemo","getWrappedItemText","reduce","a","b","i","lineLength","index","text","line","Fragment"],"mappings":"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","file":"static/js/39.9754e2bf.chunk.js","sourcesContent":["import { selectors } from 'ducks'\r\nimport { Fragment, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { titleCase } from 'utils/textUtils'\r\n\r\nconst PrintArmy = () => {\r\n  const { factionName, subFactionName, selections, allySelections, realmscape } = useSelector(\r\n    selectors.selectCurrentArmy\r\n  )\r\n  const {\r\n    artifacts,\r\n    battalions,\r\n    command_abilities,\r\n    command_traits,\r\n    core_rules,\r\n    endless_spells,\r\n    flavors,\r\n    prayers,\r\n    mount_traits,\r\n    scenery,\r\n    spells,\r\n    triumphs,\r\n    grand_strategies,\r\n    units,\r\n  } = selections\r\n  const realm = realmscape ? [realmscape] : []\r\n  return (\r\n    <>\r\n      <div className={'row text-center mt-4 mb-1 d-none d-print-block'}>\r\n        <h5>{titleCase(factionName)}</h5>\r\n        {!!subFactionName && titleCase(factionName) !== titleCase(subFactionName) && (\r\n          <h5>SubFaction: {titleCase(subFactionName)}</h5>\r\n        )}\r\n      </div>\r\n      <div className={'row text-center d-none d-print-block'}>\r\n        <ItemsDisplayComponent name={'Flavor'} items={flavors} />\r\n        <ItemsDisplayComponent name={'Battalion'} items={battalions} />\r\n        <ItemsDisplayComponent name={'Unit'} items={units} />\r\n        <ItemsDisplayComponent name={'Artifact'} items={artifacts} />\r\n\r\n        <ItemsDisplayComponent name={'Command Trait'} items={command_traits} />\r\n        <ItemsDisplayComponent name={'Mount Trait'} items={mount_traits} />\r\n        <ItemsDisplayComponent name={'Command Abilities'} items={command_abilities} pluralize={false} />\r\n        <ItemsDisplayComponent name={'Spell'} items={spells} />\r\n        <ItemsDisplayComponent name={'Prayer'} items={prayers} />\r\n        <ItemsDisplayComponent name={'Endless Spell'} items={endless_spells} />\r\n        <ItemsDisplayComponent name={'Scenery'} items={scenery} pluralize={false} />\r\n        <ItemsDisplayComponent name={'Triumph'} items={triumphs} />\r\n        <ItemsDisplayComponent name={'Core Rule'} items={core_rules} />\r\n        <ItemsDisplayComponent name={'Grand Strategy'} items={grand_strategies} pluralize={false} />\r\n        <ItemsDisplayComponent name={'Genral\\'s Handbook'} items={realm} pluralize={false} />\r\n\r\n        {Object.keys(allySelections).map(name => (\r\n          <ItemsDisplayComponent\r\n            name={`Allied ${titleCase(name)} Unit`}\r\n            items={allySelections[name as keyof typeof allySelections]?.units || []}\r\n            key={name}\r\n          />\r\n        ))}\r\n\r\n        {Object.keys(allySelections).map(name => (\r\n          <ItemsDisplayComponent\r\n            name={`Allied ${titleCase(name)} Battalion`}\r\n            items={allySelections[name as keyof typeof allySelections]?.battalions || []}\r\n            key={name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PrintArmy\r\n\r\n/**\r\n * Here be dragons\r\n * @param title\r\n * @param items\r\n */\r\nconst getWrappedItemText = (title: string, items: string[]) => {\r\n  if (!items.length) return []\r\n  const wrapLimit = 70\r\n  return items.reduce(\r\n    (a, b, i) => {\r\n      if (i === 0) return a\r\n      if (a.lineLength + 3 + b.length > wrapLimit) {\r\n        a.lineLength = b.length\r\n        a.index = a.index + 1\r\n        a.text[a.index] = b\r\n      } else {\r\n        a.lineLength = a.lineLength + b.length\r\n        a.text[a.index] = `${a.text[a.index]} | ${b}`\r\n      }\r\n      return a\r\n    },\r\n    { text: [items[0]], lineLength: title.length + 2, index: 0 }\r\n  ).text\r\n}\r\n\r\nconst ItemsDisplayComponent = (props: { name: string; items: string[]; pluralize?: boolean }) => {\r\n  const { items = [], name, pluralize = true } = props\r\n  const title = !pluralize ? name : items.length > 1 ? `${name}s` : name\r\n  const itemsText = useMemo(() => getWrappedItemText(title, items), [title, items])\r\n  if (!items.length) return null\r\n\r\n  return (\r\n    <div className=\"col px-5\">\r\n      <strong>{title}:</strong>{' '}\r\n      {itemsText.map((line, i) => (\r\n        <Fragment key={i}>\r\n          {line}\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}