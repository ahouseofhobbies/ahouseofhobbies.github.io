{"version":3,"sources":["../../../Warhammer/AOS Reminders/src/components/input/toolbar/toolbar.tsx"],"names":["AddAllyButton","lazy","ClearArmyButton","DownloadPDFButton","ImportArmyButton","ImportContainer","ResetChangesBtn","SaveArmyBtn","ShareArmyBtn","ShowSavedArmies","ShowSavedArmiesBtn","UpdateArmyBtn","updateAllyArmy","armyActions","resetAllySelection","selectionActions","btnWrapperClass","Toolbar","dispatch","useDispatch","isGameMode","isOnline","useAppStatus","relevantNotes","useGetReminders","loadedArmy","armyHasChanges","useSavedArmies","isSubscribed","isActive","useSubscription","currentArmy","useSelector","selectors","selectCurrentArmy","factionName","selectFactionName","allyFactionNames","selectAllyFactionNames","isShowingSavedArmies","setIsShowingSavedArmies","useState","edit","game","isShowingImport","setIsShowingWarscrollImport","currentViewMode","hasChanges","changedKeys","useMemo","hasEntries","armyHasEntries","showOrHideSavedArmies","show","s","showSavedArmies","handleAllyClick","useCallback","e","preventDefault","newAllyFaction","without","SUPPORTED_FACTIONS","Army","getArmy","_jsx","_Fragment","_jsxs","className","children","Suspense","fallback","LoadingBtn","setAllyClick","id","hidden","showImportArmy","hide","hideImportArmy","isShowing","hideSavedArmies"],"mappings":"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","file":"static/js/37.29248c38.chunk.js","sourcesContent":["import { LoadingBtn } from 'components/helpers/suspenseFallbacks'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useSavedArmies } from 'context/useSavedArmies'\r\nimport { useSubscription } from 'context/useSubscription'\r\nimport { armyActions, selectionActions, selectors } from 'ducks'\r\nimport { without } from 'lodash'\r\nimport { SUPPORTED_FACTIONS } from 'meta/factions'\r\nimport React, { lazy, Suspense, useCallback, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IArmy } from 'types/army'\r\nimport { armyHasEntries } from 'utils/armyUtils'\r\nimport { getArmy } from 'utils/getArmy/getArmy'\r\nimport useGetReminders from 'utils/hooks/useGetReminders'\r\n\r\nconst AddAllyButton = lazy(() => import('components/input/toolbar/add_ally_btn'))\r\nconst ClearArmyButton = lazy(() => import('components/input/toolbar/clear_army_btn'))\r\nconst DownloadPDFButton = lazy(() => import('components/print/pdfButton'))\r\nconst ImportArmyButton = lazy(() => import('components/input/toolbar/import_army_btn'))\r\nconst ImportContainer = lazy(() => import('components/input/importPdf/drop_container'))\r\nconst ResetChangesBtn = lazy(() => import('components/input/savedArmies/reset_changes_btn'))\r\nconst SaveArmyBtn = lazy(() => import('components/input/savedArmies/save_army_btn'))\r\nconst ShareArmyBtn = lazy(() => import('components/input/shareArmy/share_army_btn'))\r\nconst ShowSavedArmies = lazy(() => import('components/input/savedArmies/saved_armies'))\r\nconst ShowSavedArmiesBtn = lazy(() => import('components/input/savedArmies/show_saved_armies_btn'))\r\nconst UpdateArmyBtn = lazy(() => import('components/input/savedArmies/update_army_btn'))\r\n\r\nconst { updateAllyArmy } = armyActions\r\nconst { resetAllySelection } = selectionActions\r\n\r\nconst btnWrapperClass = `col-6 col-sm-6 col-md-6 col-lg-3 col-xl-3 col-xxl-2 px-2 px-sm-3 pb-2`\r\n\r\nconst Toolbar = () => {\r\n  const dispatch = useDispatch()\r\n  const { isGameMode, isOnline } = useAppStatus()\r\n  const { relevantNotes } = useGetReminders()\r\n  const { loadedArmy, armyHasChanges } = useSavedArmies()\r\n  const { isSubscribed, isActive } = useSubscription()\r\n\r\n  const currentArmy = useSelector(selectors.selectCurrentArmy)\r\n  const factionName = useSelector(selectors.selectFactionName)\r\n  const allyFactionNames = useSelector(selectors.selectAllyFactionNames)\r\n\r\n  const [isShowingSavedArmies, setIsShowingSavedArmies] = useState({ edit: false, game: false })\r\n  const [isShowingImport, setIsShowingWarscrollImport] = useState(false)\r\n\r\n  const currentViewMode = isGameMode ? 'game' : 'edit'\r\n\r\n  const { hasChanges, changedKeys } = useMemo(\r\n    () => armyHasChanges(currentArmy),\r\n    [currentArmy, armyHasChanges]\r\n  )\r\n\r\n  const hasEntries = useMemo(() => armyHasEntries(currentArmy, relevantNotes), [currentArmy, relevantNotes])\r\n\r\n  const showOrHideSavedArmies = (show: boolean) => {\r\n    setIsShowingSavedArmies(s => ({ ...s, [currentViewMode]: show }))\r\n  }\r\n\r\n  const showSavedArmies = () => showOrHideSavedArmies(true)\r\n  const hideSavedArmies = () => showOrHideSavedArmies(false)\r\n\r\n  const showImportArmy = () => setIsShowingWarscrollImport(true)\r\n  const hideImportArmy = () => setIsShowingWarscrollImport(false)\r\n\r\n  const handleAllyClick = useCallback(\r\n    (e: React.MouseEvent) => {\r\n      e.preventDefault()\r\n      const newAllyFaction = without(SUPPORTED_FACTIONS, factionName, ...allyFactionNames)[0]\r\n      dispatch(resetAllySelection(newAllyFaction))\r\n      dispatch(updateAllyArmy({ factionName: newAllyFaction, Army: getArmy(newAllyFaction) as IArmy }))\r\n    },\r\n    [allyFactionNames, dispatch, factionName]\r\n  )\r\n\r\n  if (isGameMode) return <></>\r\n\r\n  return (\r\n    <div className=\"container d-print-none\">\r\n      <div className={`row justify-content-center pt-3 mx-xl-5 px-xl-5`}>\r\n        <div className={btnWrapperClass}>\r\n          <Suspense fallback={<LoadingBtn />}>\r\n            <ClearArmyButton />\r\n          </Suspense>\r\n        </div>\r\n        <div className={btnWrapperClass}>\r\n          <Suspense fallback={<LoadingBtn />}>\r\n            <AddAllyButton setAllyClick={handleAllyClick} />\r\n          </Suspense>\r\n        </div>\r\n        <div className={btnWrapperClass}>\r\n          <Suspense fallback={<LoadingBtn />}>\r\n            <DownloadPDFButton />\r\n          </Suspense>\r\n        </div>\r\n        {isOnline && loadedArmy && hasChanges && (\r\n          <>\r\n            <div className={btnWrapperClass}>\r\n              <UpdateArmyBtn\r\n                currentArmy={{ ...currentArmy, ...loadedArmy }}\r\n                changedKeys={changedKeys}\r\n                id={loadedArmy.id}\r\n              />\r\n            </div>\r\n            <div className={btnWrapperClass}>\r\n              <ResetChangesBtn />\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className={btnWrapperClass} hidden={!hasEntries}>\r\n          <Suspense fallback={<LoadingBtn />}>\r\n            <SaveArmyBtn showSavedArmies={showSavedArmies} />\r\n          </Suspense>\r\n        </div>\r\n        <div className={btnWrapperClass}>\r\n          <Suspense fallback={<LoadingBtn />}>\r\n            <ImportArmyButton\r\n              show={showImportArmy}\r\n              hide={hideImportArmy}\r\n              isShowing={isShowingImport}\r\n              // TODO: Enable after a couple weeks from now (9/9/19)\r\n              // isSubscribed={isSubscribed}\r\n              isSubscribed={true}\r\n            />\r\n          </Suspense>\r\n        </div>\r\n        <div className={btnWrapperClass} hidden={!hasEntries}>\r\n          <Suspense fallback={<LoadingBtn />}>\r\n            <ShareArmyBtn />\r\n          </Suspense>\r\n        </div>\r\n        <div className={btnWrapperClass} hidden={isOnline && (!isSubscribed || !isActive)}>\r\n          <Suspense fallback={<></>}>\r\n            <ShowSavedArmiesBtn\r\n              isShowingSavedArmies={isShowingSavedArmies[currentViewMode]}\r\n              hideSavedArmies={hideSavedArmies}\r\n              showSavedArmies={showSavedArmies}\r\n            />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n\r\n      <div hidden={!isShowingImport}>\r\n        <Suspense fallback={<></>}>\r\n          <ImportContainer />\r\n        </Suspense>\r\n      </div>\r\n\r\n      <div hidden={!isShowingSavedArmies[currentViewMode]}>\r\n        <Suspense fallback={<></>}>\r\n          <ShowSavedArmies />\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toolbar\r\n"],"sourceRoot":""}