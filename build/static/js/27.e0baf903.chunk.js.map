{"version":3,"sources":["components/page/contact.tsx","components/info/donate.tsx","components/info/offline.tsx","components/page/footer.tsx"],"names":["Contact","_ref","size","isOffline","useAppStatus","isDark","useTheme","btnClass","concat","_jsxs","_Fragment","children","_jsx","LinkButton","href","GITHUB_URL","Icon","FaGithub","text","FaEnvelopeOpenText","FaDiscord","DonateComponent","theme","className","bgColor","role","IconContext","Provider","value","PayPalButton","handleClick","e","preventDefault","logClick","window","open","props","FaCcPaypal","onClick","style","cursor","OfflineComponent","isOnline","userName","LocalUserName","get","card","FiWifiOff","Footer","Disclaimer","ReleaseNotes","LinkNewTab","label","pkgJson","version"],"mappings":"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","file":"static/js/27.e0baf903.chunk.js","sourcesContent":["import { LinkButton } from 'components/helpers/link'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { FaDiscord, FaEnvelopeOpenText, FaGithub } from 'react-icons/fa'\r\nimport { GITHUB_URL } from 'utils/env'\r\n\r\ninterface IContactProps {\r\n  size?: 'normal' | 'small' | 'large'\r\n}\r\n\r\nconst Contact = ({ size = 'normal' }: IContactProps) => {\r\n  const { isOffline } = useAppStatus()\r\n  const { isDark } = useTheme()\r\n  const btnSize = size === 'small' ? 'btn-sm' : size === 'large' ? 'btn-lg' : ''\r\n  const btnClass = `btn ${btnSize} btn-outline-${isDark ? `light` : `dark`} mx-1`\r\n\r\n  if (isOffline) return null\r\n\r\n  return (\r\n    <>\r\n      <LinkButton href={GITHUB_URL} btnClass={btnClass} Icon={FaGithub} text={'Github'} />\r\n      <LinkButton\r\n        href=\"mailto:aosreminders@gmail.com\"\r\n        btnClass={btnClass}\r\n        Icon={FaEnvelopeOpenText}\r\n        text={'Email'}\r\n      />\r\n      {/* <LinkButton href=\"//reddit.com/r/AoSReminders/\" btnClass={btnClass} Icon={FaReddit} text={'Reddit'} /> */}\r\n      <LinkButton href=\"//discord.gg/2nt9Fxp\" btnClass={btnClass} Icon={FaDiscord} text={'Discord'} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","// import GenericButton from 'components/input/generic_button'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport React from 'react'\r\n// import CopyToClipboard from 'react-copy-to-clipboard'\r\nimport { IconContext } from 'react-icons'\r\nimport { FaCcPaypal } from 'react-icons/fa'\r\nimport { logClick } from 'utils/analytics'\r\n\r\nexport const DonateComponent = () => {\r\n  const { isOffline } = useAppStatus()\r\n  const { theme } = useTheme()\r\n  // const [ethClicked, setEthClicked] = useState(false)\r\n  // const [btcClicked, setBtcClicked] = useState(false)\r\n\r\n  // const handleEthClick = (e: React.MouseEvent) => {\r\n  //   e.preventDefault()\r\n  //   logClick('DonateETH')\r\n  //   setEthClicked(true)\r\n  //   setBtcClicked(false)\r\n  // }\r\n\r\n  // const handleBtcClick = (e: React.MouseEvent) => {\r\n  //   e.preventDefault()\r\n  //   logClick('DonateBTC')\r\n  //   setBtcClicked(true)\r\n  //   setEthClicked(false)\r\n  // }\r\n\r\n  const handlePaypalClick = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    logClick('DonatePayPal')\r\n    window.open('//paypal.me/ahouseofhobbies')\r\n  }\r\n\r\n  if (isOffline) return null\r\n\r\n  return (\r\n    <>\r\n      <div className={`container ${theme.bgColor} pt-4`}>\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className={`col-10 col-sm-8 col-md-6 col-lg-4 col-xl-4 card ${theme.bgColor} ${theme.text} py-3`}\r\n          >\r\n            {/* <div className=\"row justify-content-center d-print-none\">\r\n              <div className=\"col mx-2\">\r\n                <DisplayWallet ethActive={ethClicked} btcActive={btcClicked} />\r\n              </div>\r\n            </div> */}\r\n            <div className=\"row d-flex justify-content-center d-print-none\">\r\n              <div className=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Donate\">\r\n                <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"Donate options\">\r\n                  <IconContext.Provider value={{ size: '2.2em' }}>\r\n                    <PayPalButton handleClick={handlePaypalClick} />\r\n                    {/* <EthButton handleClick={handleEthClick} />\r\n                    <BtcButton handleClick={handleBtcClick} /> */}\r\n                  </IconContext.Provider>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <small className=\"text-center mt-3\">\r\n              Creating this took a lot of time and effort.\r\n              <br />\r\n              If you'd like to thank me, buy me a beer!\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// const DisplayWallet = ({ ethActive, btcActive }: { ethActive: boolean; btcActive: boolean }) => {\r\n//   const [copied, setCopied] = useState(false)\r\n//   const handleSetCopied = () => {\r\n//     setCopied(true)\r\n//     setTimeout(() => {\r\n//       setCopied(false)\r\n//     }, 5000)\r\n//   }\r\n//   const ethWallet = '0x0656E46AA9dFbB379887dD371e6f078AcE472E33'\r\n//   const btcWallet = '3JqXcy5qdoNq4DDRsJRfsFeozuhkapgBR4'\r\n//   const currentWallet = ethActive ? ethWallet : btcWallet\r\n//   const isHidden = !ethActive && !btcActive\r\n\r\n//   return (\r\n//     <div className={`row ${isHidden ? `d-none` : `d-flex mt-1 mb-3`} justify-content-center`}>\r\n//       <small className=\"text-muted\">{ethActive ? `ETH` : `BTC`} Wallet Address</small>\r\n//       <WalletCopyInput currentWallet={currentWallet} setCopied={handleSetCopied} />\r\n//       {copied && <small className=\"text-success\">Copied to clipboard.</small>}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// const WalletCopyInput = ({ currentWallet, setCopied }: { currentWallet: string; setCopied: () => void }) => (\r\n//   <div className=\"input-group\">\r\n//     <input\r\n//       type=\"text\"\r\n//       className=\"form-control\"\r\n//       aria-label=\"Copy to clipboard\"\r\n//       value={currentWallet}\r\n//       disabled\r\n//     />\r\n//     <div className=\"input-group-append\">\r\n//       <CopyToClipboard text={currentWallet} onCopy={setCopied}>\r\n//         <GenericButton className=\"btn btn-light\">\r\n//           <FaRegCopy />\r\n//         </GenericButton>\r\n//       </CopyToClipboard>\r\n//     </div>\r\n//   </div>\r\n// )\r\n\r\ntype TBtnProps = React.FC<{ handleClick: (e: React.MouseEvent) => void }>\r\n\r\n// const BtcButton: TBtnProps = props => (\r\n//   <FaBtc onClick={props.handleClick} className={'mx-2'} style={{ cursor: 'pointer' }} />\r\n// )\r\n// const EthButton: TBtnProps = props => (\r\n//   <FaEthereum onClick={props.handleClick} className={'mx-2'} style={{ cursor: 'pointer' }} />\r\n// )\r\nconst PayPalButton: TBtnProps = props => (\r\n  <FaCcPaypal onClick={props.handleClick} className={'mx-2'} style={{ cursor: 'pointer' }} />\r\n)\r\n","import { useAppStatus } from 'context/useAppStatus'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { FiWifiOff } from 'react-icons/fi'\r\nimport { LocalUserName } from 'utils/localStore'\r\n\r\nconst OfflineComponent = () => {\r\n  const { isOnline } = useAppStatus()\r\n  const { theme } = useTheme()\r\n\r\n  if (isOnline) return null\r\n\r\n  const userName = LocalUserName.get()\r\n\r\n  return (\r\n    <div className=\"container pt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div\r\n          className={`col-12 col-sm-8 col-md-6 col-lg-6 col-xl-6 col-xxl-4 ${theme.card} ${theme.bgColor} ${theme.text} py-3 text-center`}\r\n        >\r\n          <p className=\"text-danger\">\r\n            <FiWifiOff className=\"mr-2\" />\r\n            You are in <strong>Offline</strong> mode.\r\n            <FiWifiOff className=\"ml-2\" />\r\n          </p>\r\n          <p>Your capabilites are limited in this mode.</p>\r\n          You cannot save a new army.\r\n          {!!userName && (\r\n            <>\r\n              <br />\r\n              You cannot update or delete armies.\r\n              <br />\r\n              You cannot access your profile.\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OfflineComponent\r\n","import { LinkNewTab } from 'components/helpers/link'\r\nimport { DonateComponent } from 'components/info/donate'\r\nimport OfflineComponent from 'components/info/offline'\r\nimport Contact from 'components/page/contact'\r\nimport { useTheme } from 'context/useTheme'\r\nimport pkgJson from '../../../package.json'\r\n\r\n/**\r\n * Hidden when printing\r\n */\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container d-print-none\">\r\n      <DonateComponent />\r\n      <OfflineComponent />\r\n      <Disclaimer />\r\n      <div className=\"row text-center pt-2\">\r\n        <div className=\"col\">\r\n          <Contact size=\"small\" />\r\n        </div>\r\n      </div>\r\n      <ReleaseNotes />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n\r\nconst Disclaimer = () => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <div className={`row justify-content-center text-center ${theme.bgColor} pt-0`}>\r\n      <div className=\"col-12 col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n        <small className={`DisclaimerText ${theme.text}`}>\r\n          Disclaimer: This tool is in no way endorsed or sanctioned by Games Workshop - it is unofficial and\r\n          fan-made.\r\n          <br />I take absolutely no credit for any of the Games Workshop content displayed above.\r\n        </small>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ReleaseNotes = () => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <div className={`row text-center ${theme.bgColor} pt-1 pb-2`}>\r\n      <div className=\"col\">\r\n        <LinkNewTab\r\n          href=\"https://github.com/daviseford/aos-reminders/releases/latest\"\r\n          label={'GithubLatestRelease'}\r\n        >\r\n          <small className={theme.text}>AoS Reminders v{pkgJson.version} - Release Notes</small>\r\n        </LinkNewTab>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}