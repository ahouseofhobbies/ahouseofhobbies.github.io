{"version":3,"sources":["components/input/savedArmies/update_army_btn.tsx"],"names":["UpdateArmyBtn","_ref","currentArmy","id","changedKeys","isGameMode","useAppStatus","relevantNotes","useGetReminders","updateArmy","useSavedArmies","isDark","useTheme","hiddenReminders","useSelector","selectors","selectReminders","isSaving","setIsSaving","useState","canUpdate","useMemo","armyHasEntries","btnClass","concat","_jsxs","GenericButton","className","onClick","async","e","preventDefault","payload","prepareArmy","notes","err","console","error","logEvent","factionName","children","_jsx","role","FaCloudUploadAlt"],"mappings":"uHAAA,4GAkEeA,UA/CuBC,IAAuC,IAAtC,YAAEC,EAAW,GAAEC,EAAE,YAAEC,GAAaH,EACrE,MAAM,WAAEI,GAAeC,eACjB,cAAEC,GAAkBC,eACpB,WAAEC,GAAeC,eACjB,OAAEC,GAAWC,cAEbC,EAAkBC,YAAYC,IAAUC,kBAEvCC,EAAUC,GAAeC,oBAAS,GAEnCC,EAAYC,mBAAQ,IAAMC,YAAepB,EAAaK,IAAgB,CAACL,EAAaK,IAmBpFgB,EAAqB,OAAAC,OAChBb,EAAM,uBADAN,EAC2B,aACA,0BAE5C,OAAKe,EAGHK,eAACC,IAAa,CAACC,UAAWJ,EAAUK,QAxBlBC,UAClBC,EAAEC,iBACFb,GAAY,GACZ,MAAMc,EAAUC,YACd,IAAK/B,EAAaW,kBAAiBqB,MAAO3B,GAC1C,SACAH,GAEF,UACQK,EAAWN,EAAI6B,EACvB,CAAE,MAAOG,GACPC,QAAQC,MAAMF,EAChB,CACAjB,GAAY,GACZoB,YAAS,cAADd,OAAetB,EAAYqC,aAAc,EAUQC,SAAA,CACtDvB,EACCwB,cAAA,QAAMd,UAAU,wCAAwCe,KAAK,SAAS,cAAY,SAElFD,cAACE,IAAgB,CAAChB,UAAU,SAC3B,IACFV,EAAQ,4BATU,IAUL,C","file":"static/js/33.0ee99052.chunk.js","sourcesContent":["import GenericButton from 'components/input/generic_button'\r\nimport { useAppStatus } from 'context/useAppStatus'\r\nimport { useSavedArmies } from 'context/useSavedArmies'\r\nimport { useTheme } from 'context/useTheme'\r\nimport { selectors } from 'ducks'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { FaCloudUploadAlt } from 'react-icons/fa'\r\nimport { useSelector } from 'react-redux'\r\nimport { ISavedArmy } from 'types/savedArmy'\r\nimport { logEvent } from 'utils/analytics'\r\nimport { armyHasEntries, prepareArmy } from 'utils/armyUtils'\r\nimport useGetReminders from 'utils/hooks/useGetReminders'\r\n\r\ntype TUpdateArmyBtn = React.FC<{\r\n  id: string\r\n  currentArmy: ISavedArmy\r\n  changedKeys: string[]\r\n}>\r\n\r\nconst UpdateArmyBtn: TUpdateArmyBtn = ({ currentArmy, id, changedKeys }) => {\r\n  const { isGameMode } = useAppStatus()\r\n  const { relevantNotes } = useGetReminders()\r\n  const { updateArmy } = useSavedArmies()\r\n  const { isDark } = useTheme()\r\n\r\n  const hiddenReminders = useSelector(selectors.selectReminders)\r\n\r\n  const [isSaving, setIsSaving] = useState(false)\r\n\r\n  const canUpdate = useMemo(() => armyHasEntries(currentArmy, relevantNotes), [currentArmy, relevantNotes])\r\n\r\n  const handleClick = async (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    setIsSaving(true)\r\n    const payload = prepareArmy(\r\n      { ...currentArmy, hiddenReminders, notes: relevantNotes },\r\n      'update',\r\n      changedKeys\r\n    )\r\n    try {\r\n      await updateArmy(id, payload)\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n    setIsSaving(false)\r\n    logEvent(`UpdateArmy-${currentArmy.factionName}`)\r\n  }\r\n\r\n  const btnClass = isGameMode\r\n    ? `btn ${isDark ? `btn-outline-light` : ``} btn-block`\r\n    : `btn ${isDark ? `btn-outline-light` : ``} btn-success btn-block`\r\n\r\n  if (!canUpdate) return null\r\n\r\n  return (\r\n    <GenericButton className={btnClass} onClick={handleClick}>\r\n      {isSaving ? (\r\n        <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n      ) : (\r\n        <FaCloudUploadAlt className=\"mr-2\" />\r\n      )}{' '}\r\n      {isSaving ? `Updating` : `Update Army`}\r\n    </GenericButton>\r\n  )\r\n}\r\n\r\nexport default UpdateArmyBtn\r\n"],"sourceRoot":""}